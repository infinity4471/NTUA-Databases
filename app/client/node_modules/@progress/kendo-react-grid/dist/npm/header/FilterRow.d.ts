import * as React from 'react';
import { CompositeFilterDescriptor, SortDescriptor } from '@progress/kendo-data-query';
import { ExtendedColumnProps } from '../GridColumn';
import { GridFilterCellProps } from '../interfaces/GridFilterCellProps';
import { GridFilterOperators } from '../interfaces/GridFilterOperators';
/**
 * @hidden
 */
export interface FilterRowProps {
    columns: ExtendedColumnProps[];
    filter?: CompositeFilterDescriptor;
    filterOperators: GridFilterOperators;
    filterChange?: (filter: CompositeFilterDescriptor | null, syntheticEvent: React.SyntheticEvent<any>) => any;
    sort?: SortDescriptor[];
    cellRender?: (defaultRendering: React.ReactElement<any> | null, props: GridFilterCellProps) => React.ReactElement<any> | null;
}
/**
 *
 * @hidden
 */
export declare class FilterRow extends React.Component<FilterRowProps, {}> {
    headerCellClassName(field?: string, locked?: boolean): string;
    setFilter(value: string | number, operator: string | Function, field: string | undefined, e: React.SyntheticEvent<any>): void;
    render(): JSX.Element;
}
