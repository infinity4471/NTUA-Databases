var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
var tagClassName = 'k-button';
var focusedTagClassName = tagClassName + ' k-state-focused';
var preventDefault = function (event) { return event.preventDefault(); };
var stopPropagation = function (event) { return event.stopPropagation(); };
/**
 * @hidden
 */
var TagList = /** @class */ (function (_super) {
    __extends(TagList, _super);
    function TagList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TagList.prototype.render = function () {
        var _this = this;
        var _a = this.props, data = _a.data, guid = _a.guid;
        return (React.createElement("ul", { className: "k-reset", role: "listbox", id: 'tagslist-' + guid }, data.map(function (tagData) {
            var tag = (React.createElement("li", { className: tagData === _this.props.focused ? focusedTagClassName : tagClassName, key: tagData.text, id: "tag-" + guid + "-" + tagData.text.replace(/\s+/g, '-'), onMouseDown: preventDefault, onClick: stopPropagation, "aria-selected": true, role: "option", "aria-setsize": data.length },
                React.createElement("span", null, tagData.text),
                React.createElement("span", { "aria-label": "delete", className: "k-select", onClick: function (e) { return _this.props.onTagDelete.call(undefined, tagData.data, e); } },
                    React.createElement("span", { className: "k-icon k-i-close" }))));
            return _this.props.tagRender ?
                _this.props.tagRender(tagData, tag) : tag;
        })));
    };
    return TagList;
}(React.Component));
export default TagList;
//# sourceMappingURL=TagList.js.map