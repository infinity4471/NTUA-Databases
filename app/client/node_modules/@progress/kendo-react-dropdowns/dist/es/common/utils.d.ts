/**
 * @hidden
 */
declare const isPresent: (value: any) => boolean;
/**
 * @hidden
 */
declare const sameCharsOnly: (word: string, character: string) => boolean;
/**
 * @hidden
 */
declare const shuffleData: (data: any[], splitIndex: number, defaultItem: any) => any[];
/**
 * @hidden
 */
declare const matchText: (text: string, word: string, ignoreCase?: boolean) => boolean;
/**
 * @hidden
 */
declare const scrollToItem: (scrollElem: HTMLDivElement, itemHeight: number, itemIndex: number, translate: number, virtualScroll: boolean) => void;
/**
 * @hidden
 */
declare const itemIndexStartsWith: (items: any[], text?: string, field?: string) => number;
/**
 * @hidden
 */
declare const getItemIndexByText: (data: any[], text: string, textField?: string, matchCase?: boolean) => number;
/**
 * @hidden
 */
declare const getItemValue: (item: any, field?: string) => any;
/**
 * @hidden
 */
declare const matchDataCollections: (data1?: any[], data2?: any[], key?: string) => boolean;
/**
 * @hidden
 */
declare const removeDataItems: (items: any[], toRemove: any[], key?: string) => void;
/**
 * @hidden
 */
declare const areSame: (item1: any, item2: any, key?: string) => boolean;
/**
 * @hidden
 */
declare const getFocusedItem: (data: any[], value?: string, textField?: string) => number;
/**
 * @hidden
 */
declare const suggestValue: (value?: string, data?: any[], textField?: string) => string;
/**
 * @hidden
 */
declare const preventDefaultNonInputs: (event: any) => void;
export { isPresent, sameCharsOnly, shuffleData, matchText, scrollToItem, itemIndexStartsWith, getItemIndexByText, getItemValue, matchDataCollections, removeDataItems, areSame, getFocusedItem, preventDefaultNonInputs, suggestValue };
