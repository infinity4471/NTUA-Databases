import * as React from 'react';
import * as PropTypes from 'prop-types';
import { AnimationInterface } from './AnimationInterface';
/**
 * Represent the props of the [KendoReact Fade Animation component]({% slug animationtypes_animation %}#toc-fade).
 *
 * @example
 * ```html-preview
 * <style>
 * .content {
 *  width: 100px;
 *  padding: 10px;
 *  color: #787878;
 *  background-color: #fcf7f8;
 *  font-size: 13px;
 *  font-family: Helvetica, Arial, sans-serif;
 *  letter-spacing: 1px;
 *  text-align: center;
 *  border: 1px solid rgba(0,0,0,.05);
 * }
 * </style>
 * ```
 * ```jsx
 * class App extends React.Component {
 *    constructor(props) {
 *        super(props);
 *        this.state = { index: 1 };
 *    }
 *    onClick = () => {
 *        this.setState({
 *            index: this.state.index + 1
 *        });
 *    }
 *    render() {
 *        const key = new Date().getTime();
 *        return (
 *            <div>
 *                <dl>
 *                    <dt>
 *                        Fade element:
 *                    </dt>
 *                    <dd>
 *                        <button className="k-button" onClick={this.onClick}>Animate</button>
 *                    </dd>
 *                </dl>
 *                <Fade >
 *                    <div className="content" key={key}>{this.state.index}</div>
 *                </Fade>
 *            </div>
 *        );
 *  }
 * }
 * ReactDOM.render(
 *    <App />,
 *    document.querySelector('my-app')
 * );
 * ```
 */
export interface FadeProps extends AnimationInterface {
    /**
     * After the element reaches its exit state, it is no longer available in the DOM. If a DOM operation is required, access it trough the `childFactory` function.
     */
    childFactory?: any;
    /**
     * Specifies CSS class names which are set to the Animation.
     */
    className?: string;
    /**
     * Specifies the node type of the parent Animation. Defaults to `div`.
     */
    component?: string;
    /**
     * Specifies the id of the Animation.
     */
    id?: string;
    /**
     * Specifies the style of the parent Animation.
     */
    style?: any;
}
export declare class Fade extends React.Component<FadeProps, {}> {
    /**
     * @hidden
     */
    static propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        childFactory: PropTypes.Requireable<any>;
        className: PropTypes.Requireable<string>;
        component: PropTypes.Requireable<string>;
        id: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<any>;
    };
    /**
     * @hidden
     */
    static defaultProps: {
        appear: boolean;
        enter: boolean;
        exit: boolean;
        transitionEnterDuration: number;
        transitionExitDuration: number;
    };
    /**
     * @hidden
     */
    render(): JSX.Element;
}
