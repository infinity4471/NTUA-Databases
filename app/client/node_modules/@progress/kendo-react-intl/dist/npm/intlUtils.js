"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var IntlService_1 = require("./Intl/IntlService");
var LocalizationService_1 = require("./Localization/LocalizationService");
var GlobalizationContext_1 = require("./globalization/GlobalizationContext");
// tslint:disable:max-line-length
/**
 * Provides an internationalization service. When the passed component is a direct or indirect child of `IntlProvider`, the returned service uses the locale of the provider. Otherwise, uses `en` as a default locale. To handle locale changes, call the method on each `render`.
 *
 * @param componentClass - The React component class that will use the internationalization service.
 */
function provideIntlService(component) {
    if (!component && process.env.NODE_ENV !== 'production') {
        throw "Passed component - " + component + " is invalid.";
    }
    return component.context && component.context.intl
        ? component.context.intl
        : new IntlService_1.IntlService('en');
}
exports.provideIntlService = provideIntlService;
/**
 * Provides a localization service. When the passed component is a direct or indirect child of `LocalizationProvider`, the returned service uses the language of the provider. To handle locale changes, call the method on each `render`.
 *
 * @param componentClass - The React component class that will use the internationalization service.
 */
function provideLocalizationService(component) {
    if (!component && process.env.NODE_ENV !== 'production') {
        throw "Passed component - " + component + " is invalid.";
    }
    return component.context && component.context.localization
        ? component.context.localization
        : new LocalizationService_1.LocalizationService();
}
exports.provideLocalizationService = provideLocalizationService;
/**
 * A method which registers a component class or a functional stateless component for internationalization. When a component of that type is a direct or indirect child of `IntlProvider`, the locale of the provider is used. Otherwise, uses `en` as a default locale.
 *
 * @param component - The React component class that will use the internationalization methods.
 */
function registerForIntl(component) {
    component.contextType = GlobalizationContext_1.GlobalizationContext;
}
exports.registerForIntl = registerForIntl;
/**
 * A method which registers a component class or a stateless functional component for localization. When a component of that type is a direct or indirect child of `LocalizationProvider`, the language of the provider is used.
 *
 * @param component - The React component class that will use the internationalization methods.
 */
function registerForLocalization(component) {
    component.contextType = GlobalizationContext_1.GlobalizationContext;
}
exports.registerForLocalization = registerForLocalization;
// tslint:enable:max-line-length
//# sourceMappingURL=intlUtils.js.map