/**
 * @hidden
 */
var defaultRules = {
    '#': /[\d\s\+\-]/,
    '&': /[\S]/,
    '0': /[\d]/,
    '9': /[\d\s]/,
    '?': /[a-zA-Z\s]/,
    'A': /[a-zA-Z0-9]/,
    'C': /./,
    'L': /[a-zA-Z]/,
    'a': /[a-zA-Z0-9\s]/
};
/**
 * @hidden
 */
var returnFalse = function () { return false; };
/**
 * @hidden
 */
var maskingChanged = function (prev, next) {
    return prev.includeLiterals !== next.includeLiterals ||
        prev.mask !== next.mask ||
        prev.prompt !== next.prompt ||
        prev.promptPlaceholder !== next.promptPlaceholder ||
        !sameRules(prev.rules, next.rules);
};
/**
 * @hidden
 */
var sameRules = function (rules1, rules2) {
    if (!!rules1 !== !!rules2) {
        return false;
    }
    if (rules1 === rules2 || (!rules1 || !rules2)) {
        return true;
    }
    var same = true;
    for (var key in rules1) {
        if (rules1[key] !== rules2[key]) {
            same = false;
            break;
        }
    }
    if (same) {
        for (var key in rules2) {
            if (!rules1.hasOwnProperty(key)) {
                same = false;
                break;
            }
        }
    }
    return same;
};
export { defaultRules, maskingChanged, returnFalse };
//# sourceMappingURL=utils.js.map