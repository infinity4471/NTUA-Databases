import * as React from 'react';
import { useAnimation } from '@progress/kendo-react-animation';
/**
 * @hidden
 */
export var SliderTooltip = function (props) {
    var tooltipRef = React.useRef(null);
    var position = function () {
        if (props.anchor && props.anchor.current && tooltipRef.current) {
            var anchorRect = props.anchor.current.getBoundingClientRect();
            var rect = tooltipRef.current.getBoundingClientRect();
            var left = props.position === 'top'
                ? (anchorRect.width / 2) - (rect.width / 2)
                : (rect.height * 1);
            var top_1 = props.position === 'right'
                ? (anchorRect.height / 2) - (rect.height / 2)
                : -(rect.height * 1.5);
            tooltipRef.current.style.left = left + "px";
            tooltipRef.current.style.top = top_1 + "px";
        }
    };
    var handleAnimationStart = function () {
        if (!tooltipRef.current) {
            return;
        }
        tooltipRef.current.style.opacity = props.show ? '0' : '1';
    };
    var handleAnimationEnd = function () {
        if (!tooltipRef.current) {
            return;
        }
        tooltipRef.current.style.opacity = props.show ? '1' : '0';
    };
    var handleAnimationUpdate = function (progress) {
        if (!tooltipRef.current) {
            return;
        }
        tooltipRef.current.style.opacity = "" + (props.show ? progress : 1 - progress);
    };
    React.useEffect(position);
    useAnimation({
        appear: true,
        duration: 300,
        onStart: handleAnimationStart,
        onUpdate: handleAnimationUpdate,
        onEnd: handleAnimationEnd
    }, [props.show]);
    return (React.createElement("div", { ref: tooltipRef, className: "k-tooltip", style: { position: 'absolute' } },
        React.createElement("div", { className: "k-tooltip-content" }, props.children)));
};
//# sourceMappingURL=SliderTooltip.js.map