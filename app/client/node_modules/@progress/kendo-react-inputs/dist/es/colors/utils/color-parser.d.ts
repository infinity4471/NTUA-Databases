import { HSVA } from '../models/hsva';
import { OutputFormat } from '../models/output-format';
import { RGBA } from '../models/rgba';
/**
 * @hidden
 *
 * Returns the hex or RGBA string representation of the color.
 */
export declare const parseColor: (value: string, format: OutputFormat, safe?: boolean) => string;
/**
 * @hidden
 *
 * Returns an HSV object representation of the color string.
 */
export declare const getHSV: (value: string, safe?: boolean) => HSVA;
/**
 * @hidden
 *
 * Returns an RGBA object representation of the color string.
 */
export declare const getRGBA: (value: string, safe?: boolean) => RGBA;
/**
 * @hidden
 *
 * Returns the RGBA string representation of the color.
 */
export declare const getColorFromHSV: (hsva: HSVA) => string;
/**
 * @hidden
 *
 * Returns the RGBA string representation of the color based on the `hue` and
 * assuming the `value`, `saturation`, and `alpha` have a value of `1`.
 */
export declare const getColorFromHue: (hue: number) => string;
/**
 * @hidden
 *
 * Returns the RGBA string representation of the color.
 */
export declare const getColorFromRGBA: (rgba: RGBA) => string;
