"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PropTypes = require("prop-types");
var kendo_date_math_1 = require("@progress/kendo-date-math");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
var TimeList_1 = require("./TimeList");
var utils_1 = require("../utils");
var TimePart_1 = require("./models/TimePart");
var utils_2 = require("./utils");
var formatRegExp = new RegExp(TimePart_1.TIME_PART.hour + "|" + TimePart_1.TIME_PART.minute + "|" + TimePart_1.TIME_PART.second + "|" + TimePart_1.TIME_PART.dayperiod + "|literal");
/**
 * @hidden
 */
var Direction;
(function (Direction) {
    Direction[Direction["Left"] = 0] = "Left";
    Direction[Direction["Right"] = 1] = "Right";
})(Direction = exports.Direction || (exports.Direction = {}));
/**
 * @hidden
 */
var TimePart = /** @class */ (function (_super) {
    __extends(TimePart, _super);
    function TimePart(props) {
        var _this = _super.call(this, props) || this;
        _this.timeLists = [];
        _this.focus = function (args) {
            Promise.resolve().then(function () {
                var timeList = _this.timeLists[0];
                if ((_this.state.activeListIndex === -1) && !_this.hasActiveButton() && timeList && timeList.element) {
                    timeList.focus(args);
                }
            });
        };
        _this.timeFormatReducer = function (acc, current) { return acc + current.pattern; };
        // Filtering only the time part of the format.
        // Literal types are added if the previous part is
        // part of a time format.
        _this.timeFormatFilter = function (part, index, all) {
            var prevItem = index >= 1 && all[index - 1];
            if (!prevItem) {
                return formatRegExp.test(part.type || '');
            }
            if (prevItem && part.type === 'literal') {
                return formatRegExp.test(prevItem.type || '');
            }
            return formatRegExp.test(part.type || '');
        };
        _this.focusList = function (dir) {
            if (!_this.timeLists.length) {
                return;
            }
            _this.timeLists.reduce(_this.listReducer, ([]))
                .map(function (state) { return dir === Direction.Right ? state.next : state.prev; })
                .map(function (list) { return list && list.element && list.element.focus({ preventScroll: true }); });
        };
        _this.listReducer = function (state, list, idx, all) {
            if (state.length || list.props.id !== _this.state.activeListIndex) {
                return state;
            }
            return [{
                    next: all[idx + 1] || list,
                    prev: all[idx - 1] || list
                }];
        };
        _this.showNowButton = function () {
            return !_this.hasSteps() && _this.props.nowButton && utils_2.isInTimeRange(utils_2.getNow(), _this.min, _this.max);
        };
        _this.handleKeyDown = function (event) {
            var keyCode = event.keyCode;
            switch (keyCode) {
                case kendo_react_common_1.Keys.left:
                    event.preventDefault();
                    _this.focusList(Direction.Left);
                    return;
                case kendo_react_common_1.Keys.right:
                    event.preventDefault();
                    _this.focusList(Direction.Right);
                    return;
                default:
                    return;
            }
        };
        _this.handleListBlur = function () {
            _this.nextTick(function () {
                _this.setState({ activeListIndex: -1 });
            });
        };
        _this.handleListFocus = function (idx) {
            clearTimeout(_this.nextTickId);
            _this.setState({
                activeListIndex: idx
            });
        };
        _this.handleChange = function (candidate) {
            var onChange = _this.props.onChange;
            if (onChange) {
                onChange.call(undefined, candidate);
            }
        };
        _this.snapTime = utils_2.snapTime(utils_2.generateSnappers(_this.props.steps, _this.props.min || TimePart.defaultProps.min));
        _this.state = {
            activeListIndex: -1
        };
        _this.hasActiveButton = _this.hasActiveButton.bind(_this);
        return _this;
    }
    Object.defineProperty(TimePart.prototype, "element", {
        /**
         * @hidden
         */
        get: function () {
            return this._element;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePart.prototype, "value", {
        get: function () {
            return utils_2.timeInRange(this.snapTime(kendo_date_math_1.cloneDate(this.props.value || utils_1.MIDNIGHT_DATE)), this.min, this.max);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePart.prototype, "intl", {
        get: function () {
            return kendo_react_intl_1.provideIntlService(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePart.prototype, "min", {
        get: function () {
            return this.snapTime(this.props.min || TimePart.defaultProps.min);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePart.prototype, "max", {
        get: function () {
            return this.snapTime(this.props.max || TimePart.defaultProps.max);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePart.prototype, "steps", {
        get: function () {
            return this.props.steps || TimePart.defaultProps.steps;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePart.prototype, "boundRange", {
        get: function () {
            return this.props.boundRange !== undefined
                ? this.props.boundRange
                : TimePart.defaultProps.boundRange;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden
     */
    TimePart.prototype.componentWillUnmount = function () {
        clearTimeout(this.nextTickId);
    };
    TimePart.prototype.componentDidMount = function () {
        var onMount = this.props.onMount;
        if (onMount) {
            onMount.call(undefined, this.value);
        }
    };
    /**
     * @hidden
     */
    TimePart.prototype.render = function () {
        var _this = this;
        var _a = this.props, format = _a.format, smoothScroll = _a.smoothScroll, onNowClick = _a.onNowClick, className = _a.className, disabled = _a.disabled;
        this.snapTime = utils_2.snapTime(utils_2.generateSnappers(this.steps, this.min));
        this.dateFormatParts = this.intl
            .splitDateFormat(format || TimePart.defaultProps.format)
            .filter(this.timeFormatFilter);
        var rootClassName = kendo_react_common_1.classNames({
            'k-state-disabled': disabled
        }, className, 'k-time-part');
        this.timeLists = [];
        var localizationService = kendo_react_intl_1.provideLocalizationService(this);
        var selectNowMessage = localizationService.toLanguageString(messages_1.selectNow, messages_1.messages[messages_1.selectNow]);
        return (React.createElement("div", { className: rootClassName },
            React.createElement("div", { className: "k-time-header" },
                React.createElement("span", { className: "k-title" }, this.intl.formatDate(this.value, this.dateFormatParts.reduce(this.timeFormatReducer, ''))),
                this.showNowButton() &&
                    React.createElement("button", __assign({ ref: function (btn) { _this._nowButton = btn; }, className: "k-button k-bare k-time-now", title: selectNowMessage }, { 'aria-label': selectNowMessage }, { onClick: onNowClick, tabIndex: disabled ? -1 : 0 }), localizationService.toLanguageString(messages_1.now, messages_1.messages[messages_1.now]))),
            React.createElement("div", { className: "k-time-list-container", onKeyDown: this.handleKeyDown },
                React.createElement("span", { className: "k-time-highlight" }),
                this.dateFormatParts.map(function (part, idx) {
                    return (part.type !== 'literal'
                        ? React.createElement("div", { key: idx, className: kendo_react_common_1.classNames('k-time-list-wrapper', {
                                'k-state-focused': idx === _this.state.activeListIndex
                            }), role: "presentation", tabIndex: -1 },
                            React.createElement("span", { className: "k-title", onMouseDown: function (e) { e.preventDefault(); } }, _this.intl.dateFieldName(part)),
                            React.createElement(TimeList_1.TimeList, { min: _this.min, max: _this.max, boundRange: _this.boundRange, part: part, step: part.type ? _this.steps[part.type] : 1, smoothScroll: smoothScroll, ref: function (el) { if (!el) {
                                    return;
                                } _this.timeLists.push(el); }, id: idx, onFocus: function () { _this.handleListFocus(idx); }, onBlur: _this.handleListBlur, onChange: _this.handleChange, value: _this.value, disabled: disabled }))
                        : React.createElement("div", { key: idx, className: "k-time-separator" }, part.pattern));
                }))));
    };
    TimePart.prototype.nextTick = function (f) {
        // XXX: use setTimeout due to async focus/blur events in IE, and missing relatedTarget prop.
        // XXX: https://github.com/facebook/react/issues/3751
        clearTimeout(this.nextTickId);
        this.nextTickId = setTimeout(function () { return f(); });
    };
    TimePart.prototype.hasActiveButton = function () {
        return document.activeElement === this._nowButton;
    };
    TimePart.prototype.hasSteps = function () {
        var _this = this;
        var keys = Object.keys(this.steps);
        return keys.length !== keys.reduce(function (acc, k) { return acc + _this.steps[k]; }, 0);
    };
    TimePart.propTypes = {
        cancelButton: PropTypes.bool,
        disabled: PropTypes.bool,
        format: PropTypes.oneOfType([
            PropTypes.string,
            PropTypes.shape({
                skeleton: PropTypes.string,
                pattern: PropTypes.string,
                date: PropTypes.oneOf(['short', 'medium', 'long', 'full']),
                time: PropTypes.oneOf(['short', 'medium', 'long', 'full']),
                datetime: PropTypes.oneOf(['short', 'medium', 'long', 'full']),
                era: PropTypes.oneOf(['narrow', 'short', 'long']),
                year: PropTypes.oneOf(['numeric', '2-digit']),
                month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),
                day: PropTypes.oneOf(['numeric', '2-digit']),
                weekday: PropTypes.oneOf(['narrow', 'short', 'long']),
                hour: PropTypes.oneOf(['numeric', '2-digit']),
                hour12: PropTypes.bool,
                minute: PropTypes.oneOf(['numeric', '2-digit']),
                second: PropTypes.oneOf(['numeric', '2-digit']),
                timeZoneName: PropTypes.oneOf(['short', 'long'])
            })
        ]),
        max: PropTypes.instanceOf(Date),
        min: PropTypes.instanceOf(Date),
        nowButton: PropTypes.bool,
        steps: PropTypes.shape({
            hour: PropTypes.number,
            minute: PropTypes.number,
            second: PropTypes.number
        }),
        smoothScroll: PropTypes.bool,
        tabIndex: PropTypes.number,
        value: PropTypes.instanceOf(Date)
    };
    TimePart.defaultProps = {
        value: null,
        disabled: false,
        nowButton: true,
        cancelButton: true,
        format: 'hh:mm a',
        min: utils_1.MIN_TIME,
        max: utils_1.MAX_TIME,
        steps: {},
        boundRange: false
    };
    return TimePart;
}(React.Component));
exports.TimePart = TimePart;
kendo_react_intl_1.registerForIntl(TimePart);
kendo_react_intl_1.registerForLocalization(TimePart);
//# sourceMappingURL=TimePart.js.map