import * as React from 'react';
import { CalendarCellProps } from './CalendarCell';
import { CalendarWeekCellProps } from './CalendarWeekCell';
import { CalendarHeaderTitleProps } from './CalendarHeaderTitle';
import { BusViewService } from '../services';
import { CalendarViewEnum, ViewService, SelectionRange } from '../models';
/**
 * @hidden
 */
export interface HorizontalViewListEventArguments {
    syntheticEvent: React.SyntheticEvent<any>;
    nativeEvent?: any;
    value: Date;
    target: HorizontalViewList;
    isTodayClick: boolean;
}
/**
 * @hidden
 */
export interface HorizontalViewListProps {
    activeView: CalendarViewEnum;
    bus: BusViewService;
    cellUID: string;
    focusedDate: Date;
    max?: Date;
    min?: Date;
    onChange?: (event: HorizontalViewListEventArguments) => void;
    selectionRange: SelectionRange;
    service: ViewService;
    showWeekNumbers?: boolean;
    take?: number;
    value: Date[] | Date | null;
    views?: number;
    onCellEnter?: (value: Date) => void;
    allowReverse?: boolean;
    cell?: React.ComponentType<CalendarCellProps>;
    weekCell?: React.ComponentType<CalendarWeekCellProps>;
    headerTitle?: React.ComponentType<CalendarHeaderTitleProps>;
}
/**
 * @hidden
 */
export declare class HorizontalViewList extends React.Component<HorizontalViewListProps, {}> {
    static defaultProps: {
        showWeekNumbers: boolean;
        views: number;
        take: number;
        allowReverse: boolean;
        min: Date;
        max: Date;
    };
    protected dates: any[];
    private _element;
    private isActive;
    private lastView;
    private lastViewsCount;
    readonly element: HTMLDivElement | null;
    protected readonly weekNumber: boolean;
    protected readonly min: Date;
    protected readonly max: Date;
    constructor(props: HorizontalViewListProps);
    focusActiveDate: () => void;
    blurActiveDate: () => void;
    componentDidUpdate(): void;
    render(): JSX.Element;
    protected rotateSelectionRange: (selectionRange: SelectionRange) => SelectionRange;
    private handleTodayClick;
    private handleDateChange;
}
