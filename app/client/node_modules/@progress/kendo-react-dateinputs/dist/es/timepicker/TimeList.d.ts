import * as React from 'react';
import * as PropTypes from 'prop-types';
import { DateFormatPart } from '@progress/kendo-react-intl';
import { ListServiceSettings } from './models';
import { DOMService } from './services';
/**
 * @hidden
 */
export interface TimeListProps {
    id?: number;
    max?: Date;
    min?: Date;
    onBlur?: any;
    onChange?: any;
    onFocus?: any;
    part: DateFormatPart;
    step?: number;
    value: Date;
    smoothScroll?: boolean;
    boundRange?: boolean;
    disabled?: boolean;
}
/**
 * @hidden
 */
export declare class TimeList extends React.Component<TimeListProps, {}> {
    static propTypes: {
        id: PropTypes.Requireable<number>;
        max: PropTypes.Requireable<Date>;
        min: PropTypes.Requireable<Date>;
        part: (props: TimeListProps, propName: string, componentName: string) => void;
        step: (props: TimeListProps, propName: string, componentName: string) => void;
        value: PropTypes.Requireable<Date>;
        smoothScroll: PropTypes.Requireable<boolean>;
    };
    static defaultProps: {
        boundRange: boolean;
        max: Date;
        min: Date;
        step: number;
        smoothScroll: boolean;
    };
    protected dom: DOMService;
    private intl;
    private _element;
    private service;
    private virtualization;
    private topOffset;
    private bottomOffset;
    private itemHeight;
    private listHeight;
    private topThreshold;
    private bottomThreshold;
    private animateToIndex;
    constructor(props: TimeListProps);
    readonly element: HTMLDivElement | null;
    protected readonly animate: boolean;
    private readonly min;
    private readonly max;
    private readonly step;
    /**
     * @hidden
     */
    componentDidMount(): void;
    /**
     * @hidden
     */
    componentDidUpdate(): void;
    /**
     * @hidden
     */
    render(): JSX.Element;
    focus: (args?: any) => void;
    protected itemOffset: (scrollTop: number) => number;
    protected calculateHeights: () => void;
    protected configureServices: ({ min, max, value }?: TimeListProps) => void;
    protected serviceSettings: (settings?: any) => ListServiceSettings;
    private handleScrollAction;
    private handleFocus;
    private handleBlur;
    private handleMouseOver;
    private handleKeyDown;
    private handleChange;
}
