import * as React from 'react';
import * as PropTypes from 'prop-types';
/**
 * Represents the object of the `onPageChange` event.
 */
export interface PageChangeEvent {
    /**
     * An event target.
     */
    target: Pager;
    /**
     * A React Synthetic Event.
     */
    syntheticEvent: React.SyntheticEvent<any>;
    /**
     * A native DOM event.
     */
    nativeEvent: any;
    /**
     * The number of records that will be skipped.
     */
    skip: number;
    /**
     * The number of records that will be taken.
     */
    take: number;
}
export interface PagerProps {
    /**
     * The total number of records.
     */
    total: number;
    /**
     * The number of records that will be skipped.
     */
    skip: number;
    /**
     * The number of records that will be taken.
     */
    take: number;
    /**
     * Sets additional classes to the Pager.
     */
    className?: string;
    /**
     * The styles that are applied to the Pager.
     */
    style?: React.CSSProperties;
    /**
     * Sets the maximum numeric buttons count before the buttons are collapsed.
     */
    buttonCount?: number;
    /**
     * Toggles the information about the current page and the total number of records.
     */
    info?: boolean;
    /**
     * Defines the type of the pager.
     * * (Default) `numeric` — Renders buttons with numbers.
     * * `input` — Renders an input field for typing the page number.
     */
    type?: 'numeric' | 'input';
    /**
     * Displays a menu for selecting the page size.
     */
    pageSizes?: Array<number>;
    /**
     * Toggles the **Previous** and **Next** buttons.
     */
    previousNext?: boolean;
    /**
     * Fires when the page of the Pager is changed. You have to handle the event yourself and page the data.
     */
    onPageChange?: (event: PageChangeEvent) => void;
    /**
     * Useful for modifying the Pager messages.
     */
    messagesMap?: (messageKey: string) => ({
        messageKey: string;
        defaultMessage: string;
    });
}
export declare class Pager extends React.Component<PagerProps> {
    /**
     * @hidden
     */
    static propTypes: {
        className: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        total: PropTypes.Validator<number>;
        skip: PropTypes.Validator<number>;
        take: PropTypes.Validator<number>;
        buttonCount: PropTypes.Requireable<number>;
        info: PropTypes.Requireable<boolean>;
        type: PropTypes.Requireable<string>;
        pageSizes: PropTypes.Requireable<number[]>;
        previousNext: PropTypes.Requireable<boolean>;
        onPageChange: PropTypes.Requireable<(...args: any[]) => any>;
        messagesMap: PropTypes.Requireable<(...args: any[]) => any>;
    };
    /**
     * @hidden
     */
    static defaultProps: {
        buttonCount: number;
        info: boolean;
        type: string;
    };
    /**
     * @hidden
     */
    render(): JSX.Element;
    private renderButton;
    private readonly totalPages;
    private changePage;
}
