"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_react_animation_1 = require("@progress/kendo-react-animation");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
/**
 * @hidden
 */
function ColumnMenuFilterForm(props) {
    var localization = kendo_react_intl_1.useLocalization();
    return (React.createElement("div", { className: "k-columnmenu-item-content" },
        React.createElement(kendo_react_animation_1.Reveal, { style: { position: 'relative', display: 'block' } }, props.show && (React.createElement("div", { className: "kendo-grid-filter-menu-container" },
            React.createElement("form", { className: "k-filter-menu k-group k-reset k-state-border-up", onSubmit: props.onSubmit, onReset: props.onReset },
                React.createElement("div", { className: "k-filter-menu-container" },
                    props.children,
                    React.createElement("div", { className: "k-columnmenu-actions" },
                        React.createElement("button", { className: "k-button", type: "reset" }, localization.toLanguageString(messages_1.columnMenuFilterClearButton, messages_1.messages[messages_1.columnMenuFilterClearButton])),
                        React.createElement("button", { className: "k-button k-primary" }, localization.toLanguageString(messages_1.columnMenuFilterSubmitButton, messages_1.messages[messages_1.columnMenuFilterSubmitButton]))))))))));
}
exports.ColumnMenuFilterForm = ColumnMenuFilterForm;
//# sourceMappingURL=ColumnMenuFilterForm.js.map