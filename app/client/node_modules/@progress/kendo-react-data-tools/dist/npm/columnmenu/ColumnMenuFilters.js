"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var kendo_react_dropdowns_1 = require("@progress/kendo-react-dropdowns");
var kendo_react_inputs_1 = require("@progress/kendo-react-inputs");
var kendo_react_dateinputs_1 = require("@progress/kendo-react-dateinputs");
var messages_1 = require("../messages");
var ColumnMenuOperators_1 = require("./ColumnMenuOperators");
var ColumnMenuFilter = function (props) {
    var filter = props.filter, onFilterChange = props.onFilterChange, operators = props.operators, initialFilter = props.initialFilter;
    var operatorChange = React.useCallback(function (event) {
        var prevFilter = filter;
        var operator = event.target.value.operator;
        var nextFilter = prevFilter ? __assign({}, prevFilter, { operator: operator }) : { value: initialFilter.value, operator: operator };
        onFilterChange.call(undefined, event.syntheticEvent, nextFilter, prevFilter);
    }, [filter, onFilterChange, initialFilter]);
    var inputChange = React.useCallback(function (event) {
        var value = event.target.value;
        var prevFilter = filter;
        var nextFilter = prevFilter ? __assign({}, prevFilter, { value: value }) : { value: value, operator: operators[0].operator };
        onFilterChange.call(undefined, event, nextFilter, prevFilter);
    }, [filter, onFilterChange, operators]);
    var localization = kendo_react_intl_1.useLocalization();
    var data = operators.map(function (o) { return (__assign({}, o, { text: localization.toLanguageString(o.text, messages_1.messages[o.text]) })); });
    return (React.createElement(React.Fragment, null,
        React.createElement(kendo_react_dropdowns_1.DropDownList, { value: data.find(function (item) { return item.operator === filter.operator; }) || null, onChange: operatorChange, data: data, textField: "text" }),
        React.createElement(props.input, { value: filter.value, onChange: inputChange })));
};
exports.ColumnMenuBooleanFilter = function (props) {
    var filter = props.filter, onFilterChange = props.onFilterChange;
    var inputChange = React.useCallback(function (event) { return onFilterChange.call(undefined, event.syntheticEvent, __assign({}, filter, { value: event.value }), filter); }, [filter, onFilterChange]);
    var isTrue = ColumnMenuOperators_1.ColumnMenuOperators.boolean[0].text;
    return (React.createElement(kendo_react_inputs_1.Checkbox, { onChange: inputChange, checked: filter.value, label: kendo_react_intl_1.useLocalization().toLanguageString(isTrue, messages_1.messages[isTrue]), labelPlacement: "after" }));
};
exports.ColumnMenuTextFilter = function (props) {
    var input = React.useCallback(function (pr) { return React.createElement("input", __assign({}, pr, { value: pr.value || '', className: "k-textbox" })); }, []);
    var operators = React.useRef(ColumnMenuOperators_1.ColumnMenuOperators.text);
    var initialFilter = React.useRef({ operator: '', value: '' });
    return (React.createElement(ColumnMenuFilter, __assign({ initialFilter: initialFilter.current, input: input, operators: props.operators || operators.current }, props)));
};
exports.ColumnMenuNumericFilter = function (props) {
    var input = React.useCallback(function (pr) { return React.createElement(kendo_react_inputs_1.NumericTextBox, __assign({}, pr, { value: pr.value || null })); }, []);
    var operators = React.useRef(ColumnMenuOperators_1.ColumnMenuOperators.numeric);
    var initialFilter = React.useRef({ operator: '', value: null });
    return (React.createElement(ColumnMenuFilter, __assign({ initialFilter: initialFilter.current, input: input, operators: props.operators || operators.current }, props)));
};
exports.ColumnMenuDateFilter = function (props) {
    var input = React.useCallback(function (pr) { return React.createElement(kendo_react_dateinputs_1.DatePicker, __assign({}, pr, { value: pr.value || null })); }, []);
    var operators = React.useRef(ColumnMenuOperators_1.ColumnMenuOperators.date);
    var initialFilter = React.useRef({ operator: '', value: null });
    return (React.createElement(ColumnMenuFilter, __assign({ initialFilter: initialFilter.current, input: input, operators: props.operators || operators.current }, props)));
};
//# sourceMappingURL=ColumnMenuFilters.js.map