import * as React from 'react';
import { SortDescriptor, CompositeFilterDescriptor } from '@progress/kendo-data-query';
import { ColumnProps, ExtendedColumnProps } from './ColumnProps';
import { HeaderCellProps } from './HeaderCell';
import { SortSettings } from './SortSettings';
import { ColumnResize } from '../drag/ColumnResize';
import { ColumnDraggableProps } from '../drag/ColumnDraggable';
/**
 * @hidden
 */
export interface HeaderRowProps extends ColumnDraggableProps {
    sortable?: SortSettings;
    sortChange?: (e: React.SyntheticEvent<any>, descriptors: SortDescriptor[], field?: string) => void;
    sort?: SortDescriptor[];
    columns: ExtendedColumnProps[];
    columnsMap: number[][];
    selectionChange: (e: any) => void;
    cellRender?: (defaultRendering: React.ReactNode | null, props: HeaderCellProps) => React.ReactNode;
    columnResize?: ColumnResize;
    columnMenu?: React.ComponentType<any>;
    columnMenuFilter?: CompositeFilterDescriptor[];
    columnMenuFilterChange?: (e: React.SyntheticEvent<any>, filter: CompositeFilterDescriptor[], field?: string) => void;
}
/**
 * @hidden
 */
export declare class HeaderRow extends React.Component<HeaderRowProps, {}> {
    cellClick: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>, column: ColumnProps) => void;
    cellClass(field: string | undefined, headerClassName: string | undefined, locked?: boolean): string;
    sortIcon(sortIndex: number): JSX.Element[];
    render(): JSX.Element[];
    private cells;
}
