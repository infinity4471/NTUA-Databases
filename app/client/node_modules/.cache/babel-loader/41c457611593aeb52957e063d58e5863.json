{"ast":null,"code":"import PathNode from './path-node';\nimport renderStyle from './utils/render-style';\nimport renderAttr from './utils/render-attribute';\nimport NODE_MAP from './node-map';\nimport { htmlEncode, support } from '../common';\nimport { normalizeText } from '../text-metrics';\nvar ENTITY_REGEX = /&(?:[a-zA-Z]+|#\\d+);/g;\n\nfunction decodeEntities(text) {\n  if (!text || typeof text !== \"string\" || !ENTITY_REGEX.test(text)) {\n    return text;\n  }\n\n  var element = decodeEntities._element;\n  ENTITY_REGEX.lastIndex = 0;\n  return text.replace(ENTITY_REGEX, function (match) {\n    element.innerHTML = match;\n    return element.textContent || element.innerText;\n  });\n}\n\nif (typeof document !== \"undefined\") {\n  decodeEntities._element = document.createElement(\"span\");\n}\n\nvar TextNode = function (PathNode) {\n  function TextNode() {\n    PathNode.apply(this, arguments);\n  }\n\n  if (PathNode) TextNode.__proto__ = PathNode;\n  TextNode.prototype = Object.create(PathNode && PathNode.prototype);\n  TextNode.prototype.constructor = TextNode;\n\n  TextNode.prototype.geometryChange = function geometryChange() {\n    var pos = this.pos();\n    this.attr(\"x\", pos.x);\n    this.attr(\"y\", pos.y);\n    this.invalidate();\n  };\n\n  TextNode.prototype.optionsChange = function optionsChange(e) {\n    if (e.field === \"font\") {\n      this.attr(\"style\", renderStyle(this.mapStyle()));\n      this.geometryChange();\n    } else if (e.field === \"content\") {\n      PathNode.prototype.content.call(this, this.srcElement.content());\n    }\n\n    PathNode.prototype.optionsChange.call(this, e);\n  };\n\n  TextNode.prototype.mapStyle = function mapStyle(encode) {\n    var style = PathNode.prototype.mapStyle.call(this, encode);\n    var font = this.srcElement.options.font;\n\n    if (encode) {\n      font = htmlEncode(font);\n    }\n\n    style.push([\"font\", font], [\"white-space\", \"pre\"]);\n    return style;\n  };\n\n  TextNode.prototype.pos = function pos() {\n    var pos = this.srcElement.position();\n    var size = this.srcElement.measure();\n    return pos.clone().setY(pos.y + size.baseline);\n  };\n\n  TextNode.prototype.renderContent = function renderContent() {\n    var content = this.srcElement.content();\n    content = decodeEntities(content);\n    content = htmlEncode(content);\n    return normalizeText(content);\n  };\n\n  TextNode.prototype.renderTextAnchor = function renderTextAnchor() {\n    var anchor;\n\n    if ((this.options || {}).rtl && !(support.browser.msie || support.browser.edge)) {\n      anchor = 'end';\n    }\n\n    return renderAttr(\"text-anchor\", anchor);\n  };\n\n  TextNode.prototype.template = function template() {\n    return \"<text \" + this.renderId() + \" \" + this.renderTextAnchor() + \" \" + this.renderStyle() + \" \" + this.renderOpacity() + \"x='\" + this.pos().x + \"' y='\" + this.pos().y + \"' \" + this.renderStroke() + \" \" + this.renderTransform() + \" \" + this.renderDefinitions() + this.renderFill() + \">\" + this.renderContent() + \"</text>\";\n  };\n\n  return TextNode;\n}(PathNode);\n\nNODE_MAP.Text = TextNode;\nexport default TextNode;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/svg/text-node.js"],"names":["PathNode","renderStyle","renderAttr","NODE_MAP","htmlEncode","support","normalizeText","ENTITY_REGEX","decodeEntities","text","test","element","_element","lastIndex","replace","match","innerHTML","textContent","innerText","document","createElement","TextNode","apply","arguments","__proto__","prototype","Object","create","constructor","geometryChange","pos","attr","x","y","invalidate","optionsChange","e","field","mapStyle","content","call","srcElement","encode","style","font","options","push","position","size","measure","clone","setY","baseline","renderContent","renderTextAnchor","anchor","rtl","browser","msie","edge","template","renderId","renderOpacity","renderStroke","renderTransform","renderDefinitions","renderFill","Text"],"mappings":"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","sourcesContent":["import PathNode from './path-node';\nimport renderStyle from './utils/render-style';\nimport renderAttr from './utils/render-attribute';\nimport NODE_MAP from './node-map';\nimport { htmlEncode, support } from '../common';\nimport { normalizeText } from '../text-metrics';\n\nvar ENTITY_REGEX = /&(?:[a-zA-Z]+|#\\d+);/g;\n\nfunction decodeEntities(text) {\n    if (!text || typeof text !== \"string\" || !ENTITY_REGEX.test(text)) {\n        return text;\n    }\n\n    var element = decodeEntities._element;\n    ENTITY_REGEX.lastIndex = 0;\n\n    return text.replace(ENTITY_REGEX, function (match) {\n        element.innerHTML = match;\n\n        return element.textContent || element.innerText;\n    });\n}\n\nif (typeof document !== \"undefined\") {\n    decodeEntities._element = document.createElement(\"span\");\n}\n\nvar TextNode = (function (PathNode) {\n    function TextNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) TextNode.__proto__ = PathNode;\n    TextNode.prototype = Object.create( PathNode && PathNode.prototype );\n    TextNode.prototype.constructor = TextNode;\n\n    TextNode.prototype.geometryChange = function geometryChange () {\n        var pos = this.pos();\n        this.attr(\"x\", pos.x);\n        this.attr(\"y\", pos.y);\n        this.invalidate();\n    };\n\n    TextNode.prototype.optionsChange = function optionsChange (e) {\n        if (e.field === \"font\") {\n            this.attr(\"style\", renderStyle(this.mapStyle()));\n            this.geometryChange();\n        } else if (e.field === \"content\") {\n            PathNode.prototype.content.call(this, this.srcElement.content());\n        }\n\n        PathNode.prototype.optionsChange.call(this, e);\n    };\n\n    TextNode.prototype.mapStyle = function mapStyle (encode) {\n        var style = PathNode.prototype.mapStyle.call(this, encode);\n        var font = this.srcElement.options.font;\n\n        if (encode) {\n            font = htmlEncode(font);\n        }\n\n        style.push([ \"font\", font ], [ \"white-space\", \"pre\" ]);\n\n        return style;\n    };\n\n    TextNode.prototype.pos = function pos () {\n        var pos = this.srcElement.position();\n        var size = this.srcElement.measure();\n        return pos.clone().setY(pos.y + size.baseline);\n    };\n\n    TextNode.prototype.renderContent = function renderContent () {\n        var content = this.srcElement.content();\n        content = decodeEntities(content);\n        content = htmlEncode(content);\n\n        return normalizeText(content);\n    };\n\n    TextNode.prototype.renderTextAnchor = function renderTextAnchor () {\n        var anchor;\n\n        if ((this.options || {}).rtl && !(support.browser.msie || support.browser.edge)) {\n            anchor = 'end';\n        }\n\n        return renderAttr(\"text-anchor\", anchor);\n    };\n\n    TextNode.prototype.template = function template () {\n        return \"<text \" + (this.renderId()) + \" \" + (this.renderTextAnchor()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) +\n                    \"x='\" + (this.pos().x) + \"' y='\" + (this.pos().y) + \"' \" + (this.renderStroke()) + \" \" + (this.renderTransform()) + \" \" + (this.renderDefinitions()) +\n                    (this.renderFill()) + \">\" + (this.renderContent()) + \"</text>\";\n    };\n\n    return TextNode;\n}(PathNode));\n\nNODE_MAP.Text = TextNode;\n\nexport default TextNode;"]},"metadata":{},"sourceType":"module"}