{"ast":null,"code":"var _jsxFileName = \"/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/Tables/TransactionTable.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst TransactionTable = data => {\n  const rows = Object.values(data)[0];\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [page, setPage] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    if (parseInt(event.target.value, 10) >= rows.length) {\n      setRowsPerPage(rows.length);\n    } else {\n      setRowsPerPage(parseInt(event.target.value, 10));\n    }\n\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    style: {\n      width: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    className: \"Table\",\n    \"aria-label\": \"simple table\",\n    style: {\n      width: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, \"Date-Time\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, \"Payment Method\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(dict => /*#__PURE__*/React.createElement(TableRow, {\n    key: dict.Total_amount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, dict.Total_amount), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, dict.Date_Time), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, dict.Payment_method))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  })))));\n};\n\nexport { TransactionTable };","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/Tables/TransactionTable.js"],"names":["React","makeStyles","useTheme","PropTypes","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","TransactionTable","data","rows","Object","values","rowsPerPage","setRowsPerPage","useState","page","setPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","length","emptyRows","Math","min","width","label","inputProps","native","TablePaginationActions","slice","map","dict","Total_amount","Date_Time","Payment_method","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\n\n\nconst TransactionTable = (data) => {\n\tconst rows = Object.values( data )[ 0 ]\n\tconst [rowsPerPage, setRowsPerPage] = React.useState(5);\n\tconst [page, setPage] = React.useState(0);\n\tconst handleChangePage = (event, newPage) => {\n\t\tsetPage(newPage);\n\t};\n\n\tconst handleChangeRowsPerPage = (event) => {\n\t\tif( parseInt( event.target.value, 10 ) >= rows.length ) {\n\t\t\tsetRowsPerPage( rows.length )\n\t\t} else {\n\t\t\tsetRowsPerPage(parseInt(event.target.value, 10));\n\t\t}\n\t\tsetPage(0);\n\t};\n\n\tconst emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\treturn (\n\t\t<TableContainer component={Paper} style={{width: 500}}>\n\n\t\t<TablePagination\n\t\trowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n\t\tcolSpan={3}\n\t\tcount={rows.length}\n\t\trowsPerPage={rowsPerPage}\n\t\tpage={page}\n\t\tSelectProps={{\n\t\t\tinputProps: { 'aria-label': 'rows per page' },\n\t\t\t\tnative: true,\n\t\t}}\n\t\tonChangePage={handleChangePage}\n\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\n\t\tActionsComponent={TablePaginationActions}\n\t\t/>\n\t\t<Table className=\"Table\" aria-label=\"simple table\" style={{width: 500}}>\n\n\t\t<TableHead>\n\t\t<TableRow>\n\t\t<TableCell align=\"left\">Amount</TableCell>\n\t\t<TableCell align=\"left\">Date-Time</TableCell>\n\t\t<TableCell align=\"left\">Payment Method</TableCell>\n\t\t</TableRow>\n\t\t</TableHead>\n\t\t<TableBody>\n\t\t{(rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map((dict) => (\n\t\t\t<TableRow key={dict.Total_amount}>\n\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t{dict.Total_amount}\n\t\t\t</TableCell>\n\t\t\t<TableCell align=\"left\">{dict.Date_Time}</TableCell>\n\t\t\t<TableCell align=\"left\">{dict.Payment_method}</TableCell>\n\t\t\t</TableRow>\n\t\t))}\n\t\t{emptyRows > 0 && (\n\t\t\t<TableRow style={{ height: 53 * emptyRows }}>\n\t\t\t<TableCell colSpan={6} />\n\t\t\t</TableRow>\n\t\t)}\n\n\t\t</TableBody>\n\t\t</Table>\n\t\t</TableContainer>\n\t);\n}\n\nexport {TransactionTable};\n\n"]},"metadata":{},"sourceType":"module"}