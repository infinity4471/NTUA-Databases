{"ast":null,"code":"var _a;\n\nimport { addDecades, addYears, cloneDate, durationInDecades, firstYearOfDecade, lastYearOfDecade } from '@progress/kendo-date-math';\nimport { Action } from '../models/NavigationAction';\nimport { EMPTY_SELECTIONRANGE } from '../models/SelectionRange';\nimport { getToday, isInRange, isInSelectionRange, range } from '../../utils';\nvar EMPTY_DATA = [[]];\nvar CELLS_LENGTH = 5;\nvar ROWS_LENGTH = 2;\nvar ACTIONS = (_a = {}, _a[Action.Left] = function (date) {\n  return addYears(date, -1);\n}, _a[Action.Up] = function (date) {\n  return addYears(date, -5);\n}, _a[Action.Right] = function (date) {\n  return addYears(date, 1);\n}, _a[Action.Down] = function (date) {\n  return addYears(date, 5);\n}, _a[Action.PrevView] = function (date) {\n  return addDecades(date, -1);\n}, _a[Action.NextView] = function (date) {\n  return addDecades(date, 1);\n}, _a[Action.FirstInView] = function (date) {\n  return firstYearOfDecade(date);\n}, _a[Action.LastInView] = function (date) {\n  return lastYearOfDecade(date);\n}, _a);\n/**\n * @hidden\n */\n\nvar DecadeViewService =\n/** @class */\nfunction () {\n  function DecadeViewService() {}\n\n  DecadeViewService.prototype.addToDate = function (min, skip) {\n    return addDecades(min, skip);\n  };\n\n  DecadeViewService.prototype.datesList = function (start, count) {\n    return range(0, count).map(function (i) {\n      return addDecades(start, i);\n    });\n  };\n\n  DecadeViewService.prototype.data = function (options) {\n    var _this = this;\n\n    var cellUID = options.cellUID,\n        focusedDate = options.focusedDate,\n        isActiveView = options.isActiveView,\n        max = options.max,\n        min = options.min,\n        selectedDate = options.selectedDate,\n        _a = options.selectionRange,\n        selectionRange = _a === void 0 ? EMPTY_SELECTIONRANGE : _a,\n        viewDate = options.viewDate;\n\n    if (!viewDate) {\n      return EMPTY_DATA;\n    }\n\n    var cells = range(0, CELLS_LENGTH);\n    var firstDate = firstYearOfDecade(viewDate);\n    var lastDate = lastYearOfDecade(viewDate);\n    var today = getToday();\n    return range(0, ROWS_LENGTH).map(function (rowOffset) {\n      var baseDate = addYears(firstDate, rowOffset * CELLS_LENGTH);\n      return cells.map(function (cellOffset) {\n        var cellDate = _this.normalize(addYears(baseDate, cellOffset), min, max);\n\n        var isRangeStart = _this.isEqual(cellDate, selectionRange.start);\n\n        var isRangeEnd = _this.isEqual(cellDate, selectionRange.end);\n\n        var isInMiddle = !isRangeStart && !isRangeEnd;\n        var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n        var isSelected = isActiveView && (!Array.isArray(selectedDate) ? isInRange(selectedDate, min, max) && _this.isEqual(cellDate, selectedDate) : _this.isSelectedFromArray(cellDate, selectedDate, min, max));\n        return {\n          formattedValue: _this.value(cellDate),\n          id: \"\" + cellUID + cellDate.getTime(),\n          isFocused: _this.isEqual(cellDate, focusedDate),\n          isSelected: isSelected,\n          isWeekend: false,\n          isInRange: isInRange(cellDate, min, max),\n          isRangeStart: isRangeStart,\n          isRangeMid: isRangeMid,\n          isRangeEnd: isRangeEnd,\n          isRangeSplitEnd: isRangeMid && _this.isEqual(cellDate, lastDate),\n          isRangeSplitStart: isRangeMid && _this.isEqual(cellDate, firstDate),\n          isToday: _this.isEqual(cellDate, today),\n          title: _this.cellTitle(cellDate),\n          value: cellDate\n        };\n      });\n    });\n  };\n\n  DecadeViewService.prototype.isSelectedFromArray = function (candidate, dates, min, max) {\n    var _this = this;\n\n    var result = false;\n    dates.forEach(function (date) {\n      if (isInRange(candidate, min, max) && _this.isEqual(candidate, date)) {\n        result = true;\n      }\n    });\n    return result;\n  };\n\n  DecadeViewService.prototype.isEqual = function (candidate, expected) {\n    if (!candidate || !expected) {\n      return false;\n    }\n\n    return candidate.getFullYear() === expected.getFullYear();\n  };\n\n  DecadeViewService.prototype.isInArray = function (date, dates) {\n    if (!dates.length) {\n      return false;\n    }\n\n    var year = date.getFullYear();\n    return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear() + 9;\n  };\n\n  DecadeViewService.prototype.isInRange = function (candidate, min, max) {\n    var year = candidate.getFullYear();\n    var aboveMin = !min || min.getFullYear() <= year;\n    var belowMax = !max || year <= max.getFullYear();\n    return aboveMin && belowMax;\n  };\n\n  DecadeViewService.prototype.isRangeStart = function (value) {\n    return value.getFullYear() % 100 === 0;\n  };\n\n  DecadeViewService.prototype.isInSameView = function (candidate, value) {\n    return durationInDecades(candidate, value) === 0;\n  };\n\n  DecadeViewService.prototype.move = function (value, action) {\n    var modifier = ACTIONS[action];\n\n    if (!modifier) {\n      return value;\n    }\n\n    return modifier(value);\n  };\n\n  DecadeViewService.prototype.cellTitle = function (value) {\n    return value.getFullYear().toString();\n  };\n\n  DecadeViewService.prototype.navigationTitle = function (value) {\n    return value ? firstYearOfDecade(value).getFullYear().toString() : '';\n  };\n\n  DecadeViewService.prototype.title = function (value) {\n    if (!value) {\n      return '';\n    }\n\n    return firstYearOfDecade(value).getFullYear() + \" - \" + lastYearOfDecade(value).getFullYear();\n  };\n\n  DecadeViewService.prototype.rowLength = function (_) {\n    return CELLS_LENGTH;\n  };\n\n  DecadeViewService.prototype.skip = function (value, min) {\n    return durationInDecades(min, value);\n  };\n\n  DecadeViewService.prototype.total = function (min, max) {\n    return durationInDecades(min, max) + 1;\n  };\n\n  DecadeViewService.prototype.value = function (current) {\n    return current ? current.getFullYear().toString() : '';\n  };\n\n  DecadeViewService.prototype.viewDate = function (date, max, border) {\n    if (border === void 0) {\n      border = 1;\n    }\n\n    var renderTwoViews = durationInDecades(date, max) < border;\n    return renderTwoViews ? addDecades(date, -1) : date;\n  };\n\n  DecadeViewService.prototype.normalize = function (cellDate, min, max) {\n    if (cellDate < min && this.isEqual(cellDate, min)) {\n      return cloneDate(min);\n    }\n\n    if (cellDate > max && this.isEqual(cellDate, max)) {\n      return cloneDate(max);\n    }\n\n    return cellDate;\n  };\n\n  return DecadeViewService;\n}();\n\nexport { DecadeViewService };","map":{"version":3,"sources":["../../../../src/calendar/services/DecadeViewService.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var _a;\nimport { addDecades, addYears, cloneDate, durationInDecades, firstYearOfDecade, lastYearOfDecade } from '@progress/kendo-date-math';\nimport { Action } from '../models/NavigationAction';\nimport { EMPTY_SELECTIONRANGE } from '../models/SelectionRange';\nimport { getToday, isInRange, isInSelectionRange, range } from '../../utils';\nvar EMPTY_DATA = [[]];\nvar CELLS_LENGTH = 5;\nvar ROWS_LENGTH = 2;\nvar ACTIONS = (_a = {},\n    _a[Action.Left] = function (date) { return addYears(date, -1); },\n    _a[Action.Up] = function (date) { return addYears(date, -5); },\n    _a[Action.Right] = function (date) { return addYears(date, 1); },\n    _a[Action.Down] = function (date) { return addYears(date, 5); },\n    _a[Action.PrevView] = function (date) { return addDecades(date, -1); },\n    _a[Action.NextView] = function (date) { return addDecades(date, 1); },\n    _a[Action.FirstInView] = function (date) { return firstYearOfDecade(date); },\n    _a[Action.LastInView] = function (date) { return lastYearOfDecade(date); },\n    _a);\n/**\n * @hidden\n */\nvar DecadeViewService = /** @class */ (function () {\n    function DecadeViewService() {\n    }\n    DecadeViewService.prototype.addToDate = function (min, skip) {\n        return addDecades(min, skip);\n    };\n    DecadeViewService.prototype.datesList = function (start, count) {\n        return range(0, count).map(function (i) { return addDecades(start, i); });\n    };\n    DecadeViewService.prototype.data = function (options) {\n        var _this = this;\n        var cellUID = options.cellUID, focusedDate = options.focusedDate, isActiveView = options.isActiveView, max = options.max, min = options.min, selectedDate = options.selectedDate, _a = options.selectionRange, selectionRange = _a === void 0 ? EMPTY_SELECTIONRANGE : _a, viewDate = options.viewDate;\n        if (!viewDate) {\n            return EMPTY_DATA;\n        }\n        var cells = range(0, CELLS_LENGTH);\n        var firstDate = firstYearOfDecade(viewDate);\n        var lastDate = lastYearOfDecade(viewDate);\n        var today = getToday();\n        return range(0, ROWS_LENGTH).map(function (rowOffset) {\n            var baseDate = addYears(firstDate, rowOffset * CELLS_LENGTH);\n            return cells.map(function (cellOffset) {\n                var cellDate = _this.normalize(addYears(baseDate, cellOffset), min, max);\n                var isRangeStart = _this.isEqual(cellDate, selectionRange.start);\n                var isRangeEnd = _this.isEqual(cellDate, selectionRange.end);\n                var isInMiddle = !isRangeStart && !isRangeEnd;\n                var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n                var isSelected = isActiveView && (!Array.isArray(selectedDate)\n                    ? isInRange(selectedDate, min, max) && _this.isEqual(cellDate, selectedDate)\n                    : _this.isSelectedFromArray(cellDate, selectedDate, min, max));\n                return {\n                    formattedValue: _this.value(cellDate),\n                    id: \"\" + cellUID + cellDate.getTime(),\n                    isFocused: _this.isEqual(cellDate, focusedDate),\n                    isSelected: isSelected,\n                    isWeekend: false,\n                    isInRange: isInRange(cellDate, min, max),\n                    isRangeStart: isRangeStart,\n                    isRangeMid: isRangeMid,\n                    isRangeEnd: isRangeEnd,\n                    isRangeSplitEnd: isRangeMid && _this.isEqual(cellDate, lastDate),\n                    isRangeSplitStart: isRangeMid && _this.isEqual(cellDate, firstDate),\n                    isToday: _this.isEqual(cellDate, today),\n                    title: _this.cellTitle(cellDate),\n                    value: cellDate\n                };\n            });\n        });\n    };\n    DecadeViewService.prototype.isSelectedFromArray = function (candidate, dates, min, max) {\n        var _this = this;\n        var result = false;\n        dates.forEach(function (date) {\n            if (isInRange(candidate, min, max) && _this.isEqual(candidate, date)) {\n                result = true;\n            }\n        });\n        return result;\n    };\n    DecadeViewService.prototype.isEqual = function (candidate, expected) {\n        if (!candidate || !expected) {\n            return false;\n        }\n        return candidate.getFullYear() === expected.getFullYear();\n    };\n    DecadeViewService.prototype.isInArray = function (date, dates) {\n        if (!dates.length) {\n            return false;\n        }\n        var year = date.getFullYear();\n        return dates[0].getFullYear() <= year && year <= (dates[dates.length - 1].getFullYear() + 9);\n    };\n    DecadeViewService.prototype.isInRange = function (candidate, min, max) {\n        var year = candidate.getFullYear();\n        var aboveMin = !min || min.getFullYear() <= year;\n        var belowMax = !max || year <= max.getFullYear();\n        return aboveMin && belowMax;\n    };\n    DecadeViewService.prototype.isRangeStart = function (value) {\n        return value.getFullYear() % 100 === 0;\n    };\n    DecadeViewService.prototype.isInSameView = function (candidate, value) {\n        return durationInDecades(candidate, value) === 0;\n    };\n    DecadeViewService.prototype.move = function (value, action) {\n        var modifier = ACTIONS[action];\n        if (!modifier) {\n            return value;\n        }\n        return modifier(value);\n    };\n    DecadeViewService.prototype.cellTitle = function (value) {\n        return value.getFullYear().toString();\n    };\n    DecadeViewService.prototype.navigationTitle = function (value) {\n        return value ? firstYearOfDecade(value).getFullYear().toString() : '';\n    };\n    DecadeViewService.prototype.title = function (value) {\n        if (!value) {\n            return '';\n        }\n        return firstYearOfDecade(value).getFullYear() + \" - \" + lastYearOfDecade(value).getFullYear();\n    };\n    DecadeViewService.prototype.rowLength = function (_) {\n        return CELLS_LENGTH;\n    };\n    DecadeViewService.prototype.skip = function (value, min) {\n        return durationInDecades(min, value);\n    };\n    DecadeViewService.prototype.total = function (min, max) {\n        return durationInDecades(min, max) + 1;\n    };\n    DecadeViewService.prototype.value = function (current) {\n        return current ? current.getFullYear().toString() : '';\n    };\n    DecadeViewService.prototype.viewDate = function (date, max, border) {\n        if (border === void 0) { border = 1; }\n        var renderTwoViews = durationInDecades(date, max) < border;\n        return renderTwoViews ? addDecades(date, -1) : date;\n    };\n    DecadeViewService.prototype.normalize = function (cellDate, min, max) {\n        if (cellDate < min && this.isEqual(cellDate, min)) {\n            return cloneDate(min);\n        }\n        if (cellDate > max && this.isEqual(cellDate, max)) {\n            return cloneDate(max);\n        }\n        return cellDate;\n    };\n    return DecadeViewService;\n}());\nexport { DecadeViewService };\n//# sourceMappingURL=DecadeViewService.js.map"]},"metadata":{},"sourceType":"module"}