{"ast":null,"code":"var _jsxFileName = \"/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/MenuSelector.js\";\nimport React, { Component } from 'react';\nimport { ComboBox } from '@progress/kendo-react-dropdowns';\nimport { DatePicker } from 'react-datepicker';\nimport { ClientTable, ProductTable } from './Grids';\nimport io from 'socket.io-client';\nimport '@progress/kendo-theme-default/dist/all.css';\nconst url = \"http://localhost:8000\";\n\nconst StoreSelector = () => {\n  const [state, setState] = React.useState({\n    store: undefined,\n    payment_method: undefined,\n    date: undefined,\n    category: undefined,\n    open: true,\n    transaction_data: [],\n    possible_payment_methods: ['', 'Credit Card', 'Cash'],\n    names: [],\n    socket: io(url)\n  });\n\n  const handleName = event => {\n    setState({ ...state,\n      store: event.target.value\n    });\n  };\n\n  const handlePayment = event => {\n    switch (event.target.value) {\n      case 'Credit Card':\n        state.payment_method = 0;\n        break;\n\n      case 'Cash':\n        state.payment_method = 1;\n        break;\n\n      default:\n        state.payment_method = undefined;\n    }\n\n    state.socket.emit('FETCH_TRANSACTIONS', {\n      'store': state.store,\n      'payment_method': state.payment_method,\n      'date': state.date,\n      'category': state.category\n    });\n  };\n\n  state.socket.on('TRANSACTION_DATA', data => {\n    setState({ ...state,\n      transaction_data: data\n    });\n  });\n  state.socket.on('STORE_ADDRESSES', data => {\n    setState({ ...state,\n      names: data\n    });\n  });\n  const [startDate, setStartDate] = useState(new Date());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, \" \\u0395\\u03C0\\u03B9\\u03BB\\u03BF\\u03B3\\u03AE \\u039A\\u03B1\\u03C4\\u03B1\\u03C3\\u03C4\\u03AE\\u03BC\\u03B1\\u03C4\\u03BF\\u03C2 \"), /*#__PURE__*/React.createElement(ComboBox, {\n    data: state.names,\n    onChange: handleName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(ComboBox, {\n    data: state.possible_payment_methods,\n    onChange: handlePayment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(ProductTable, {\n    columnData: state.transaction_data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }));\n};\n\nconst ClientSelector = () => {\n  const [state, setState] = React.useState({\n    item: undefined,\n    open: true,\n    data: [],\n    socket: io(url),\n    grid: /*#__PURE__*/React.createElement(ClientTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }),\n    comboBox: /*#__PURE__*/React.createElement(ComboBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      open: true\n    });\n    setState({ ...state,\n      item: event.target.value\n    });\n    state.socket.emit('SELECT_CUSTOMER', event.target.value);\n  };\n\n  state.socket.on('CUSTOMER_NAMES', data => {\n    setState({ ...state,\n      comboBox: /*#__PURE__*/React.createElement(ComboBox, {\n        data: data,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 36\n        }\n      })\n    });\n  });\n  state.socket.on('CUSTOMER_DATA', data => {\n    state.data = data;\n    setState({ ...state,\n      grid: /*#__PURE__*/React.createElement(ClientTable, {\n        columnData: state.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 32\n        }\n      })\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, \" \\u0395\\u03C0\\u03B9\\u03BB\\u03BF\\u03B3\\u03AE \\u03A0\\u03B5\\u03BB\\u03AC\\u03C4\\u03B7 \"), state.comboBox, state.grid);\n};\n\nexport { StoreSelector, ClientSelector };","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/MenuSelector.js"],"names":["React","Component","ComboBox","DatePicker","ClientTable","ProductTable","io","url","StoreSelector","state","setState","useState","store","undefined","payment_method","date","category","open","transaction_data","possible_payment_methods","names","socket","handleName","event","target","value","handlePayment","emit","on","data","startDate","setStartDate","Date","ClientSelector","item","grid","comboBox","handleChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { ComboBox } from '@progress/kendo-react-dropdowns';\nimport { DatePicker } from 'react-datepicker'; \nimport {ClientTable, ProductTable} from './Grids';\nimport io from 'socket.io-client';\n\nimport '@progress/kendo-theme-default/dist/all.css'\n\nconst url = \"http://localhost:8000\"\n\nconst StoreSelector = () => {\n\tconst [state, setState] = React.useState({\n\t\tstore: undefined, \n\t\tpayment_method: undefined,\n\t\tdate: undefined,\n\t\tcategory: undefined,\n\t\topen: true, \n\t\ttransaction_data: [], \n\t\tpossible_payment_methods: [ '', 'Credit Card', 'Cash' ],\n\t\tnames: [],\n\t\tsocket: io( url )\n\t});\n\tconst handleName = (event) => {\n\t\tsetState({ ...state, store: event.target.value })\n\t}\n\tconst handlePayment = (event) => {\n\t\tswitch( event.target.value ) {\n\t\t\tcase 'Credit Card':\n\t\t\t\tstate.payment_method = 0\n\t\t\t\tbreak\n\t\t\tcase 'Cash':\n\t\t\t\tstate.payment_method = 1\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tstate.payment_method = undefined\n\t\t}\n\t\tstate.socket.emit('FETCH_TRANSACTIONS', ( { 'store': state.store, \n\t\t\t\t\t\t\t    'payment_method': state.payment_method,\n\t\t\t\t\t\t\t    'date': state.date, \n\t\t\t\t\t\t\t    'category': state.category } ) )\n\t}\n\tstate.socket.on('TRANSACTION_DATA', data => {\n\t\tsetState({ ...state, transaction_data: data })\t\n\t});\n\tstate.socket.on('STORE_ADDRESSES', data => {\n\t\tsetState({ ...state, names: data })\t\n\t});\n\tconst [startDate, setStartDate] = useState(new Date());\n\treturn (\n\t\t<div className=\"Selector\">\n\t\t<h2> Επιλογή Καταστήματος </h2>\n\t\t<ComboBox data={state.names} onChange={handleName}/>\n\t\t<ComboBox data={state.possible_payment_methods} onChange={handlePayment}/>\n\t\t<DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n\t\t<ProductTable columnData={state.transaction_data}/>\n\t\t</div>\n\t);\n}\n\nconst ClientSelector = () => {\n\tconst [state, setState] = React.useState({\n\t\titem: undefined, \n\t\topen: true, \n\t\tdata: [], \n\t\tsocket: io( url ),\n\t\tgrid: <ClientTable/>,\n\t\tcomboBox: <ComboBox/>\n\t});\n\tconst handleChange = (event) => {\n\t\tsetState({ ...state, open: true })\n\t\tsetState({ ...state, item: event.target.value })\t\n\t\tstate.socket.emit( 'SELECT_CUSTOMER', event.target.value )\n\t}\n\tstate.socket.on('CUSTOMER_NAMES', data => {\n\t\tsetState({ ...state, comboBox: ( <ComboBox data={data} onChange={handleChange}/> ) })\n\t});\n\tstate.socket.on('CUSTOMER_DATA', data => {\n\t\tstate.data = data;\n\t\tsetState({ ...state, grid: ( <ClientTable columnData={state.data}/> ) })\n\t});\n\treturn (\n\t\t<div className=\"Selector\">\n\t\t<h1> Επιλογή Πελάτη </h1>\n\t\t{state.comboBox}\n\t\t{state.grid}\n\t\t</div>\n\t);\n}\n\nexport { StoreSelector, ClientSelector };\n"]},"metadata":{},"sourceType":"module"}