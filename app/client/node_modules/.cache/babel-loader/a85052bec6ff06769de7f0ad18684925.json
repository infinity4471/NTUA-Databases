{"ast":null,"code":"import { greedy, sequence } from './parsing/combinators';\nimport { literal, mask as maskParser, rawLiteral, rawMask, token, unliteral, unmask } from './parsing/parsers';\n/**\n * @hidden\n */\n\nvar MaskingService =\n/** @class */\nfunction () {\n  function MaskingService() {\n    this.rules = {};\n    this.prompt = '_';\n    this.mask = '';\n    this.promptPlaceholder = ' ';\n    this.includeLiterals = false;\n    this.maskTokens = [];\n    this.unmaskTokens = [];\n    this.rawTokens = [];\n    this.validationTokens = [];\n  }\n\n  MaskingService.prototype.update = function (_a) {\n    var _b = _a.mask,\n        mask = _b === void 0 ? '' : _b,\n        _c = _a.prompt,\n        prompt = _c === void 0 ? '' : _c,\n        _d = _a.promptPlaceholder,\n        promptPlaceholder = _d === void 0 ? ' ' : _d,\n        _e = _a.rules,\n        rules = _e === void 0 ? {} : _e,\n        _f = _a.includeLiterals,\n        includeLiterals = _f === void 0 ? false : _f;\n    this.mask = mask;\n    this.prompt = prompt;\n    this.promptPlaceholder = promptPlaceholder;\n    this.rules = rules;\n    this.includeLiterals = includeLiterals;\n    this.tokenize();\n  };\n\n  MaskingService.prototype.validationValue = function (maskedValue) {\n    if (maskedValue === void 0) {\n      maskedValue = '';\n    }\n\n    var value = maskedValue;\n    sequence(this.validationTokens).run(maskedValue).fold(function (unmasked) {\n      value = unmasked.join('');\n    });\n    return value;\n  };\n\n  MaskingService.prototype.rawValue = function (maskedValue) {\n    if (maskedValue === void 0) {\n      maskedValue = '';\n    }\n\n    var value = maskedValue;\n\n    if (!this.rawTokens.length) {\n      return value;\n    }\n\n    sequence(this.rawTokens).run(maskedValue).fold(function (unmasked) {\n      value = unmasked.join('');\n    });\n    return value;\n  };\n  /**\n   * @hidden\n   */\n\n\n  MaskingService.prototype.maskRaw = function (rawValue) {\n    if (rawValue === void 0) {\n      rawValue = '';\n    }\n\n    var value = rawValue;\n\n    if (!this.maskTokens.length) {\n      return value;\n    }\n\n    sequence(this.maskTokens).run(rawValue).fold(function (masked) {\n      value = masked.join('');\n    });\n    return value;\n  };\n\n  MaskingService.prototype.maskInput = function (input, control, splitPoint) {\n    if (input.length < control.length) {\n      return this.maskRemoved(input, control, splitPoint);\n    }\n\n    return this.maskInserted(input, control, splitPoint);\n  };\n\n  MaskingService.prototype.maskInRange = function (pasted, oldValue, start, end) {\n    var value = '';\n    var selection = end;\n    var beforeChange = oldValue.split('').slice(0, start);\n    var afterChange = oldValue.split('').slice(end);\n    sequence(this.maskTokens.slice(start, end)).run(pasted).fold(function (masked) {\n      value = beforeChange.concat(masked).concat(afterChange).join('');\n    });\n    return {\n      selection: selection,\n      value: value\n    };\n  };\n\n  MaskingService.prototype.maskRemoved = function (input, control, splitPoint) {\n    var _this = this;\n\n    var value = '';\n    var selection = splitPoint;\n    var unchanged = input.split('').slice(splitPoint);\n    var changed = input.split('').slice(0, splitPoint).join('');\n    var take = this.maskTokens.length - (input.length - splitPoint);\n    sequence(this.maskTokens.slice(0, take)).run(changed, control).fold(function (masked) {\n      selection = _this.adjustPosition(masked, selection);\n      value = masked.concat(unchanged).join('');\n    });\n    return {\n      selection: selection,\n      value: value\n    };\n  };\n\n  MaskingService.prototype.adjustPosition = function (input, selection) {\n    var caretChar = input[selection];\n    var isLiteral = this.maskTokens[selection].isLiteral(caretChar);\n\n    if (!isLiteral && caretChar !== this.prompt) {\n      return selection + 1;\n    }\n\n    return selection;\n  };\n\n  MaskingService.prototype.maskInserted = function (input, control, splitPoint) {\n    var _this = this;\n\n    var value = '';\n    var selection = splitPoint;\n    var changed = input.slice(0, splitPoint);\n    sequence(this.unmaskTokens).run(changed, control).chain(function (unmasked) {\n      selection = unmasked.join('').length;\n      var unchanged = control.slice(selection);\n      return sequence(_this.maskTokens).run(unmasked.join('') + unchanged, control);\n    }).fold(function (masked) {\n      value = masked.join('');\n    });\n    return {\n      selection: selection,\n      value: value\n    };\n  };\n\n  Object.defineProperty(MaskingService.prototype, \"maskTokenCreator\", {\n    get: function () {\n      var _a = this,\n          prompt = _a.prompt,\n          promptPlaceholder = _a.promptPlaceholder;\n\n      return {\n        literal: function (rule) {\n          return literal(rule);\n        },\n        mask: function (rule) {\n          return maskParser({\n            prompt: prompt,\n            promptPlaceholder: promptPlaceholder\n          })(rule);\n        }\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MaskingService.prototype, \"unmaskTokenCreator\", {\n    get: function () {\n      var _this = this;\n\n      return {\n        literal: function (rule) {\n          return unliteral(rule);\n        },\n        mask: function (rule) {\n          return unmask(_this.prompt)(rule);\n        }\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MaskingService.prototype, \"rawTokenCreator\", {\n    get: function () {\n      var _a = this,\n          prompt = _a.prompt,\n          promptPlaceholder = _a.promptPlaceholder,\n          includeLiterals = _a.includeLiterals;\n\n      return {\n        literal: function (_) {\n          return rawLiteral(includeLiterals);\n        },\n        mask: function (_) {\n          return rawMask({\n            prompt: prompt,\n            promptPlaceholder: promptPlaceholder\n          });\n        }\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MaskingService.prototype, \"validationTokenCreator\", {\n    get: function () {\n      var prompt = this.prompt;\n      return {\n        literal: function (_) {\n          return rawLiteral(false);\n        },\n        mask: function (_) {\n          return rawMask({\n            prompt: prompt,\n            promptPlaceholder: ''\n          });\n        }\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MaskingService.prototype.tokenize = function () {\n    var _this = this;\n\n    greedy(token(this.rules, this.maskTokenCreator)).run(this.mask).fold(function (tokens, _) {\n      _this.maskTokens = tokens;\n    });\n    greedy(token(this.rules, this.unmaskTokenCreator)).run(this.mask).fold(function (tokens, _) {\n      _this.unmaskTokens = tokens;\n    });\n    greedy(token(this.rules, this.rawTokenCreator)).run(this.mask).fold(function (tokens, _) {\n      _this.rawTokens = tokens;\n    });\n    greedy(token(this.rules, this.validationTokenCreator)).run(this.mask).fold(function (tokens, _) {\n      _this.validationTokens = tokens;\n    });\n  };\n\n  return MaskingService;\n}();\n\nexport { MaskingService };","map":{"version":3,"sources":["../../../src/maskedtextbox/masking.service.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { greedy, sequence } from './parsing/combinators';\nimport { literal, mask as maskParser, rawLiteral, rawMask, token, unliteral, unmask } from './parsing/parsers';\n/**\n * @hidden\n */\nvar MaskingService = /** @class */ (function () {\n    function MaskingService() {\n        this.rules = {};\n        this.prompt = '_';\n        this.mask = '';\n        this.promptPlaceholder = ' ';\n        this.includeLiterals = false;\n        this.maskTokens = [];\n        this.unmaskTokens = [];\n        this.rawTokens = [];\n        this.validationTokens = [];\n    }\n    MaskingService.prototype.update = function (_a) {\n        var _b = _a.mask, mask = _b === void 0 ? '' : _b, _c = _a.prompt, prompt = _c === void 0 ? '' : _c, _d = _a.promptPlaceholder, promptPlaceholder = _d === void 0 ? ' ' : _d, _e = _a.rules, rules = _e === void 0 ? {} : _e, _f = _a.includeLiterals, includeLiterals = _f === void 0 ? false : _f;\n        this.mask = mask;\n        this.prompt = prompt;\n        this.promptPlaceholder = promptPlaceholder;\n        this.rules = rules;\n        this.includeLiterals = includeLiterals;\n        this.tokenize();\n    };\n    MaskingService.prototype.validationValue = function (maskedValue) {\n        if (maskedValue === void 0) { maskedValue = ''; }\n        var value = maskedValue;\n        sequence(this.validationTokens)\n            .run(maskedValue)\n            .fold(function (unmasked) {\n            value = unmasked.join('');\n        });\n        return value;\n    };\n    MaskingService.prototype.rawValue = function (maskedValue) {\n        if (maskedValue === void 0) { maskedValue = ''; }\n        var value = maskedValue;\n        if (!this.rawTokens.length) {\n            return value;\n        }\n        sequence(this.rawTokens)\n            .run(maskedValue)\n            .fold(function (unmasked) {\n            value = unmasked.join('');\n        });\n        return value;\n    };\n    /**\n     * @hidden\n     */\n    MaskingService.prototype.maskRaw = function (rawValue) {\n        if (rawValue === void 0) { rawValue = ''; }\n        var value = rawValue;\n        if (!this.maskTokens.length) {\n            return value;\n        }\n        sequence(this.maskTokens)\n            .run(rawValue)\n            .fold(function (masked) {\n            value = masked.join('');\n        });\n        return value;\n    };\n    MaskingService.prototype.maskInput = function (input, control, splitPoint) {\n        if (input.length < control.length) {\n            return this.maskRemoved(input, control, splitPoint);\n        }\n        return this.maskInserted(input, control, splitPoint);\n    };\n    MaskingService.prototype.maskInRange = function (pasted, oldValue, start, end) {\n        var value = '';\n        var selection = end;\n        var beforeChange = oldValue.split('').slice(0, start);\n        var afterChange = oldValue.split('').slice(end);\n        sequence(this.maskTokens.slice(start, end))\n            .run(pasted)\n            .fold(function (masked) {\n            value = beforeChange\n                .concat(masked)\n                .concat(afterChange)\n                .join('');\n        });\n        return {\n            selection: selection,\n            value: value\n        };\n    };\n    MaskingService.prototype.maskRemoved = function (input, control, splitPoint) {\n        var _this = this;\n        var value = '';\n        var selection = splitPoint;\n        var unchanged = input.split('').slice(splitPoint);\n        var changed = input.split('').slice(0, splitPoint).join('');\n        var take = this.maskTokens.length - (input.length - splitPoint);\n        sequence(this.maskTokens.slice(0, take))\n            .run(changed, control)\n            .fold(function (masked) {\n            selection = _this.adjustPosition(masked, selection);\n            value = masked.concat(unchanged).join('');\n        });\n        return {\n            selection: selection,\n            value: value\n        };\n    };\n    MaskingService.prototype.adjustPosition = function (input, selection) {\n        var caretChar = input[selection];\n        var isLiteral = this.maskTokens[selection].isLiteral(caretChar);\n        if (!isLiteral && caretChar !== this.prompt) {\n            return selection + 1;\n        }\n        return selection;\n    };\n    MaskingService.prototype.maskInserted = function (input, control, splitPoint) {\n        var _this = this;\n        var value = '';\n        var selection = splitPoint;\n        var changed = input.slice(0, splitPoint);\n        sequence(this.unmaskTokens)\n            .run(changed, control)\n            .chain(function (unmasked) {\n            selection = unmasked.join('').length;\n            var unchanged = control.slice(selection);\n            return sequence(_this.maskTokens)\n                .run(unmasked.join('') + unchanged, control);\n        })\n            .fold(function (masked) {\n            value = masked.join('');\n        });\n        return {\n            selection: selection,\n            value: value\n        };\n    };\n    Object.defineProperty(MaskingService.prototype, \"maskTokenCreator\", {\n        get: function () {\n            var _a = this, prompt = _a.prompt, promptPlaceholder = _a.promptPlaceholder;\n            return {\n                literal: function (rule) { return literal(rule); },\n                mask: function (rule) { return maskParser({ prompt: prompt, promptPlaceholder: promptPlaceholder })(rule); }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaskingService.prototype, \"unmaskTokenCreator\", {\n        get: function () {\n            var _this = this;\n            return {\n                literal: function (rule) { return unliteral(rule); },\n                mask: function (rule) { return unmask(_this.prompt)(rule); }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaskingService.prototype, \"rawTokenCreator\", {\n        get: function () {\n            var _a = this, prompt = _a.prompt, promptPlaceholder = _a.promptPlaceholder, includeLiterals = _a.includeLiterals;\n            return {\n                literal: function (_) { return rawLiteral(includeLiterals); },\n                mask: function (_) { return rawMask({ prompt: prompt, promptPlaceholder: promptPlaceholder }); }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaskingService.prototype, \"validationTokenCreator\", {\n        get: function () {\n            var prompt = this.prompt;\n            return {\n                literal: function (_) { return rawLiteral(false); },\n                mask: function (_) { return rawMask({ prompt: prompt, promptPlaceholder: '' }); }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MaskingService.prototype.tokenize = function () {\n        var _this = this;\n        greedy(token(this.rules, this.maskTokenCreator))\n            .run(this.mask)\n            .fold(function (tokens, _) {\n            _this.maskTokens = tokens;\n        });\n        greedy(token(this.rules, this.unmaskTokenCreator))\n            .run(this.mask)\n            .fold(function (tokens, _) {\n            _this.unmaskTokens = tokens;\n        });\n        greedy(token(this.rules, this.rawTokenCreator))\n            .run(this.mask)\n            .fold(function (tokens, _) {\n            _this.rawTokens = tokens;\n        });\n        greedy(token(this.rules, this.validationTokenCreator))\n            .run(this.mask)\n            .fold(function (tokens, _) {\n            _this.validationTokens = tokens;\n        });\n    };\n    return MaskingService;\n}());\nexport { MaskingService };\n//# sourceMappingURL=masking.service.js.map"]},"metadata":{},"sourceType":"module"}