{"ast":null,"code":"import { PRECISION } from '../constants';\nimport { Class } from '../../common';\nimport { round } from '../../util';\n\nvar ComplexNumber = function (Class) {\n  function ComplexNumber(real, img) {\n    if (real === void 0) real = 0;\n    if (img === void 0) img = 0;\n    Class.call(this);\n    this.real = real;\n    this.img = img;\n  }\n\n  if (Class) ComplexNumber.__proto__ = Class;\n  ComplexNumber.prototype = Object.create(Class && Class.prototype);\n  ComplexNumber.prototype.constructor = ComplexNumber;\n\n  ComplexNumber.prototype.add = function add(cNumber) {\n    return new ComplexNumber(round(this.real + cNumber.real, PRECISION), round(this.img + cNumber.img, PRECISION));\n  };\n\n  ComplexNumber.prototype.addConstant = function addConstant(value) {\n    return new ComplexNumber(this.real + value, this.img);\n  };\n\n  ComplexNumber.prototype.negate = function negate() {\n    return new ComplexNumber(-this.real, -this.img);\n  };\n\n  ComplexNumber.prototype.multiply = function multiply(cNumber) {\n    return new ComplexNumber(this.real * cNumber.real - this.img * cNumber.img, this.real * cNumber.img + this.img * cNumber.real);\n  };\n\n  ComplexNumber.prototype.multiplyConstant = function multiplyConstant(value) {\n    return new ComplexNumber(this.real * value, this.img * value);\n  };\n\n  ComplexNumber.prototype.nthRoot = function nthRoot(n) {\n    var rad = Math.atan2(this.img, this.real);\n    var r = Math.sqrt(Math.pow(this.img, 2) + Math.pow(this.real, 2));\n    var nthR = Math.pow(r, 1 / n);\n    return new ComplexNumber(nthR * Math.cos(rad / n), nthR * Math.sin(rad / n)); //Moivre's formula\n  };\n\n  ComplexNumber.prototype.equals = function equals(cNumber) {\n    return this.real === cNumber.real && this.img === cNumber.img;\n  };\n\n  ComplexNumber.prototype.isReal = function isReal() {\n    return this.img === 0;\n  };\n\n  return ComplexNumber;\n}(Class);\n\nexport default ComplexNumber;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/geometry/math/complex-number.js"],"names":["PRECISION","Class","round","ComplexNumber","real","img","call","__proto__","prototype","Object","create","constructor","add","cNumber","addConstant","value","negate","multiply","multiplyConstant","nthRoot","n","rad","Math","atan2","r","sqrt","pow","nthR","cos","sin","equals","isReal"],"mappings":"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","sourcesContent":["import { PRECISION } from '../constants';\nimport { Class } from '../../common';\nimport { round } from '../../util';\n\nvar ComplexNumber = (function (Class) {\n    function ComplexNumber(real, img) {\n        if ( real === void 0 ) real = 0;\n        if ( img === void 0 ) img = 0;\n\n        Class.call(this);\n\n        this.real = real;\n        this.img = img;\n    }\n\n    if ( Class ) ComplexNumber.__proto__ = Class;\n    ComplexNumber.prototype = Object.create( Class && Class.prototype );\n    ComplexNumber.prototype.constructor = ComplexNumber;\n\n    ComplexNumber.prototype.add = function add (cNumber) {\n        return new ComplexNumber(round(this.real + cNumber.real, PRECISION), round(this.img + cNumber.img, PRECISION));\n    };\n\n    ComplexNumber.prototype.addConstant = function addConstant (value) {\n        return new ComplexNumber(this.real + value, this.img);\n    };\n\n    ComplexNumber.prototype.negate = function negate () {\n        return new ComplexNumber(-this.real, -this.img);\n    };\n\n    ComplexNumber.prototype.multiply = function multiply (cNumber) {\n        return new ComplexNumber(this.real * cNumber.real - this.img * cNumber.img,\n            this.real * cNumber.img + this.img * cNumber.real);\n    };\n\n    ComplexNumber.prototype.multiplyConstant = function multiplyConstant (value) {\n        return new ComplexNumber(this.real * value, this.img * value);\n    };\n\n    ComplexNumber.prototype.nthRoot = function nthRoot (n) {\n        var rad = Math.atan2(this.img, this.real);\n        var r = Math.sqrt(Math.pow(this.img, 2) + Math.pow(this.real, 2));\n        var nthR = Math.pow(r, 1 / n);\n\n        return new ComplexNumber(nthR * Math.cos(rad / n), nthR * Math.sin(rad / n)); //Moivre's formula\n    };\n\n    ComplexNumber.prototype.equals = function equals (cNumber) {\n        return this.real === cNumber.real && this.img === cNumber.img;\n    };\n\n    ComplexNumber.prototype.isReal = function isReal () {\n        return this.img === 0;\n    };\n\n    return ComplexNumber;\n}(Class));\n\nexport default ComplexNumber;"]},"metadata":{},"sourceType":"module"}