{"ast":null,"code":"import { initialStoresState } from './initialState';\n\nconst storesReducer = (state = initialStoresState, action) => {\n  switch (action.type) {\n    case 'UPDATE_STORES':\n      return Object.freeze({ ...state,\n        addresses: [...action.payload]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { storesReducer };","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/reducers/storesReducer.js"],"names":["initialStoresState","storesReducer","state","action","type","Object","freeze","addresses","payload"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,gBAAnC;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGF,kBAAT,EAA6BG,MAA7B,KAAyC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,eAAL;AACC,aAAOC,MAAM,CAACC,MAAP,CAAc,EACpB,GAAGJ,KADiB;AAEpBK,QAAAA,SAAS,EAAE,CACV,GAAGJ,MAAM,CAACK,OADA;AAFS,OAAd,CAAP;;AAOD;AAAS,aAAON,KAAP;AATV;AAWA,CAZD;;AAcA,SAAQD,aAAR","sourcesContent":["import { initialStoresState } from './initialState';\n\nconst storesReducer = (state = initialStoresState, action ) => {\n\tswitch( action.type ) {\n\t\tcase 'UPDATE_STORES':\n\t\t\treturn Object.freeze({\n\t\t\t\t...state,\n\t\t\t\taddresses: [\n\t\t\t\t\t...action.payload\n\t\t\t\t]\n\t\t\t\t\n\t\t\t});\n\t\tdefault: return state\n\t}\n}\n\nexport {storesReducer};\n"]},"metadata":{},"sourceType":"module"}