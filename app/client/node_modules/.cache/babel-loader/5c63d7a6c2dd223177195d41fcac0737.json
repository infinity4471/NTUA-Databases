{"ast":null,"code":"import * as easingFunctions from './easing-functions';\nimport { limitValue } from '../util';\nimport { animationFrame, Class } from '../common';\nimport AnimationFactory from './animation-factory';\n\nvar now = Date.now || function () {\n  return new Date().getTime();\n};\n\nvar Animation = function (Class) {\n  function Animation(element, options) {\n    Class.call(this);\n    this.options = Object.assign({}, this.options, options);\n    this.element = element;\n  }\n\n  if (Class) Animation.__proto__ = Class;\n  Animation.prototype = Object.create(Class && Class.prototype);\n  Animation.prototype.constructor = Animation;\n\n  Animation.prototype.setup = function setup() {};\n\n  Animation.prototype.step = function step() {};\n\n  Animation.prototype.play = function play() {\n    var this$1 = this;\n    var options = this.options;\n    var duration = options.duration;\n    var delay = options.delay;\n    if (delay === void 0) delay = 0;\n    var easing = easingFunctions[options.easing];\n    var start = now() + delay;\n    var finish = start + duration;\n\n    if (duration === 0) {\n      this.step(1);\n      this.abort();\n    } else {\n      setTimeout(function () {\n        var loop = function () {\n          if (this$1._stopped) {\n            return;\n          }\n\n          var wallTime = now();\n          var time = limitValue(wallTime - start, 0, duration);\n          var position = time / duration;\n          var easingPosition = easing(position, time, 0, 1, duration);\n          this$1.step(easingPosition);\n\n          if (wallTime < finish) {\n            animationFrame(loop);\n          } else {\n            this$1.abort();\n          }\n        };\n\n        loop();\n      }, delay);\n    }\n  };\n\n  Animation.prototype.abort = function abort() {\n    this._stopped = true;\n  };\n\n  Animation.prototype.destroy = function destroy() {\n    this.abort();\n  };\n\n  return Animation;\n}(Class);\n\nAnimation.prototype.options = {\n  duration: 500,\n  easing: \"swing\"\n};\n\nAnimation.create = function (type, element, options) {\n  return AnimationFactory.current.create(type, element, options);\n};\n\nexport default Animation;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/animations/animation.js"],"names":["easingFunctions","limitValue","animationFrame","Class","AnimationFactory","now","Date","getTime","Animation","element","options","call","Object","assign","__proto__","prototype","create","constructor","setup","step","play","this$1","duration","delay","easing","start","finish","abort","setTimeout","loop","_stopped","wallTime","time","position","easingPosition","destroy","type","current"],"mappings":"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","sourcesContent":["import * as easingFunctions from './easing-functions';\nimport { limitValue } from '../util';\nimport { animationFrame, Class } from '../common';\nimport AnimationFactory from './animation-factory';\n\nvar now = Date.now || function() {\n    return new Date().getTime();\n};\n\nvar Animation = (function (Class) {\n    function Animation(element, options) {\n        Class.call(this);\n\n        this.options = Object.assign({}, this.options, options);\n        this.element = element;\n    }\n\n    if ( Class ) Animation.__proto__ = Class;\n    Animation.prototype = Object.create( Class && Class.prototype );\n    Animation.prototype.constructor = Animation;\n\n    Animation.prototype.setup = function setup () {};\n    Animation.prototype.step = function step () {};\n\n    Animation.prototype.play = function play () {\n        var this$1 = this;\n\n        var options = this.options;\n        var duration = options.duration;\n        var delay = options.delay; if ( delay === void 0 ) delay = 0;\n        var easing = easingFunctions[options.easing];\n        var start = now() + delay;\n        var finish = start + duration;\n\n        if (duration === 0) {\n            this.step(1);\n            this.abort();\n        } else {\n            setTimeout(function () {\n                var loop = function () {\n                    if (this$1._stopped) {\n                        return;\n                    }\n\n                    var wallTime = now();\n\n                    var time = limitValue(wallTime - start, 0, duration);\n                    var position = time / duration;\n                    var easingPosition = easing(position, time, 0, 1, duration);\n\n                    this$1.step(easingPosition);\n\n                    if (wallTime < finish) {\n                        animationFrame(loop);\n                    } else {\n                        this$1.abort();\n                    }\n                };\n\n                loop();\n            }, delay);\n        }\n    };\n\n    Animation.prototype.abort = function abort () {\n        this._stopped = true;\n    };\n\n    Animation.prototype.destroy = function destroy () {\n        this.abort();\n    };\n\n    return Animation;\n}(Class));\n\nAnimation.prototype.options = {\n    duration: 500,\n    easing: \"swing\"\n};\n\nAnimation.create = function(type, element, options) {\n    return AnimationFactory.current.create(type, element, options);\n};\n\nexport default Animation;\n"]},"metadata":{},"sourceType":"module"}