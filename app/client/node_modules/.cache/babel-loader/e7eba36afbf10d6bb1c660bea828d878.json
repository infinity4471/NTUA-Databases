{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames, Keys, useDir, getTabIndex } from '@progress/kendo-react-common';\nimport { Picker } from './Picker';\nimport { ColorGradient } from './ColorGradient';\nimport { ColorPalette, DEFAULT_PRESET, DEFAULT_TILE_SIZE } from './ColorPalette';\n/**\n * @hidden\n */\n\nvar DEFAULT_GRADIENT_SETTINGS = {\n  opacity: true\n};\n/**\n * @hidden\n */\n\nvar DEFAULT_PALETTE_SETTINGS = {\n  palette: DEFAULT_PRESET,\n  tileSize: DEFAULT_TILE_SIZE\n};\n/**\n * @hidden\n */\n\nvar isControlled = function (prop) {\n  return prop !== undefined;\n};\n/**\n * Represents the [KendoReact ColorPicker component]({% slug overview_colorpicker %}).\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *     render() {\n *         return <ColorPicker />;\n *     }\n * }\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\n\nexport var ColorPicker = React.forwardRef(function (props, target) {\n  var popupSettings = props.popupSettings,\n      gradientSettings = props.gradientSettings,\n      paletteSettings = props.paletteSettings,\n      valid = props.valid,\n      disabled = props.disabled,\n      tabIndex = props.tabIndex,\n      view = props.view,\n      icon = props.icon,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur;\n  var focusableElementRef = React.useRef(null);\n  var gradientRef = React.useRef(null);\n  var paletteRef = React.useRef(null);\n  var blurTimeoutRef = React.useRef();\n  var buttonRef = React.useRef(null);\n  var focusElement = React.useCallback(function () {\n    if (focusableElementRef.current) {\n      focusableElementRef.current.focus();\n    }\n  }, []);\n  React.useImperativeHandle(target, function () {\n    return {\n      // we agreed that each element will have focus method exposed\n      element: focusableElementRef.current,\n      actionElement: buttonRef.current,\n      focus: focusElement\n    };\n  });\n\n  var _a = React.useState(false),\n      focused = _a[0],\n      setFocused = _a[1];\n\n  var _b = React.useState(props.defaultValue),\n      stateValue = _b[0],\n      setStateValue = _b[1];\n\n  var _c = React.useState(false),\n      stateOpen = _c[0],\n      setStateOpen = _c[1];\n\n  var isValueControlled = isControlled(props.value);\n  var isOpenControlled = isControlled(props.open);\n  var value = isValueControlled ? props.value : stateValue;\n  var open = isOpenControlled ? props.open : stateOpen;\n  var setOpen = React.useCallback(function (nextOpen, isBlur) {\n    if (!isOpenControlled) {\n      if (!nextOpen && !isBlur && focusableElementRef && focusableElementRef.current) {\n        focusableElementRef.current.focus();\n      }\n\n      setStateOpen(nextOpen);\n    }\n  }, [isOpenControlled]);\n  var onKeyDownHandler = React.useCallback(function (event) {\n    var altKey = event.altKey,\n        keyCode = event.keyCode;\n\n    if (keyCode === Keys.esc) {\n      setOpen(false);\n      return;\n    }\n\n    if (keyCode === Keys.enter && !isOpenControlled) {\n      event.preventDefault();\n      event.stopPropagation();\n      setOpen(!open);\n      return;\n    }\n\n    if (altKey && (keyCode === Keys.up || keyCode === Keys.down)) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (keyCode === Keys.up && focusableElementRef && focusableElementRef.current) {\n        focusableElementRef.current.focus();\n        setOpen(false);\n      }\n\n      if (keyCode === Keys.down) {\n        setOpen(true);\n      }\n    }\n  }, [open, isOpenControlled]);\n  var onOpenHandler = React.useCallback(function () {\n    // Skip content autofocus when in controlled mode\n    if (!isOpenControlled) {\n      if (gradientRef.current) {\n        gradientRef.current.focus();\n      } else if (paletteRef.current) {\n        paletteRef.current.focus();\n      }\n    }\n  }, [isOpenControlled]);\n  var onClickHandler = React.useCallback(function () {\n    setOpen(!open, true);\n  }, [open]);\n  var onFocusHandler = React.useCallback(function (event) {\n    if (blurTimeoutRef.current) {\n      clearTimeout(blurTimeoutRef.current);\n      blurTimeoutRef.current = undefined; // case where moving back to input from popup\n      // if (event.target === focusableElementRef.current) {\n      // setOpen(false); // in this case we should focus input on keydown\n      // }\n    } else {\n      setFocused(true);\n    }\n\n    if (onFocus) {\n      onFocus.call(undefined, {\n        nativeEvent: event.nativeEvent,\n        syntheticEvent: event\n      });\n    }\n  }, [onFocus]);\n  var onBlurTimeout = React.useCallback(function () {\n    setOpen(false, true);\n    setFocused(false);\n    blurTimeoutRef.current = undefined;\n  }, []);\n  var onBlurHandler = React.useCallback(function (event) {\n    clearTimeout(blurTimeoutRef.current);\n    blurTimeoutRef.current = setTimeout(onBlurTimeout);\n\n    if (onBlur) {\n      onBlur.call(undefined, {\n        nativeEvent: event.nativeEvent,\n        syntheticEvent: event\n      });\n    }\n  }, [onBlur]);\n  var onChangeHandler = React.useCallback(function (event, isPalette) {\n    var currentValue = isPalette ? event.rgbaValue : event.value;\n\n    if (!isValueControlled) {\n      setStateValue(currentValue);\n    }\n\n    if (isPalette) {\n      setOpen(false);\n    }\n\n    if (onChange) {\n      onChange.call(undefined, {\n        value: currentValue,\n        nativeEvent: event.nativeEvent,\n        syntheticEvent: event.syntheticEvent\n      });\n    }\n  }, [isValueControlled, onChange]);\n  var onPaletteChangeHandler = React.useCallback(function (event) {\n    return onChangeHandler(event, true);\n  }, [isControlled, onChangeHandler]);\n  var dir = useDir(focusableElementRef, props.dir);\n  var iconClassName = props.iconClassName || icon && \"k-icon k-i-\" + icon;\n  var wrapperClassName = classNames({\n    'k-widget': true,\n    'k-colorpicker': true,\n    'k-state-invalid': valid === false\n  });\n  var className = React.useMemo(function () {\n    return classNames({\n      'k-picker-wrap': true,\n      'k-state-default': !disabled,\n      'k-state-disabled': disabled,\n      'k-state-focused': focused\n    });\n  }, [focused, disabled]);\n  return React.createElement(\"span\", {\n    className: wrapperClassName,\n    dir: dir\n  }, React.createElement(\"span\", {\n    id: props.id,\n    \"aria-labelledby\": props.ariaLabelledBy,\n    \"aria-describedby\": props.ariaDescribedBy,\n    className: className,\n    ref: focusableElementRef,\n    tabIndex: getTabIndex(tabIndex, disabled),\n    onKeyDown: onKeyDownHandler,\n    onFocus: onFocusHandler,\n    onBlur: onBlurHandler\n  }, React.createElement(Picker, {\n    dir: dir,\n    open: open,\n    onOpen: onOpenHandler,\n    popupAnchor: focusableElementRef.current || undefined,\n    popupSettings: __assign({}, popupSettings),\n    input: !iconClassName ? React.createElement(\"span\", {\n      className: 'k-selected-color',\n      style: {\n        backgroundColor: value\n      }\n    }, !value && React.createElement(\"span\", {\n      className: 'k-icon k-i-line'\n    })) : React.createElement(\"span\", {\n      className: classNames('k-tool-icon', iconClassName)\n    }, React.createElement(\"span\", {\n      className: 'k-selected-color',\n      style: {\n        backgroundColor: value\n      }\n    })),\n    button: React.createElement(\"span\", {\n      onClick: onClickHandler,\n      className: 'k-select',\n      ref: buttonRef\n    }, React.createElement(\"span\", {\n      className: 'k-icon k-i-arrow-s'\n    })),\n    content: React.createElement(React.Fragment, null, (view === 'combo' || view === 'gradient') && React.createElement(ColorGradient, __assign({}, gradientSettings, {\n      tabIndex: 0,\n      ref: gradientRef,\n      value: value,\n      onChange: onChangeHandler\n    })), (view === 'combo' || view === 'palette') && React.createElement(ColorPalette, __assign({}, paletteSettings, {\n      ref: paletteRef,\n      value: value,\n      onChange: onPaletteChangeHandler\n    })))\n  })));\n});\nColorPicker.propTypes = {\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  disabled: PropTypes.bool,\n  view: PropTypes.oneOf(['gradient', 'palette', 'combo']),\n  dir: PropTypes.string,\n  id: PropTypes.string,\n  ariaLabelledBy: PropTypes.string,\n  ariaDescribedBy: PropTypes.string\n};\nColorPicker.defaultProps = {\n  view: 'palette',\n  gradientSettings: DEFAULT_GRADIENT_SETTINGS,\n  paletteSettings: DEFAULT_PALETTE_SETTINGS\n};\nColorPicker.displayName = 'KendoColorPicker';","map":{"version":3,"sources":["../../../src/colors/ColorPicker.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames, Keys, useDir, getTabIndex } from '@progress/kendo-react-common';\nimport { Picker } from './Picker';\nimport { ColorGradient } from './ColorGradient';\nimport { ColorPalette, DEFAULT_PRESET, DEFAULT_TILE_SIZE } from './ColorPalette';\n/**\n * @hidden\n */\nvar DEFAULT_GRADIENT_SETTINGS = {\n    opacity: true\n};\n/**\n * @hidden\n */\nvar DEFAULT_PALETTE_SETTINGS = {\n    palette: DEFAULT_PRESET,\n    tileSize: DEFAULT_TILE_SIZE\n};\n/**\n * @hidden\n */\nvar isControlled = function (prop) {\n    return prop !== undefined;\n};\n/**\n * Represents the [KendoReact ColorPicker component]({% slug overview_colorpicker %}).\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *     render() {\n *         return <ColorPicker />;\n *     }\n * }\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport var ColorPicker = React.forwardRef(function (props, target) {\n    var popupSettings = props.popupSettings, gradientSettings = props.gradientSettings, paletteSettings = props.paletteSettings, valid = props.valid, disabled = props.disabled, tabIndex = props.tabIndex, view = props.view, icon = props.icon, onChange = props.onChange, onFocus = props.onFocus, onBlur = props.onBlur;\n    var focusableElementRef = React.useRef(null);\n    var gradientRef = React.useRef(null);\n    var paletteRef = React.useRef(null);\n    var blurTimeoutRef = React.useRef();\n    var buttonRef = React.useRef(null);\n    var focusElement = React.useCallback(function () {\n        if (focusableElementRef.current) {\n            focusableElementRef.current.focus();\n        }\n    }, []);\n    React.useImperativeHandle(target, function () { return ({\n        // we agreed that each element will have focus method exposed\n        element: focusableElementRef.current,\n        actionElement: buttonRef.current,\n        focus: focusElement\n    }); });\n    var _a = React.useState(false), focused = _a[0], setFocused = _a[1];\n    var _b = React.useState(props.defaultValue), stateValue = _b[0], setStateValue = _b[1];\n    var _c = React.useState(false), stateOpen = _c[0], setStateOpen = _c[1];\n    var isValueControlled = isControlled(props.value);\n    var isOpenControlled = isControlled(props.open);\n    var value = isValueControlled ? props.value : stateValue;\n    var open = isOpenControlled ? props.open : stateOpen;\n    var setOpen = React.useCallback(function (nextOpen, isBlur) {\n        if (!isOpenControlled) {\n            if (!nextOpen && !isBlur && focusableElementRef && focusableElementRef.current) {\n                focusableElementRef.current.focus();\n            }\n            setStateOpen(nextOpen);\n        }\n    }, [isOpenControlled]);\n    var onKeyDownHandler = React.useCallback(function (event) {\n        var altKey = event.altKey, keyCode = event.keyCode;\n        if (keyCode === Keys.esc) {\n            setOpen(false);\n            return;\n        }\n        if (keyCode === Keys.enter && !isOpenControlled) {\n            event.preventDefault();\n            event.stopPropagation();\n            setOpen(!open);\n            return;\n        }\n        if (altKey && (keyCode === Keys.up || keyCode === Keys.down)) {\n            event.preventDefault();\n            event.stopPropagation();\n            if (keyCode === Keys.up && focusableElementRef && focusableElementRef.current) {\n                focusableElementRef.current.focus();\n                setOpen(false);\n            }\n            if (keyCode === Keys.down) {\n                setOpen(true);\n            }\n        }\n    }, [open, isOpenControlled]);\n    var onOpenHandler = React.useCallback(function () {\n        // Skip content autofocus when in controlled mode\n        if (!isOpenControlled) {\n            if (gradientRef.current) {\n                gradientRef.current.focus();\n            }\n            else if (paletteRef.current) {\n                paletteRef.current.focus();\n            }\n        }\n    }, [isOpenControlled]);\n    var onClickHandler = React.useCallback(function () {\n        setOpen(!open, true);\n    }, [open]);\n    var onFocusHandler = React.useCallback(function (event) {\n        if (blurTimeoutRef.current) {\n            clearTimeout(blurTimeoutRef.current);\n            blurTimeoutRef.current = undefined;\n            // case where moving back to input from popup\n            // if (event.target === focusableElementRef.current) {\n            // setOpen(false); // in this case we should focus input on keydown\n            // }\n        }\n        else {\n            setFocused(true);\n        }\n        if (onFocus) {\n            onFocus.call(undefined, {\n                nativeEvent: event.nativeEvent,\n                syntheticEvent: event\n            });\n        }\n    }, [onFocus]);\n    var onBlurTimeout = React.useCallback(function () {\n        setOpen(false, true);\n        setFocused(false);\n        blurTimeoutRef.current = undefined;\n    }, []);\n    var onBlurHandler = React.useCallback(function (event) {\n        clearTimeout(blurTimeoutRef.current);\n        blurTimeoutRef.current = setTimeout(onBlurTimeout);\n        if (onBlur) {\n            onBlur.call(undefined, {\n                nativeEvent: event.nativeEvent,\n                syntheticEvent: event\n            });\n        }\n    }, [onBlur]);\n    var onChangeHandler = React.useCallback(function (event, isPalette) {\n        var currentValue = isPalette ? event.rgbaValue : event.value;\n        if (!isValueControlled) {\n            setStateValue(currentValue);\n        }\n        if (isPalette) {\n            setOpen(false);\n        }\n        if (onChange) {\n            onChange.call(undefined, {\n                value: currentValue,\n                nativeEvent: event.nativeEvent,\n                syntheticEvent: event.syntheticEvent\n            });\n        }\n    }, [isValueControlled, onChange]);\n    var onPaletteChangeHandler = React.useCallback(function (event) { return onChangeHandler(event, true); }, [isControlled, onChangeHandler]);\n    var dir = useDir(focusableElementRef, props.dir);\n    var iconClassName = props.iconClassName || (icon && \"k-icon k-i-\" + icon);\n    var wrapperClassName = classNames({\n        'k-widget': true,\n        'k-colorpicker': true,\n        'k-state-invalid': valid === false\n    });\n    var className = React.useMemo(function () { return classNames({\n        'k-picker-wrap': true,\n        'k-state-default': !disabled,\n        'k-state-disabled': disabled,\n        'k-state-focused': focused\n    }); }, [focused, disabled]);\n    return (React.createElement(\"span\", { className: wrapperClassName, dir: dir },\n        React.createElement(\"span\", { id: props.id, \"aria-labelledby\": props.ariaLabelledBy, \"aria-describedby\": props.ariaDescribedBy, className: className, ref: focusableElementRef, tabIndex: getTabIndex(tabIndex, disabled), onKeyDown: onKeyDownHandler, onFocus: onFocusHandler, onBlur: onBlurHandler },\n            React.createElement(Picker, { dir: dir, open: open, onOpen: onOpenHandler, popupAnchor: focusableElementRef.current || undefined, popupSettings: __assign({}, popupSettings), input: (!iconClassName ? (React.createElement(\"span\", { className: 'k-selected-color', style: { backgroundColor: value } }, !value && React.createElement(\"span\", { className: 'k-icon k-i-line' }))) : (React.createElement(\"span\", { className: classNames('k-tool-icon', iconClassName) },\n                    React.createElement(\"span\", { className: 'k-selected-color', style: { backgroundColor: value } })))), button: (React.createElement(\"span\", { onClick: onClickHandler, className: 'k-select', ref: buttonRef },\n                    React.createElement(\"span\", { className: 'k-icon k-i-arrow-s' }))), content: (React.createElement(React.Fragment, null,\n                    (view === 'combo' || view === 'gradient') && (React.createElement(ColorGradient, __assign({}, gradientSettings, { tabIndex: 0, ref: gradientRef, value: value, onChange: onChangeHandler }))),\n                    (view === 'combo' || view === 'palette') && (React.createElement(ColorPalette, __assign({}, paletteSettings, { ref: paletteRef, value: value, onChange: onPaletteChangeHandler }))))) }))));\n});\nColorPicker.propTypes = {\n    value: PropTypes.string,\n    defaultValue: PropTypes.string,\n    disabled: PropTypes.bool,\n    view: PropTypes.oneOf(['gradient', 'palette', 'combo']),\n    dir: PropTypes.string,\n    id: PropTypes.string,\n    ariaLabelledBy: PropTypes.string,\n    ariaDescribedBy: PropTypes.string\n};\nColorPicker.defaultProps = {\n    view: 'palette',\n    gradientSettings: DEFAULT_GRADIENT_SETTINGS,\n    paletteSettings: DEFAULT_PALETTE_SETTINGS\n};\nColorPicker.displayName = 'KendoColorPicker';\n//# sourceMappingURL=ColorPicker.js.map"]},"metadata":{},"sourceType":"module"}