{"ast":null,"code":"var cache = {};\n/**\n * @hidden\n */\n\nexport function cacheHsva(componentGuid, value, hsva) {\n  cache[componentGuid] = {\n    value: value,\n    hsva: hsva\n  };\n}\n/**\n * @hidden\n */\n\nexport function cacheRgba(componentGuid, value, rgba) {\n  cache[componentGuid] = {\n    value: value,\n    rgba: rgba\n  };\n}\n/**\n * @hidden\n */\n\nexport function cacheHex(componentGuid, value, hex) {\n  cache[componentGuid] = {\n    value: value,\n    hex: hex\n  };\n}\n/**\n * @hidden\n */\n\nexport function removeCachedColor(componentGuid) {\n  delete cache[componentGuid];\n}\n/**\n * @hidden\n */\n\nexport function getCachedHex(componentGuid, value) {\n  if (componentGuid) {\n    var cachedColor = cache[componentGuid];\n    return cachedColor && cachedColor.value === value ? cachedColor.hex : undefined;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @hidden\n */\n\nexport function getCachedHsva(componentGuid, value) {\n  if (componentGuid) {\n    var cachedColor = cache[componentGuid];\n    return cachedColor && cachedColor.value === value ? cachedColor.hsva : undefined;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @hidden\n */\n\nexport function getCachedRgba(componentGuid, value) {\n  if (componentGuid) {\n    var cachedColor = cache[componentGuid];\n    return cachedColor && cachedColor.value === value ? cachedColor.rgba : undefined;\n  } else {\n    return undefined;\n  }\n}","map":{"version":3,"sources":["../../../../src/colors/utils/color-cache.ts"],"names":[],"mappings":"AAGA,IAAM,KAAK,GAAG,EAAd;AAEA;;;;AAGA,OAAM,SAAU,SAAV,CAAoB,aAApB,EAA2C,KAA3C,EAA0D,IAA1D,EAAoE;AACtE,EAAA,KAAK,CAAC,aAAD,CAAL,GAAuB;AAAE,IAAA,KAAK,EAAA,KAAP;AAAS,IAAA,IAAI,EAAA;AAAb,GAAvB;AACH;AAED;;;;AAGA,OAAM,SAAU,SAAV,CAAoB,aAApB,EAA2C,KAA3C,EAA0D,IAA1D,EAAoE;AACtE,EAAA,KAAK,CAAC,aAAD,CAAL,GAAuB;AAAE,IAAA,KAAK,EAAA,KAAP;AAAS,IAAA,IAAI,EAAA;AAAb,GAAvB;AACH;AAED;;;;AAGA,OAAM,SAAU,QAAV,CAAmB,aAAnB,EAA0C,KAA1C,EAAyD,GAAzD,EAAoE;AACtE,EAAA,KAAK,CAAC,aAAD,CAAL,GAAuB;AAAE,IAAA,KAAK,EAAA,KAAP;AAAS,IAAA,GAAG,EAAA;AAAZ,GAAvB;AACH;AAED;;;;AAGA,OAAM,SAAU,iBAAV,CAA4B,aAA5B,EAAiD;AACnD,SAAO,KAAK,CAAC,aAAD,CAAZ;AACH;AAED;;;;AAGA,OAAM,SAAU,YAAV,CAAuB,aAAvB,EAA0D,KAA1D,EAAuE;AACzE,MAAI,aAAJ,EAAmB;AACf,QAAM,WAAW,GAAG,KAAK,CAAC,aAAD,CAAzB;AAEA,WAAO,WAAW,IAAI,WAAW,CAAC,KAAZ,KAAsB,KAArC,GAA6C,WAAW,CAAC,GAAzD,GAA+D,SAAtE;AACH,GAJD,MAIO;AACH,WAAO,SAAP;AACH;AACJ;AAED;;;;AAGA,OAAM,SAAU,aAAV,CAAwB,aAAxB,EAA2D,KAA3D,EAAwE;AAC1E,MAAI,aAAJ,EAAmB;AACf,QAAM,WAAW,GAAG,KAAK,CAAC,aAAD,CAAzB;AAEA,WAAO,WAAW,IAAI,WAAW,CAAC,KAAZ,KAAsB,KAArC,GAA6C,WAAW,CAAC,IAAzD,GAAgE,SAAvE;AACH,GAJD,MAIO;AACH,WAAO,SAAP;AACH;AACJ;AAED;;;;AAGA,OAAM,SAAU,aAAV,CAAwB,aAAxB,EAA2D,KAA3D,EAAwE;AAC1E,MAAI,aAAJ,EAAmB;AACf,QAAM,WAAW,GAAG,KAAK,CAAC,aAAD,CAAzB;AAEA,WAAO,WAAW,IAAI,WAAW,CAAC,KAAZ,KAAsB,KAArC,GAA6C,WAAW,CAAC,IAAzD,GAAgE,SAAvE;AACH,GAJD,MAIO;AACH,WAAO,SAAP;AACH;AACJ","sourceRoot":"","sourcesContent":["var cache = {};\n/**\n * @hidden\n */\nexport function cacheHsva(componentGuid, value, hsva) {\n    cache[componentGuid] = { value: value, hsva: hsva };\n}\n/**\n * @hidden\n */\nexport function cacheRgba(componentGuid, value, rgba) {\n    cache[componentGuid] = { value: value, rgba: rgba };\n}\n/**\n * @hidden\n */\nexport function cacheHex(componentGuid, value, hex) {\n    cache[componentGuid] = { value: value, hex: hex };\n}\n/**\n * @hidden\n */\nexport function removeCachedColor(componentGuid) {\n    delete cache[componentGuid];\n}\n/**\n * @hidden\n */\nexport function getCachedHex(componentGuid, value) {\n    if (componentGuid) {\n        var cachedColor = cache[componentGuid];\n        return cachedColor && cachedColor.value === value ? cachedColor.hex : undefined;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @hidden\n */\nexport function getCachedHsva(componentGuid, value) {\n    if (componentGuid) {\n        var cachedColor = cache[componentGuid];\n        return cachedColor && cachedColor.value === value ? cachedColor.hsva : undefined;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @hidden\n */\nexport function getCachedRgba(componentGuid, value) {\n    if (componentGuid) {\n        var cachedColor = cache[componentGuid];\n        return cachedColor && cachedColor.value === value ? cachedColor.rgba : undefined;\n    }\n    else {\n        return undefined;\n    }\n}\n//# sourceMappingURL=color-cache.js.map"]},"metadata":{},"sourceType":"module"}