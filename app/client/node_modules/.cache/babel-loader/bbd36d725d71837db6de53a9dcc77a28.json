{"ast":null,"code":"var _jsxFileName = \"/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/App.js\";\nimport React from 'react';\nimport { StoreSelector, ClientSelector } from './MenuSelector';\nimport { connect } from 'react-redux';\nimport { selectCustomer, updateCustomers, updateStores, updateCustomersData } from '../actions';\n\nconst App = ({\n  addresses,\n  names,\n  customer_data,\n  store_data\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StoreSelector, {\n    items: addresses,\n    grid_data: store_data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(ClientSelector, {\n    items: names,\n    grid_data: customer_data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  names: state.customers.names,\n  addresses: state.stores.addresses,\n  customer_data: state.customers.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCustomers: names => dispatch(updateCustomers(names)),\n  updateCustomersData: data => dispatch(updateCustomersData(data)),\n  selectCustomer: data => dispatch(selectCustomer(data)),\n  updateStores: addresses => dispatch(updateStores(addresses))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/App.js"],"names":["React","StoreSelector","ClientSelector","connect","selectCustomer","updateCustomers","updateStores","updateCustomersData","App","addresses","names","customer_data","store_data","mapStateToProps","state","customers","stores","data","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,cAAvB,QAA4C,gBAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,EAAwBC,eAAxB,EAAyCC,YAAzC,EAAuDC,mBAAvD,QAAiF,YAAjF;;AAEA,MAAMC,GAAG,GAAG,CAAC;AACZC,EAAAA,SADY;AAEZC,EAAAA,KAFY;AAGZC,EAAAA,aAHY;AAIZC,EAAAA;AAJY,CAAD,KAKN;AACL,sBACC;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEH,SAAtB;AAAiC,IAAA,SAAS,EAAEG,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEF,KAAvB;AAA8B,IAAA,SAAS,EAAEC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA,CAZD;;AAcA,MAAME,eAAe,GAAIC,KAAD,KAAY;AACnCJ,EAAAA,KAAK,EAAEI,KAAK,CAACC,SAAN,CAAgBL,KADY;AAEnCD,EAAAA,SAAS,EAAEK,KAAK,CAACE,MAAN,CAAaP,SAFW;AAGnCE,EAAAA,aAAa,EAAEG,KAAK,CAACC,SAAN,CAAgBE;AAHI,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACzCd,EAAAA,eAAe,EAAGK,KAAD,IAAWS,QAAQ,CAACd,eAAe,CAACK,KAAD,CAAhB,CADK;AAEzCH,EAAAA,mBAAmB,EAAGU,IAAD,IAAUE,QAAQ,CAACZ,mBAAmB,CAACU,IAAD,CAApB,CAFE;AAGzCb,EAAAA,cAAc,EAAGa,IAAD,IAAUE,QAAQ,CAACf,cAAc,CAACa,IAAD,CAAf,CAHO;AAIzCX,EAAAA,YAAY,EAAGG,SAAD,IAAeU,QAAQ,CAACb,YAAY,CAACG,SAAD,CAAb;AAJI,CAAf,CAA3B;;AAOA,eAAeN,OAAO,CACpBU,eADoB,EAEpBK,kBAFoB,CAAP,CAGbV,GAHa,CAAf","sourcesContent":["import React from 'react';\nimport {StoreSelector, ClientSelector} from './MenuSelector';\nimport { connect } from 'react-redux';\nimport {selectCustomer, updateCustomers, updateStores, updateCustomersData} from '../actions';\n\nconst App = ({\n\taddresses,\n\tnames,\n\tcustomer_data,\n\tstore_data\n}) => {\n\treturn (\n\t\t<div id=\"App\">\n\t\t\t<StoreSelector items={addresses} grid_data={store_data}/>\n\t\t\t<ClientSelector items={names} grid_data={customer_data}/>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => ({\n\tnames: state.customers.names,\n\taddresses: state.stores.addresses,\n\tcustomer_data: state.customers.data\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateCustomers: (names) => dispatch(updateCustomers(names)),\t\n\tupdateCustomersData: (data) => dispatch(updateCustomersData(data)),\n\tselectCustomer: (data) => dispatch(selectCustomer(data)),\n\tupdateStores: (addresses) => dispatch(updateStores(addresses))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\n"]},"metadata":{},"sourceType":"module"}