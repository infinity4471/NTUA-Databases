{"ast":null,"code":"/**\n * @hidden\n */\nexport function tableColumnsVirtualization(args) {\n  var enabled = args.enabled,\n      _a = args.columns,\n      columns = _a === void 0 ? [] : _a,\n      tableViewPortWidth = args.tableViewPortWidth,\n      scrollLeft = args.scrollLeft;\n  var colSpans = columns.map(function () {\n    return 1;\n  });\n  var hiddenColumns = columns.map(function () {\n    return false;\n  });\n\n  if (!enabled) {\n    return {\n      colSpans: colSpans,\n      hiddenColumns: hiddenColumns\n    };\n  }\n\n  var widths = columns.map(function (c) {\n    return parseFloat((c.width || '').toString()) || 10;\n  });\n  var widthOfHiddenColumns = 0;\n\n  for (var i = 0; i < columns.length; i++) {\n    if (columns[i].locked) {\n      continue;\n    }\n\n    var considerNext = i < widths.length - 1 ? widths[i + 1] : 0;\n\n    if (widthOfHiddenColumns + widths[i] + considerNext < scrollLeft) {\n      hiddenColumns[i] = true;\n      widthOfHiddenColumns += widths[i];\n    } else {\n      break;\n    }\n  }\n\n  var totalWidth = widths.reduce(function (acc, current) {\n    return acc + current;\n  }, 0);\n  widthOfHiddenColumns = 0;\n\n  for (var i = columns.length - 1; i >= 0; i--) {\n    if (columns[i].locked) {\n      continue;\n    }\n\n    if (widthOfHiddenColumns + 2 * widths[i] < totalWidth - tableViewPortWidth - scrollLeft) {\n      hiddenColumns[i] = true;\n      widthOfHiddenColumns += widths[i];\n    } else {\n      break;\n    }\n  }\n\n  var hiddenCols = hiddenColumns.slice();\n\n  var hidden = function (value) {\n    return value;\n  };\n\n  var lastVisible = hiddenCols.lastIndexOf(false);\n  var anyHidden = hiddenCols.some(hidden);\n  var allHidden = hiddenCols.every(hidden);\n  var hiddenSeqLength;\n  var updateIndex;\n\n  while (anyHidden && hiddenCols.length && (lastVisible !== -1 || allHidden)) {\n    if (lastVisible < hiddenCols.length - 1) {\n      hiddenSeqLength = allHidden ? hiddenCols.length : hiddenCols.length - lastVisible - 1;\n      updateIndex = hiddenCols.length - hiddenSeqLength;\n\n      if (updateIndex === 0) {\n        updateIndex = hiddenSeqLength - 1;\n      }\n\n      hiddenColumns[updateIndex] = false;\n      colSpans[updateIndex] = hiddenSeqLength;\n      hiddenCols.splice(lastVisible + 1, hiddenSeqLength);\n    }\n\n    while (hiddenCols.length && !hiddenCols[hiddenCols.length - 1]) {\n      hiddenCols.pop();\n    }\n\n    lastVisible = hiddenCols.lastIndexOf(false);\n    anyHidden = hiddenCols.some(hidden);\n    allHidden = hiddenCols.every(hidden);\n  }\n\n  return {\n    colSpans: colSpans,\n    hiddenColumns: hiddenColumns\n  };\n}","map":{"version":3,"sources":["../../../src/virtualization/columns.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @hidden\n */\nexport function tableColumnsVirtualization(args) {\n    var enabled = args.enabled, _a = args.columns, columns = _a === void 0 ? [] : _a, tableViewPortWidth = args.tableViewPortWidth, scrollLeft = args.scrollLeft;\n    var colSpans = columns.map(function () { return 1; });\n    var hiddenColumns = columns.map(function () { return false; });\n    if (!enabled) {\n        return { colSpans: colSpans, hiddenColumns: hiddenColumns };\n    }\n    var widths = columns.map(function (c) { return parseFloat((c.width || '').toString()) || 10; });\n    var widthOfHiddenColumns = 0;\n    for (var i = 0; i < columns.length; i++) {\n        if (columns[i].locked) {\n            continue;\n        }\n        var considerNext = (i < widths.length - 1) ? widths[i + 1] : 0;\n        if (widthOfHiddenColumns + widths[i] + considerNext < scrollLeft) {\n            hiddenColumns[i] = true;\n            widthOfHiddenColumns += widths[i];\n        }\n        else {\n            break;\n        }\n    }\n    var totalWidth = widths.reduce(function (acc, current) { return acc + current; }, 0);\n    widthOfHiddenColumns = 0;\n    for (var i = columns.length - 1; i >= 0; i--) {\n        if (columns[i].locked) {\n            continue;\n        }\n        if (widthOfHiddenColumns + 2 * widths[i] < totalWidth - tableViewPortWidth - scrollLeft) {\n            hiddenColumns[i] = true;\n            widthOfHiddenColumns += widths[i];\n        }\n        else {\n            break;\n        }\n    }\n    var hiddenCols = hiddenColumns.slice();\n    var hidden = function (value) { return value; };\n    var lastVisible = hiddenCols.lastIndexOf(false);\n    var anyHidden = hiddenCols.some(hidden);\n    var allHidden = hiddenCols.every(hidden);\n    var hiddenSeqLength;\n    var updateIndex;\n    while (anyHidden && hiddenCols.length && (lastVisible !== -1 || allHidden)) {\n        if (lastVisible < hiddenCols.length - 1) {\n            hiddenSeqLength = allHidden ? hiddenCols.length : hiddenCols.length - lastVisible - 1;\n            updateIndex = hiddenCols.length - hiddenSeqLength;\n            if (updateIndex === 0) {\n                updateIndex = hiddenSeqLength - 1;\n            }\n            hiddenColumns[updateIndex] = false;\n            colSpans[updateIndex] = hiddenSeqLength;\n            hiddenCols.splice(lastVisible + 1, hiddenSeqLength);\n        }\n        while (hiddenCols.length && !hiddenCols[hiddenCols.length - 1]) {\n            hiddenCols.pop();\n        }\n        lastVisible = hiddenCols.lastIndexOf(false);\n        anyHidden = hiddenCols.some(hidden);\n        allHidden = hiddenCols.every(hidden);\n    }\n    return { colSpans: colSpans, hiddenColumns: hiddenColumns };\n}\n//# sourceMappingURL=columns.js.map"]},"metadata":{},"sourceType":"module"}