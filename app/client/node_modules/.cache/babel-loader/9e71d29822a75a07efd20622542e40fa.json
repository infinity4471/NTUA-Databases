{"ast":null,"code":"import GroupNode from './group-node';\nimport Traversable from '../mixins/traversable';\nimport { animationFrame, throttle } from '../common';\nvar FRAME_DELAY = 1000 / 60;\n\nvar RootNode = function (GroupNode) {\n  function RootNode(canvas, size) {\n    GroupNode.call(this);\n    this.canvas = canvas;\n    this.size = size;\n    this.ctx = canvas.getContext(\"2d\");\n\n    var invalidateHandler = this._invalidate.bind(this);\n\n    this.invalidate = throttle(function () {\n      animationFrame(invalidateHandler);\n    }, FRAME_DELAY);\n  }\n\n  if (GroupNode) RootNode.__proto__ = GroupNode;\n  RootNode.prototype = Object.create(GroupNode && GroupNode.prototype);\n  RootNode.prototype.constructor = RootNode;\n\n  RootNode.prototype.destroy = function destroy() {\n    GroupNode.prototype.destroy.call(this);\n    this.canvas = null;\n    this.ctx = null;\n  };\n\n  RootNode.prototype.load = function load(elements, pos, cors) {\n    this.loadElements(elements, pos, cors);\n\n    this._invalidate();\n  };\n\n  RootNode.prototype._rescale = function _rescale() {\n    var ref = this;\n    var canvas = ref.canvas;\n    var size = ref.size;\n    var scale = 1;\n\n    if (typeof window.devicePixelRatio === 'number') {\n      scale = window.devicePixelRatio;\n    }\n\n    canvas.width = size.width * scale;\n    canvas.height = size.height * scale;\n    this.ctx.scale(scale, scale);\n  };\n\n  RootNode.prototype._invalidate = function _invalidate() {\n    if (!this.ctx) {\n      return;\n    }\n\n    this._rescale();\n\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.renderTo(this.ctx);\n  };\n\n  return RootNode;\n}(GroupNode);\n\nTraversable.extend(RootNode.prototype, \"childNodes\");\nexport default RootNode;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/canvas/root-node.js"],"names":["GroupNode","Traversable","animationFrame","throttle","FRAME_DELAY","RootNode","canvas","size","call","ctx","getContext","invalidateHandler","_invalidate","bind","invalidate","__proto__","prototype","Object","create","constructor","destroy","load","elements","pos","cors","loadElements","_rescale","ref","scale","window","devicePixelRatio","width","height","clearRect","renderTo","extend"],"mappings":"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","sourcesContent":["import GroupNode from './group-node';\nimport Traversable from '../mixins/traversable';\nimport { animationFrame, throttle } from '../common';\n\nvar FRAME_DELAY = 1000 / 60;\n\nvar RootNode = (function (GroupNode) {\n    function RootNode(canvas, size) {\n        GroupNode.call(this);\n\n        this.canvas = canvas;\n        this.size = size;\n        this.ctx = canvas.getContext(\"2d\");\n\n        var invalidateHandler = this._invalidate.bind(this);\n        this.invalidate = throttle(function () {\n            animationFrame(invalidateHandler);\n        }, FRAME_DELAY);\n    }\n\n    if ( GroupNode ) RootNode.__proto__ = GroupNode;\n    RootNode.prototype = Object.create( GroupNode && GroupNode.prototype );\n    RootNode.prototype.constructor = RootNode;\n\n    RootNode.prototype.destroy = function destroy () {\n        GroupNode.prototype.destroy.call(this);\n        this.canvas = null;\n        this.ctx = null;\n    };\n\n    RootNode.prototype.load = function load (elements, pos, cors) {\n        this.loadElements(elements, pos, cors);\n        this._invalidate();\n    };\n\n    RootNode.prototype._rescale = function _rescale () {\n        var ref = this;\n        var canvas = ref.canvas;\n        var size = ref.size;\n        var scale = 1;\n\n        if (typeof window.devicePixelRatio === 'number') {\n            scale = window.devicePixelRatio;\n        }\n\n        canvas.width = size.width * scale;\n        canvas.height = size.height * scale;\n        this.ctx.scale(scale, scale);\n    };\n\n    RootNode.prototype._invalidate = function _invalidate () {\n        if (!this.ctx) {\n            return;\n        }\n\n        this._rescale();\n\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.renderTo(this.ctx);\n    };\n\n    return RootNode;\n}(GroupNode));\n\nTraversable.extend(RootNode.prototype, \"childNodes\");\n\nexport default RootNode;\n"]},"metadata":{},"sourceType":"module"}