{"ast":null,"code":"/**\n * @hidden\n */\nvar Stream =\n/** @class */\nfunction () {\n  function Stream(input, control) {\n    if (input === void 0) {\n      input = [];\n    }\n\n    if (control === void 0) {\n      control = [];\n    }\n\n    this.input = input;\n    this.control = control;\n    this.inputCursor = 0;\n    this.controlCursor = 0;\n  }\n\n  Stream.prototype.eof = function () {\n    return this.inputCursor >= this.input.length;\n  }; // Get the first value from the input.\n\n\n  Stream.prototype.next = function () {\n    return {\n      char: this.input[this.inputCursor++],\n      control: this.control[this.controlCursor++]\n    };\n  };\n\n  Stream.prototype.peek = function () {\n    return {\n      char: this.input[this.inputCursor],\n      control: this.control[this.controlCursor]\n    };\n  };\n\n  Stream.prototype.eat_input = function () {\n    this.inputCursor++;\n  };\n\n  Stream.prototype.eat_control = function () {\n    this.controlCursor++;\n  };\n\n  Stream.prototype.eat = function () {\n    this.inputCursor++;\n    this.controlCursor++;\n  };\n\n  return Stream;\n}();\n\nexport { Stream };","map":{"version":3,"sources":["../../../../src/maskedtextbox/parsing/stream.ts"],"names":[],"mappings":"AAAA;;;AAGA,IAAA,MAAA;AAAA;AAAA,YAAA;AAII,WAAA,MAAA,CAAoB,KAApB,EAA+C,OAA/C,EAAkE;AAA9C,QAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,KAAA,GAAA,EAAA;AAAiB;;AAAU,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAAmB;;AAA9C,SAAA,KAAA,GAAA,KAAA;AAA2B,SAAA,OAAA,GAAA,OAAA;AAHvC,SAAA,WAAA,GAAsB,CAAtB;AACA,SAAA,aAAA,GAAwB,CAAxB;AAE8D;;AAE/D,EAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAP,YAAA;AACI,WAAO,KAAK,WAAL,IAAoB,KAAK,KAAL,CAAW,MAAtC;AACH,GAFM,CANX,CAUI;;;AACO,EAAA,MAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACI,WAAO;AACH,MAAA,IAAI,EAAE,KAAK,KAAL,CAAW,KAAK,WAAL,EAAX,CADH;AAEH,MAAA,OAAO,EAAE,KAAK,OAAL,CAAa,KAAK,aAAL,EAAb;AAFN,KAAP;AAIH,GALM;;AAOA,EAAA,MAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACI,WAAO;AACH,MAAA,IAAI,EAAE,KAAK,KAAL,CAAW,KAAK,WAAhB,CADH;AAEH,MAAA,OAAO,EAAE,KAAK,OAAL,CAAa,KAAK,aAAlB;AAFN,KAAP;AAIH,GALM;;AAOA,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AACI,SAAK,WAAL;AACH,GAFM;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACI,SAAK,aAAL;AACH,GAFM;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAP,YAAA;AACI,SAAK,WAAL;AACA,SAAK,aAAL;AACH,GAHM;;AAIX,SAAA,MAAA;AAAC,CArCD,EAAA","sourceRoot":"","sourcesContent":["/**\n * @hidden\n */\nvar Stream = /** @class */ (function () {\n    function Stream(input, control) {\n        if (input === void 0) { input = []; }\n        if (control === void 0) { control = []; }\n        this.input = input;\n        this.control = control;\n        this.inputCursor = 0;\n        this.controlCursor = 0;\n    }\n    Stream.prototype.eof = function () {\n        return this.inputCursor >= this.input.length;\n    };\n    // Get the first value from the input.\n    Stream.prototype.next = function () {\n        return {\n            char: this.input[this.inputCursor++],\n            control: this.control[this.controlCursor++]\n        };\n    };\n    Stream.prototype.peek = function () {\n        return {\n            char: this.input[this.inputCursor],\n            control: this.control[this.controlCursor]\n        };\n    };\n    Stream.prototype.eat_input = function () {\n        this.inputCursor++;\n    };\n    Stream.prototype.eat_control = function () {\n        this.controlCursor++;\n    };\n    Stream.prototype.eat = function () {\n        this.inputCursor++;\n        this.controlCursor++;\n    };\n    return Stream;\n}());\nexport { Stream };\n//# sourceMappingURL=stream.js.map"]},"metadata":{},"sourceType":"module"}