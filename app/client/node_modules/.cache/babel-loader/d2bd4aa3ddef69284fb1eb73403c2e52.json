{"ast":null,"code":"import { Class, logToConsole } from '../common';\n\nvar SurfaceFactory = function (Class) {\n  function SurfaceFactory() {\n    Class.call(this);\n    this._items = [];\n  }\n\n  if (Class) SurfaceFactory.__proto__ = Class;\n  SurfaceFactory.prototype = Object.create(Class && Class.prototype);\n  SurfaceFactory.prototype.constructor = SurfaceFactory;\n\n  SurfaceFactory.prototype.register = function register(name, type, order) {\n    var items = this._items;\n    var first = items[0];\n    var entry = {\n      name: name,\n      type: type,\n      order: order\n    };\n\n    if (!first || order < first.order) {\n      items.unshift(entry);\n    } else {\n      items.push(entry);\n    }\n  };\n\n  SurfaceFactory.prototype.create = function create(element, options) {\n    var items = this._items;\n    var match = items[0];\n\n    if (options && options.type) {\n      var preferred = options.type.toLowerCase();\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].name === preferred) {\n          match = items[i];\n          break;\n        }\n      }\n    }\n\n    if (match) {\n      return new match.type(element, options);\n    }\n\n    logToConsole(\"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" + \"- The browser does not support SVG and Canvas. User agent: \" + navigator.userAgent);\n  };\n\n  return SurfaceFactory;\n}(Class);\n\nSurfaceFactory.current = new SurfaceFactory();\nexport default SurfaceFactory;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/core/surface-factory.js"],"names":["Class","logToConsole","SurfaceFactory","call","_items","__proto__","prototype","Object","create","constructor","register","name","type","order","items","first","entry","unshift","push","element","options","match","preferred","toLowerCase","i","length","navigator","userAgent","current"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,YAAhB,QAAoC,WAApC;;AAEA,IAAIC,cAAc,GAAI,UAAUF,KAAV,EAAiB;AACnC,WAASE,cAAT,GAA0B;AACtBF,IAAAA,KAAK,CAACG,IAAN,CAAW,IAAX;AAEA,SAAKC,MAAL,GAAc,EAAd;AACH;;AAED,MAAKJ,KAAL,EAAaE,cAAc,CAACG,SAAf,GAA2BL,KAA3B;AACbE,EAAAA,cAAc,CAACI,SAAf,GAA2BC,MAAM,CAACC,MAAP,CAAeR,KAAK,IAAIA,KAAK,CAACM,SAA9B,CAA3B;AACAJ,EAAAA,cAAc,CAACI,SAAf,CAAyBG,WAAzB,GAAuCP,cAAvC;;AAEAA,EAAAA,cAAc,CAACI,SAAf,CAAyBI,QAAzB,GAAoC,SAASA,QAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AACtE,QAAIC,KAAK,GAAG,KAAKV,MAAjB;AACA,QAAIW,KAAK,GAAGD,KAAK,CAAC,CAAD,CAAjB;AACA,QAAIE,KAAK,GAAG;AACRL,MAAAA,IAAI,EAAEA,IADE;AAERC,MAAAA,IAAI,EAAEA,IAFE;AAGRC,MAAAA,KAAK,EAAEA;AAHC,KAAZ;;AAMA,QAAI,CAACE,KAAD,IAAUF,KAAK,GAAGE,KAAK,CAACF,KAA5B,EAAmC;AAC/BC,MAAAA,KAAK,CAACG,OAAN,CAAcD,KAAd;AACH,KAFD,MAEO;AACHF,MAAAA,KAAK,CAACI,IAAN,CAAWF,KAAX;AACH;AACJ,GAdD;;AAgBAd,EAAAA,cAAc,CAACI,SAAf,CAAyBE,MAAzB,GAAkC,SAASA,MAAT,CAAiBW,OAAjB,EAA0BC,OAA1B,EAAmC;AACjE,QAAIN,KAAK,GAAG,KAAKV,MAAjB;AACA,QAAIiB,KAAK,GAAGP,KAAK,CAAC,CAAD,CAAjB;;AAEA,QAAIM,OAAO,IAAIA,OAAO,CAACR,IAAvB,EAA6B;AACzB,UAAIU,SAAS,GAAGF,OAAO,CAACR,IAAR,CAAaW,WAAb,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACW,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,YAAIV,KAAK,CAACU,CAAD,CAAL,CAASb,IAAT,KAAkBW,SAAtB,EAAiC;AAC7BD,UAAAA,KAAK,GAAGP,KAAK,CAACU,CAAD,CAAb;AACA;AACH;AACJ;AACJ;;AAED,QAAIH,KAAJ,EAAW;AACP,aAAO,IAAIA,KAAK,CAACT,IAAV,CAAeO,OAAf,EAAwBC,OAAxB,CAAP;AACH;;AAEDnB,IAAAA,YAAY,CACR,2EACA,6DADA,GACiEyB,SAAS,CAACC,SAFnE,CAAZ;AAGH,GArBD;;AAuBA,SAAOzB,cAAP;AACH,CAnDqB,CAmDpBF,KAnDoB,CAAtB;;AAqDAE,cAAc,CAAC0B,OAAf,GAAyB,IAAI1B,cAAJ,EAAzB;AAEA,eAAeA,cAAf","sourcesContent":["import { Class, logToConsole } from '../common';\n\nvar SurfaceFactory = (function (Class) {\n    function SurfaceFactory() {\n        Class.call(this);\n\n        this._items = [];\n    }\n\n    if ( Class ) SurfaceFactory.__proto__ = Class;\n    SurfaceFactory.prototype = Object.create( Class && Class.prototype );\n    SurfaceFactory.prototype.constructor = SurfaceFactory;\n\n    SurfaceFactory.prototype.register = function register (name, type, order) {\n        var items = this._items;\n        var first = items[0];\n        var entry = {\n            name: name,\n            type: type,\n            order: order\n        };\n\n        if (!first || order < first.order) {\n            items.unshift(entry);\n        } else {\n            items.push(entry);\n        }\n    };\n\n    SurfaceFactory.prototype.create = function create (element, options) {\n        var items = this._items;\n        var match = items[0];\n\n        if (options && options.type) {\n            var preferred = options.type.toLowerCase();\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].name === preferred) {\n                    match = items[i];\n                    break;\n                }\n            }\n        }\n\n        if (match) {\n            return new match.type(element, options);\n        }\n\n        logToConsole(\n            \"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" +\n            \"- The browser does not support SVG and Canvas. User agent: \" + (navigator.userAgent));\n    };\n\n    return SurfaceFactory;\n}(Class));\n\nSurfaceFactory.current = new SurfaceFactory();\n\nexport default SurfaceFactory;"]},"metadata":{},"sourceType":"module"}