{"ast":null,"code":"import { cloneDate, addDays } from '@progress/kendo-date-math';\nimport { TIME_PART } from './models/TimePart';\nimport { MIDNIGHT_DATE, setTime } from '../utils';\n\nvar setter = function (method) {\n  return function (date, value) {\n    var clone = cloneDate(date);\n    clone[method](value);\n    return clone;\n  };\n};\n\nvar defaultGetters = [{\n  type: TIME_PART.hour,\n  getter: function (value) {\n    return value.getHours();\n  }\n}, {\n  type: TIME_PART.minute,\n  getter: function (value) {\n    return value.getMinutes();\n  }\n}, {\n  type: TIME_PART.second,\n  getter: function (value) {\n    return value.getSeconds();\n  }\n}, {\n  type: TIME_PART.millisecond,\n  getter: function (value) {\n    return value.getMilliseconds();\n  }\n}];\n\nvar left = function (getter) {\n  return function (origin, _) {\n    return getter(origin);\n  };\n};\n\nvar right = function (getter) {\n  return function (_, candidate) {\n    return getter(candidate);\n  };\n};\n\nvar convertToObject = function (parts) {\n  return parts.reduce(function (obj, p) {\n    obj[p.type] = p.type;\n    return obj;\n  }, {});\n};\n\nvar getterByPart = function (parts) {\n  return function (g) {\n    return parts[g.type] ? right(g.getter) : left(g.getter);\n  };\n};\n\nvar gettersFactory = function (getters) {\n  return function (parts) {\n    return getters.map(getterByPart(convertToObject(parts)));\n  };\n};\n\nvar snapValue = function (getter, step, min, type) {\n  return function (date) {\n    var value = getter(date);\n    var minValue = getter(min);\n\n    if (type === 'hour') {\n      return value - (value - minValue) % step;\n    }\n\n    if (date.getTime() <= min.getTime() && value !== 0 && value <= minValue) {\n      return Math.ceil(value / step) * step;\n    }\n\n    return value - value % step;\n  };\n};\n\nvar snappersFactory = function (getters) {\n  return function (steps, min) {\n    return getters.map(function (g) {\n      var step = Math.floor(steps[g.type]);\n      return step ? snapValue(g.getter, step, min, g.type) : g.getter;\n    });\n  };\n};\n/**\n * @hidden\n */\n\n\nexport var generateGetters = gettersFactory(defaultGetters);\n/**\n * @hidden\n */\n\nexport var generateSnappers = snappersFactory(defaultGetters);\n/**\n * @hidden\n */\n\nexport var valueMerger = function (getters) {\n  return function (origin, candidate) {\n    origin.setHours.apply(origin, getters.map(function (g) {\n      return g(origin, candidate);\n    }));\n    return origin;\n  };\n};\n/**\n * @hidden\n */\n\nexport var snapTime = function (snappers) {\n  return function (candidate) {\n    var date = cloneDate(candidate);\n    date.setHours.apply(date, snappers.map(function (s) {\n      return s(date);\n    }));\n    return date;\n  };\n};\n/**\n * @hidden\n */\n\nexport var setHours = setter('setHours');\n/**\n * @hidden\n */\n\nexport var setMinutes = setter('setMinutes');\n/**\n * @hidden\n */\n\nexport var setSeconds = setter('setSeconds');\n/**\n * @hidden\n */\n\nexport var getNow = function () {\n  return new Date();\n};\n/**\n * @hidden\n */\n\nexport var range = function (start, end, step) {\n  if (step === void 0) {\n    step = 1;\n  }\n\n  var result = [];\n\n  for (var i = start; i < end; i = i + step) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar normalizeTimes = function (candidate, min, max) {\n  return {\n    candidateValue: setTime(MIDNIGHT_DATE, candidate),\n    maxValue: addDays(setTime(MIDNIGHT_DATE, max), min.getHours() < max.getHours() ? 0 : 1),\n    minValue: setTime(MIDNIGHT_DATE, min)\n  };\n};\n/**\n * @hidden\n */\n\n\nexport var timeInRange = function (candidate, min, max) {\n  if (!candidate || !min || !max) {\n    return candidate;\n  }\n\n  var _a = normalizeTimes(candidate, min, max),\n      candidateValue = _a.candidateValue,\n      minValue = _a.minValue,\n      maxValue = _a.maxValue;\n\n  if (candidateValue < minValue) {\n    return setTime(candidate, min);\n  }\n\n  if (candidateValue > maxValue) {\n    return setTime(candidate, max);\n  }\n\n  return candidate;\n};\n/**\n * @hidden\n */\n\nexport var isInTimeRange = function (candidate, min, max) {\n  if (!candidate || !min || !max) {\n    return true;\n  }\n\n  var _a = normalizeTimes(candidate, min, max),\n      candidateValue = _a.candidateValue,\n      minValue = _a.minValue,\n      maxValue = _a.maxValue;\n\n  return minValue <= candidateValue && candidateValue <= maxValue;\n};\n/**\n * @hidden\n */\n\nexport var isInRange = function (candidate, min, max) {\n  if (candidate === null) {\n    return true;\n  }\n\n  var _a = normalizeTimes(candidate, min, max),\n      candidateValue = _a.candidateValue,\n      minValue = _a.minValue,\n      maxValue = _a.maxValue;\n\n  return minValue <= candidateValue && candidateValue <= maxValue;\n};\n/**\n * @hidden\n */\n\nexport var isSmallerThanMin = function (val, min) {\n  if (val === null || min === null) {\n    return false;\n  }\n\n  var normalizedValue = setTime(MIDNIGHT_DATE, val);\n  var normalizedMin = setTime(MIDNIGHT_DATE, min);\n  return normalizedValue.getTime() < normalizedMin.getHours();\n};\n/**\n * @hidden\n */\n\nexport var isBiggerThanMax = function (val, max) {\n  if (val === null || max === null) {\n    return false;\n  }\n\n  var normalizedValue = setTime(MIDNIGHT_DATE, val);\n  var normalizedMax = setTime(MIDNIGHT_DATE, max);\n  return normalizedMax.getTime() < normalizedValue.getHours();\n};","map":{"version":3,"sources":["../../../src/timepicker/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { cloneDate, addDays } from '@progress/kendo-date-math';\nimport { TIME_PART } from './models/TimePart';\nimport { MIDNIGHT_DATE, setTime } from '../utils';\nvar setter = function (method) { return function (date, value) {\n    var clone = cloneDate(date);\n    clone[method](value);\n    return clone;\n}; };\nvar defaultGetters = [\n    { type: TIME_PART.hour, getter: function (value) { return value.getHours(); } },\n    { type: TIME_PART.minute, getter: function (value) { return value.getMinutes(); } },\n    { type: TIME_PART.second, getter: function (value) { return value.getSeconds(); } },\n    { type: TIME_PART.millisecond, getter: function (value) { return value.getMilliseconds(); } }\n];\nvar left = function (getter) { return function (origin, _) { return getter(origin); }; };\nvar right = function (getter) { return function (_, candidate) { return getter(candidate); }; };\nvar convertToObject = function (parts) { return parts.reduce(function (obj, p) { obj[p.type] = p.type; return obj; }, {}); };\nvar getterByPart = function (parts) { return function (g) { return parts[g.type] ? right(g.getter) : left(g.getter); }; };\nvar gettersFactory = function (getters) { return function (parts) { return (getters.map(getterByPart(convertToObject(parts)))); }; };\nvar snapValue = function (getter, step, min, type) { return function (date) {\n    var value = getter(date);\n    var minValue = getter(min);\n    if (type === 'hour') {\n        return value - ((value - minValue) % step);\n    }\n    if (date.getTime() <= min.getTime()\n        && value !== 0\n        && value <= minValue) {\n        return (Math.ceil(value / step)) * step;\n    }\n    return value - (value % step);\n}; };\nvar snappersFactory = function (getters) { return function (steps, min) { return (getters.map(function (g) {\n    var step = Math.floor(steps[g.type]);\n    return step ? snapValue(g.getter, step, min, g.type) : g.getter;\n})); }; };\n/**\n * @hidden\n */\nexport var generateGetters = gettersFactory(defaultGetters);\n/**\n * @hidden\n */\nexport var generateSnappers = snappersFactory(defaultGetters);\n/**\n * @hidden\n */\nexport var valueMerger = function (getters) { return function (origin, candidate) {\n    origin.setHours.apply(origin, getters.map(function (g) { return g(origin, candidate); }));\n    return origin;\n}; };\n/**\n * @hidden\n */\nexport var snapTime = function (snappers) { return function (candidate) {\n    var date = cloneDate(candidate);\n    date.setHours.apply(date, snappers.map(function (s) { return s(date); }));\n    return date;\n}; };\n/**\n * @hidden\n */\nexport var setHours = setter('setHours');\n/**\n * @hidden\n */\nexport var setMinutes = setter('setMinutes');\n/**\n * @hidden\n */\nexport var setSeconds = setter('setSeconds');\n/**\n * @hidden\n */\nexport var getNow = function () { return new Date(); };\n/**\n * @hidden\n */\nexport var range = function (start, end, step) {\n    if (step === void 0) { step = 1; }\n    var result = [];\n    for (var i = start; i < end; i = i + step) {\n        result.push(i);\n    }\n    return result;\n};\nvar normalizeTimes = function (candidate, min, max) { return ({\n    candidateValue: setTime(MIDNIGHT_DATE, candidate),\n    maxValue: addDays(setTime(MIDNIGHT_DATE, max), min.getHours() < max.getHours() ? 0 : 1),\n    minValue: setTime(MIDNIGHT_DATE, min)\n}); };\n/**\n * @hidden\n */\nexport var timeInRange = function (candidate, min, max) {\n    if (!candidate || !min || !max) {\n        return candidate;\n    }\n    var _a = normalizeTimes(candidate, min, max), candidateValue = _a.candidateValue, minValue = _a.minValue, maxValue = _a.maxValue;\n    if (candidateValue < minValue) {\n        return setTime(candidate, min);\n    }\n    if (candidateValue > maxValue) {\n        return setTime(candidate, max);\n    }\n    return candidate;\n};\n/**\n * @hidden\n */\nexport var isInTimeRange = function (candidate, min, max) {\n    if (!candidate || !min || !max) {\n        return true;\n    }\n    var _a = normalizeTimes(candidate, min, max), candidateValue = _a.candidateValue, minValue = _a.minValue, maxValue = _a.maxValue;\n    return minValue <= candidateValue && candidateValue <= maxValue;\n};\n/**\n * @hidden\n */\nexport var isInRange = function (candidate, min, max) {\n    if (candidate === null) {\n        return true;\n    }\n    var _a = normalizeTimes(candidate, min, max), candidateValue = _a.candidateValue, minValue = _a.minValue, maxValue = _a.maxValue;\n    return minValue <= candidateValue && candidateValue <= maxValue;\n};\n/**\n * @hidden\n */\nexport var isSmallerThanMin = function (val, min) {\n    if (val === null || min === null) {\n        return false;\n    }\n    var normalizedValue = setTime(MIDNIGHT_DATE, val);\n    var normalizedMin = setTime(MIDNIGHT_DATE, min);\n    return normalizedValue.getTime() < normalizedMin.getHours();\n};\n/**\n * @hidden\n */\nexport var isBiggerThanMax = function (val, max) {\n    if (val === null || max === null) {\n        return false;\n    }\n    var normalizedValue = setTime(MIDNIGHT_DATE, val);\n    var normalizedMax = setTime(MIDNIGHT_DATE, max);\n    return normalizedMax.getTime() < normalizedValue.getHours();\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}