{"ast":null,"code":"import { ColumnDefaultProps } from '../ColumnProps';\n\nfunction nextColumn(columns, current) {\n  var currentDepth = columns[current].depth;\n  var next = null;\n\n  for (var index = current + 1; index < columns.length; index++) {\n    if (columns[index].depth === currentDepth) {\n      next = columns[index];\n      break;\n    }\n  }\n\n  return next;\n}\n/**\n * @hidden\n */\n\n\nexport function mapColumns(columns) {\n  var columnsMap = [[]];\n  var maxDepth = 0;\n\n  for (var q = columns.length - 1; q >= 0; q--) {\n    maxDepth = Math.max(maxDepth, columns[q].depth);\n    columns[q].colSpan = columns[q].colSpan || 1;\n\n    if (columns[q].parentIndex !== -1) {\n      columns[columns[q].parentIndex].colSpan = (columns[columns[q].parentIndex].colSpan || 0) + columns[q].colSpan;\n    }\n  }\n\n  var rowSpan = 1;\n  columns.forEach(function (column, i) {\n    columnsMap[column.depth] = columnsMap[column.depth] || [];\n    var needKFirst = false;\n\n    if (columnsMap[column.depth].length === 0) {\n      if (rowSpan <= 1) {\n        rowSpan = 1 + (column.children.length > 0 ? 0 : maxDepth - column.depth);\n      } else {\n        rowSpan--;\n        needKFirst = true;\n      }\n    }\n\n    column.rowSpan = 1 + (column.children.length > 0 ? 0 : maxDepth - column.depth);\n    column.kFirst = needKFirst;\n    column.index = columnsMap[column.depth].length;\n    columnsMap[column.depth].push(i);\n  });\n  var stickyLeftWidth = new Array(columnsMap.length).fill(0);\n  var width = 0;\n  columns.forEach(function (column) {\n    if (column.locked) {\n      column.left = stickyLeftWidth[column.depth];\n      width = column.width ? parseFloat(column.width.toString()) : 0;\n\n      if (column.children.length === 0) {\n        for (var i = column.depth; i < stickyLeftWidth.length; i++) {\n          stickyLeftWidth[i] += width;\n        }\n      } else {\n        stickyLeftWidth[column.depth] += width;\n      }\n    }\n  });\n  var stickyRightWidth = new Array(columnsMap.length).fill(0);\n\n  for (var i = columns.length - 1; i >= 0; i--) {\n    var column = columns[i];\n\n    if (column.locked) {\n      column.right = stickyRightWidth[column.depth];\n      width = column.width ? parseFloat(column.width.toString()) : 0;\n\n      if (column.children.length === 0) {\n        for (var j = column.depth; j < stickyRightWidth.length; j++) {\n          stickyRightWidth[j] += width;\n        }\n      } else {\n        stickyRightWidth[column.depth] += width;\n      }\n\n      var next = nextColumn(columns, i);\n      column.rightBorder = !(next && next.locked);\n    }\n  }\n\n  return columnsMap;\n}\n/**\n * @hidden\n */\n\nexport function readColumns(elements, depth) {\n  if (depth === void 0) {\n    depth = 0;\n  }\n\n  var columns = [];\n\n  if (!elements || !elements.length) {\n    return [];\n  }\n\n  elements.forEach(function (columnProps) {\n    var children = readColumns(columnProps.children || [], depth + 1);\n    columns.push(Object.assign({}, {\n      depth: depth\n    }, ColumnDefaultProps, columnProps, {\n      declarationIndex: columns.length,\n      children: children,\n      rowSpan: 0,\n      colSpan: 0\n    }));\n  });\n\n  var comparator = function (a, b) {\n    return a.orderIndex === b.orderIndex ? a.declarationIndex - b.declarationIndex : (a.orderIndex || 0) - (b.orderIndex || 0);\n  };\n\n  columns.sort(comparator);\n\n  if (depth === 0) {\n    var ret_1 = [];\n\n    var flat_1 = function (cols, pIndex) {\n      return cols.forEach(function (c) {\n        c.parentIndex = pIndex;\n        flat_1(c.children, ret_1.push(c) - 1);\n      });\n    };\n\n    flat_1(columns, -1);\n    return ret_1;\n  }\n\n  return columns;\n}\n/**\n * @hidden\n */\n\nexport function isRtl(element) {\n  return Boolean(element && getComputedStyle(element).direction === 'rtl');\n}\n/**\n * @hidden\n */\n\nexport function getIndex(event, parent) {\n  if (!parent || !event || !event.originalEvent) {\n    return -1;\n  }\n\n  var target = document ? document.elementFromPoint(event.clientX, event.originalEvent.clientY) : null;\n\n  while (target && target.parentElement !== parent) {\n    target = target.parentElement;\n  }\n\n  var children = parent.children;\n\n  for (var i = 0; i < children.length; i++) {\n    if (children[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}","map":{"version":3,"sources":["../../../../src/header/utils/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { ColumnDefaultProps } from '../ColumnProps';\nfunction nextColumn(columns, current) {\n    var currentDepth = columns[current].depth;\n    var next = null;\n    for (var index = current + 1; index < columns.length; index++) {\n        if (columns[index].depth === currentDepth) {\n            next = columns[index];\n            break;\n        }\n    }\n    return next;\n}\n/**\n * @hidden\n */\nexport function mapColumns(columns) {\n    var columnsMap = [[]];\n    var maxDepth = 0;\n    for (var q = columns.length - 1; q >= 0; q--) {\n        maxDepth = Math.max(maxDepth, columns[q].depth);\n        columns[q].colSpan = columns[q].colSpan || 1;\n        if (columns[q].parentIndex !== -1) {\n            columns[columns[q].parentIndex].colSpan =\n                (columns[columns[q].parentIndex].colSpan || 0) + columns[q].colSpan;\n        }\n    }\n    var rowSpan = 1;\n    columns.forEach(function (column, i) {\n        columnsMap[column.depth] = columnsMap[column.depth] || [];\n        var needKFirst = false;\n        if (columnsMap[column.depth].length === 0) {\n            if (rowSpan <= 1) {\n                rowSpan = 1 + (column.children.length > 0 ? 0 : maxDepth - column.depth);\n            }\n            else {\n                rowSpan--;\n                needKFirst = true;\n            }\n        }\n        column.rowSpan = 1 + (column.children.length > 0 ? 0 : maxDepth - column.depth);\n        column.kFirst = needKFirst;\n        column.index = columnsMap[column.depth].length;\n        columnsMap[column.depth].push(i);\n    });\n    var stickyLeftWidth = new Array(columnsMap.length).fill(0);\n    var width = 0;\n    columns.forEach(function (column) {\n        if (column.locked) {\n            column.left = stickyLeftWidth[column.depth];\n            width = column.width ? parseFloat(column.width.toString()) : 0;\n            if (column.children.length === 0) {\n                for (var i = column.depth; i < stickyLeftWidth.length; i++) {\n                    stickyLeftWidth[i] += width;\n                }\n            }\n            else {\n                stickyLeftWidth[column.depth] += width;\n            }\n        }\n    });\n    var stickyRightWidth = new Array(columnsMap.length).fill(0);\n    for (var i = columns.length - 1; i >= 0; i--) {\n        var column = columns[i];\n        if (column.locked) {\n            column.right = stickyRightWidth[column.depth];\n            width = column.width ? parseFloat(column.width.toString()) : 0;\n            if (column.children.length === 0) {\n                for (var j = column.depth; j < stickyRightWidth.length; j++) {\n                    stickyRightWidth[j] += width;\n                }\n            }\n            else {\n                stickyRightWidth[column.depth] += width;\n            }\n            var next = nextColumn(columns, i);\n            column.rightBorder = !(next && next.locked);\n        }\n    }\n    return columnsMap;\n}\n/**\n * @hidden\n */\nexport function readColumns(elements, depth) {\n    if (depth === void 0) { depth = 0; }\n    var columns = [];\n    if (!elements || !elements.length) {\n        return [];\n    }\n    elements.forEach(function (columnProps) {\n        var children = readColumns(columnProps.children || [], depth + 1);\n        columns.push(Object.assign({}, { depth: depth }, ColumnDefaultProps, columnProps, {\n            declarationIndex: columns.length,\n            children: children,\n            rowSpan: 0,\n            colSpan: 0\n        }));\n    });\n    var comparator = function (a, b) {\n        return a.orderIndex === b.orderIndex ?\n            a.declarationIndex - b.declarationIndex :\n            ((a.orderIndex || 0) - (b.orderIndex || 0));\n    };\n    columns.sort(comparator);\n    if (depth === 0) {\n        var ret_1 = [];\n        var flat_1 = function (cols, pIndex) {\n            return cols.forEach(function (c) {\n                c.parentIndex = pIndex;\n                flat_1(c.children, ret_1.push(c) - 1);\n            });\n        };\n        flat_1(columns, -1);\n        return ret_1;\n    }\n    return columns;\n}\n/**\n * @hidden\n */\nexport function isRtl(element) {\n    return Boolean(element && getComputedStyle(element).direction === 'rtl');\n}\n/**\n * @hidden\n */\nexport function getIndex(event, parent) {\n    if (!parent || !event || !event.originalEvent) {\n        return -1;\n    }\n    var target = document ? document.elementFromPoint(event.clientX, event.originalEvent.clientY) : null;\n    while (target && target.parentElement !== parent) {\n        target = target.parentElement;\n    }\n    var children = parent.children;\n    for (var i = 0; i < children.length; i++) {\n        if (children[i] === target) {\n            return i;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}