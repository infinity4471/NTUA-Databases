{"ast":null,"code":"import BaseNode from '../core/base-node';\nimport NODE_MAP from './node-map';\nimport renderPath from './utils/render-path';\nimport { defined } from '../util';\n\nvar Node = function (BaseNode) {\n  function Node(srcElement) {\n    BaseNode.call(this, srcElement);\n\n    if (srcElement) {\n      this.initClip();\n    }\n  }\n\n  if (BaseNode) Node.__proto__ = BaseNode;\n  Node.prototype = Object.create(BaseNode && BaseNode.prototype);\n  Node.prototype.constructor = Node;\n\n  Node.prototype.initClip = function initClip() {\n    var clip = this.srcElement.clip();\n\n    if (clip) {\n      this.clip = clip;\n      clip.addObserver(this);\n    }\n  };\n\n  Node.prototype.clear = function clear() {\n    if (this.srcElement) {\n      this.srcElement.removeObserver(this);\n    }\n\n    this.clearClip();\n    BaseNode.prototype.clear.call(this);\n  };\n\n  Node.prototype.clearClip = function clearClip() {\n    if (this.clip) {\n      this.clip.removeObserver(this);\n      delete this.clip;\n    }\n  };\n\n  Node.prototype.setClip = function setClip(ctx) {\n    if (this.clip) {\n      ctx.beginPath();\n      renderPath(ctx, this.clip);\n      ctx.clip();\n    }\n  };\n\n  Node.prototype.optionsChange = function optionsChange(e) {\n    if (e.field === \"clip\") {\n      this.clearClip();\n      this.initClip();\n    }\n\n    BaseNode.prototype.optionsChange.call(this, e);\n  };\n\n  Node.prototype.setTransform = function setTransform(ctx) {\n    if (this.srcElement) {\n      var transform = this.srcElement.transform();\n\n      if (transform) {\n        ctx.transform.apply(ctx, transform.matrix().toArray(6));\n      }\n    }\n  };\n\n  Node.prototype.loadElements = function loadElements(elements, pos, cors) {\n    var this$1 = this;\n\n    for (var i = 0; i < elements.length; i++) {\n      var srcElement = elements[i];\n      var children = srcElement.children;\n      var childNode = new NODE_MAP[srcElement.nodeType](srcElement, cors);\n\n      if (children && children.length > 0) {\n        childNode.load(children, pos, cors);\n      }\n\n      if (defined(pos)) {\n        this$1.insertAt(childNode, pos);\n      } else {\n        this$1.append(childNode);\n      }\n    }\n  };\n\n  Node.prototype.load = function load(elements, pos, cors) {\n    this.loadElements(elements, pos, cors);\n    this.invalidate();\n  };\n\n  Node.prototype.setOpacity = function setOpacity(ctx) {\n    if (this.srcElement) {\n      var opacity = this.srcElement.opacity();\n\n      if (defined(opacity)) {\n        this.globalAlpha(ctx, opacity);\n      }\n    }\n  };\n\n  Node.prototype.globalAlpha = function globalAlpha(ctx, value) {\n    var opactity = value;\n\n    if (opactity && ctx.globalAlpha) {\n      opactity *= ctx.globalAlpha;\n    }\n\n    ctx.globalAlpha = opactity;\n  };\n\n  Node.prototype.visible = function visible() {\n    var src = this.srcElement;\n    return !src || src && src.options.visible !== false;\n  };\n\n  return Node;\n}(BaseNode);\n\nexport default Node;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/canvas/node.js"],"names":["BaseNode","NODE_MAP","renderPath","defined","Node","srcElement","call","initClip","__proto__","prototype","Object","create","constructor","clip","addObserver","clear","removeObserver","clearClip","setClip","ctx","beginPath","optionsChange","e","field","setTransform","transform","apply","matrix","toArray","loadElements","elements","pos","cors","this$1","i","length","children","childNode","nodeType","load","insertAt","append","invalidate","setOpacity","opacity","globalAlpha","value","opactity","visible","src","options"],"mappings":"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","sourcesContent":["import BaseNode from '../core/base-node';\nimport NODE_MAP from './node-map';\nimport renderPath from './utils/render-path';\nimport { defined } from '../util';\n\nvar Node = (function (BaseNode) {\n    function Node(srcElement) {\n        BaseNode.call(this, srcElement);\n        if (srcElement) {\n            this.initClip();\n        }\n    }\n\n    if ( BaseNode ) Node.__proto__ = BaseNode;\n    Node.prototype = Object.create( BaseNode && BaseNode.prototype );\n    Node.prototype.constructor = Node;\n\n    Node.prototype.initClip = function initClip () {\n        var clip = this.srcElement.clip();\n        if (clip) {\n            this.clip = clip;\n            clip.addObserver(this);\n        }\n    };\n\n    Node.prototype.clear = function clear () {\n        if (this.srcElement) {\n            this.srcElement.removeObserver(this);\n        }\n\n        this.clearClip();\n\n        BaseNode.prototype.clear.call(this);\n    };\n\n    Node.prototype.clearClip = function clearClip () {\n        if (this.clip) {\n            this.clip.removeObserver(this);\n            delete this.clip;\n        }\n    };\n\n    Node.prototype.setClip = function setClip (ctx) {\n        if (this.clip) {\n            ctx.beginPath();\n            renderPath(ctx, this.clip);\n            ctx.clip();\n        }\n    };\n\n    Node.prototype.optionsChange = function optionsChange (e) {\n        if (e.field === \"clip\") {\n            this.clearClip();\n            this.initClip();\n        }\n\n        BaseNode.prototype.optionsChange.call(this, e);\n    };\n\n    Node.prototype.setTransform = function setTransform (ctx) {\n        if (this.srcElement) {\n            var transform = this.srcElement.transform();\n            if (transform) {\n                ctx.transform.apply(ctx, transform.matrix().toArray(6));\n            }\n        }\n    };\n\n    Node.prototype.loadElements = function loadElements (elements, pos, cors) {\n        var this$1 = this;\n\n        for (var i = 0; i < elements.length; i++) {\n            var srcElement = elements[i];\n            var children = srcElement.children;\n\n            var childNode = new NODE_MAP[srcElement.nodeType](srcElement, cors);\n\n            if (children && children.length > 0) {\n                childNode.load(children, pos, cors);\n            }\n\n            if (defined(pos)) {\n                this$1.insertAt(childNode, pos);\n            } else {\n                this$1.append(childNode);\n            }\n        }\n    };\n\n    Node.prototype.load = function load (elements, pos, cors) {\n        this.loadElements(elements, pos, cors);\n\n        this.invalidate();\n    };\n\n    Node.prototype.setOpacity = function setOpacity (ctx) {\n        if (this.srcElement) {\n            var opacity = this.srcElement.opacity();\n            if (defined(opacity)) {\n                this.globalAlpha(ctx, opacity);\n            }\n        }\n    };\n\n    Node.prototype.globalAlpha = function globalAlpha (ctx, value) {\n        var opactity = value;\n        if (opactity && ctx.globalAlpha) {\n            opactity *= ctx.globalAlpha;\n        }\n        ctx.globalAlpha = opactity;\n    };\n\n    Node.prototype.visible = function visible () {\n        var src = this.srcElement;\n        return !src || (src && src.options.visible !== false);\n    };\n\n    return Node;\n}(BaseNode));\n\nexport default Node;"]},"metadata":{},"sourceType":"module"}