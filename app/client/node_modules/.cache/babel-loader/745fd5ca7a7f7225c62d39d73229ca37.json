{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { Popup } from '@progress/kendo-react-popup';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nvar ANCHOR_VERTICAL_ALIGN = 'bottom';\n/**\n * @hidden\n */\n\nvar POPUP_VERTICAL_ALIGN = 'top';\n/**\n * @hidden\n */\n\nexport var Picker = function (props) {\n  var popupSettings = props.popupSettings || {};\n  var horizontalAlign = props.dir === 'rtl' ? 'right' : 'left';\n  var anchorAlign = React.useMemo(function () {\n    return {\n      horizontal: horizontalAlign,\n      vertical: ANCHOR_VERTICAL_ALIGN\n    };\n  }, [horizontalAlign]);\n  var popupAlign = React.useMemo(function () {\n    return {\n      horizontal: horizontalAlign,\n      vertical: POPUP_VERTICAL_ALIGN\n    };\n  }, [horizontalAlign]);\n  return React.createElement(React.Fragment, null, props.input, props.button, React.createElement(Popup, __assign({\n    style: __assign({}, (popupSettings || {}).style, {\n      direction: props.dir\n    })\n  }, popupSettings, {\n    anchor: props.popupAnchor,\n    anchorAlign: anchorAlign,\n    popupAlign: popupAlign,\n    show: props.open,\n    open: props.onOpen,\n    close: props.onClose,\n    className: classNames('k-reset', popupSettings.className)\n  }), props.content));\n};\nPicker.displayName = 'KendoPickerComponent';","map":{"version":3,"sources":["../../../src/colors/Picker.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,KAAT,QAA6B,6BAA7B;AACA,SAAS,UAAT,QAA2B,8BAA3B;AAGA;;;;AAGA,IAAM,qBAAqB,GAAa,QAAxC;AACA;;;;AAGA,IAAM,oBAAoB,GAAU,KAApC;AAEA;;;;AAGA,OAAO,IAAM,MAAM,GAAyC,UAAC,KAAD,EAAmB;AAC3E,MAAM,aAAa,GAAG,KAAK,CAAC,aAAN,IAAuB,EAA7C;AACA,MAAM,eAAe,GAAqB,KAAK,CAAC,GAAN,KAAc,KAAd,GAAsB,OAAtB,GAAgC,MAA1E;AAEA,MAAM,WAAW,GAAU,KAAK,CAAC,OAAN,CACvB,YAAA;AAAM,WAAC;AAAE,MAAA,UAAU,EAAE,eAAd;AAA+B,MAAA,QAAQ,EAAxC;AAAC,KAAD;AAAkE,GADjD,EAEvB,CAAC,eAAD,CAFuB,CAA3B;AAIA,MAAM,UAAU,GAAU,KAAK,CAAC,OAAN,CACtB,YAAA;AAAM,WAAC;AAAE,MAAA,UAAU,EAAE,eAAd;AAA+B,MAAA,QAAQ,EAAxC;AAAC,KAAD;AAAiE,GADjD,EAEtB,CAAC,eAAD,CAFsB,CAA1B;AAKA,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACK,KAAK,CAAC,KADX,EAEK,KAAK,CAAC,MAFX,EAGI,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,QAAA,CAAA;AACF,IAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EACE,CAAC,aAAa,IAAI,EAAlB,EAAsB,KADxB,EAC6B;AAC9B,MAAA,SAAS,EAAE,KAAK,CAAC;AADa,KAD7B;AADH,GAAA,EAKE,aALF,EAKe;AACjB,IAAA,MAAM,EAAE,KAAK,CAAC,WADG;AAEjB,IAAA,WAAW,EAAE,WAFI;AAGjB,IAAA,UAAU,EAAE,UAHK;AAIjB,IAAA,IAAI,EAAE,KAAK,CAAC,IAJK;AAKjB,IAAA,IAAI,EAAE,KAAK,CAAC,MALK;AAMjB,IAAA,KAAK,EAAE,KAAK,CAAC,OANI;AAOjB,IAAA,SAAS,EAAE,UAAU,CAAC,SAAD,EAAY,aAAa,CAAC,SAA1B;AAPJ,GALf,CAAN,EAcK,KAAK,CAAC,OAdX,CAHJ,CADJ;AAsBH,CAnCM;AAqCP,MAAM,CAAC,WAAP,GAAqB,sBAArB","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Popup } from '@progress/kendo-react-popup';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\nvar ANCHOR_VERTICAL_ALIGN = 'bottom';\n/**\n * @hidden\n */\nvar POPUP_VERTICAL_ALIGN = 'top';\n/**\n * @hidden\n */\nexport var Picker = function (props) {\n    var popupSettings = props.popupSettings || {};\n    var horizontalAlign = props.dir === 'rtl' ? 'right' : 'left';\n    var anchorAlign = React.useMemo(function () { return ({ horizontal: horizontalAlign, vertical: ANCHOR_VERTICAL_ALIGN }); }, [horizontalAlign]);\n    var popupAlign = React.useMemo(function () { return ({ horizontal: horizontalAlign, vertical: POPUP_VERTICAL_ALIGN }); }, [horizontalAlign]);\n    return (React.createElement(React.Fragment, null,\n        props.input,\n        props.button,\n        React.createElement(Popup, __assign({ style: __assign({}, (popupSettings || {}).style, { direction: props.dir }) }, popupSettings, { anchor: props.popupAnchor, anchorAlign: anchorAlign, popupAlign: popupAlign, show: props.open, open: props.onOpen, close: props.onClose, className: classNames('k-reset', popupSettings.className) }), props.content)));\n};\nPicker.displayName = 'KendoPickerComponent';\n//# sourceMappingURL=Picker.js.map"]},"metadata":{},"sourceType":"module"}