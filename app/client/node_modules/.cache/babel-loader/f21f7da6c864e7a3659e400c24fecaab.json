{"ast":null,"code":"/**\n * @hidden\n */\nvar VirtualScroll =\n/** @class */\nfunction () {\n  function VirtualScroll(cached) {\n    this.containerHeight = 0;\n    this.topCacheCount = 0; // 4;\n\n    this.attendedSkip = 0; // -4;\n\n    this.propsSkip = 0;\n    this.total = 0;\n    this.scrollableVirtual = false;\n    this.realSkip = 0;\n    this.pageSize = 0;\n    this.heightContainer = null;\n    this.prevScrollPos = 0;\n    this.tableTranslate = 0;\n    this.scrollSyncing = false;\n\n    if (cached) {\n      this.topCacheCount = 4;\n      this.attendedSkip = -this.topCacheCount;\n    }\n\n    this.scrollHandler = this.scrollHandler.bind(this);\n  }\n\n  Object.defineProperty(VirtualScroll.prototype, \"rowHeights\", {\n    /**\n     * @return - The row heights in an array.\n     */\n    get: function () {\n      var result = [];\n      var allRows = this.tableBody && this.tableBody.children || [];\n      var accumulate = 0;\n\n      for (var i = 0; i < allRows.length; i++) {\n        if (allRows[i].className.indexOf('k-grouping-row') > -1) {\n          accumulate += allRows[i].scrollHeight;\n          continue;\n        }\n\n        if (allRows[i].className.indexOf('k-detail-row') > -1) {\n          result[result.length - 1].line += allRows[i].scrollHeight;\n        } else {\n          result.push({\n            line: allRows[i].scrollHeight,\n            acc: accumulate\n          });\n          accumulate = 0;\n        }\n      }\n\n      return result;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  VirtualScroll.prototype.changePage = function (skip, e) {\n    this.attendedSkip = skip - this.topCacheCount;\n    this.PageChange({\n      skip: Math.max(0, skip - this.topCacheCount),\n      take: this.pageSize\n    }, e);\n  };\n\n  VirtualScroll.prototype.translate = function (dY) {\n    this.tableTranslate = dY;\n\n    if (this.scrollableVirtual && this.table) {\n      this.table.style.transform = 'translateY(' + dY + 'px)';\n    }\n  };\n\n  VirtualScroll.prototype.syncScroll = function () {\n    if (!this.scrollableVirtual || !this.container) {\n      return;\n    }\n\n    this.syncTimeout = null;\n    var scrollTop = this.container.scrollTop;\n    var containerHeight = this.containerHeight; // = this.container.scrollHeight;\n\n    var rowHeights = this.rowHeights;\n    var percentage = (scrollTop - this.tableTranslate) / rowHeights[0].line;\n    var targetFloorScrollPosition = Math.floor(containerHeight * (this.propsSkip + percentage) / this.total);\n\n    if (this.container.scrollTop !== (this.prevScrollPos = targetFloorScrollPosition)) {\n      this.scrollSyncing = true;\n      this.container.scrollTop = this.prevScrollPos = targetFloorScrollPosition;\n    }\n\n    this.translate(this.tableTranslate + targetFloorScrollPosition - scrollTop);\n  };\n\n  VirtualScroll.prototype.reset = function () {\n    this.scrollSyncing = true;\n\n    if (this.container) {\n      this.container.scrollTop = 0;\n    }\n\n    this.translate(0);\n  };\n\n  VirtualScroll.prototype.localScrollUp = function (e) {\n    if (!this.container) {\n      return;\n    }\n\n    var heights = this.rowHeights;\n    var scrollTop = this.container.scrollTop;\n    var targetTranslate = this.tableTranslate;\n    var rowsCount = 0;\n    var additionalOnTop = scrollTop - targetTranslate;\n\n    if (additionalOnTop > 0) {\n      return;\n    }\n\n    while (rowsCount < this.topCacheCount + this.attendedSkip - this.realSkip && this.propsSkip - rowsCount > 0 && !(targetTranslate + (heights[heights.length - 1 - rowsCount].line + heights[heights.length - 1 - rowsCount].acc) + additionalOnTop <= scrollTop)) {\n      targetTranslate -= heights[heights.length - 1 - rowsCount].line + heights[heights.length - 1 - rowsCount].acc;\n      rowsCount++;\n    }\n\n    if (rowsCount === 0 && this.topCacheCount === 0 && this.attendedSkip > 0) {\n      // allows local scrolling up, when top caching is disabled\n      // for variable heights 'topCacheCount' should be atleast 1 to avoid flickering\n      targetTranslate = Math.max(targetTranslate - heights[0].line, 0);\n      rowsCount = 1;\n    }\n\n    if (this.propsSkip - rowsCount <= 0 && targetTranslate > scrollTop) {\n      this.translate(0);\n      this.changePage(0, e);\n      this.container.scrollTop = 0;\n      return;\n    }\n\n    if (targetTranslate > scrollTop) {\n      targetTranslate = scrollTop; // need to handle these cases\n      // if the item height is not available:\n      //    floor the translate to beginning of the item in absolute value\n    }\n\n    if (targetTranslate !== this.tableTranslate) {\n      this.translate(targetTranslate);\n      this.changePage(this.propsSkip - rowsCount, e);\n    }\n  };\n\n  VirtualScroll.prototype.localScrollDown = function (e) {\n    if (!this.container) {\n      return;\n    }\n\n    var heights = this.rowHeights;\n    var scrollTop = this.container.scrollTop;\n    var targetTranslate = this.tableTranslate;\n    var rowsCount = 0;\n\n    while (rowsCount < heights.length - this.topCacheCount && !(targetTranslate + heights[rowsCount].line + heights[rowsCount].acc > scrollTop)) {\n      targetTranslate += heights[rowsCount].line + heights[rowsCount].acc;\n      rowsCount++;\n    }\n\n    if (rowsCount >= heights.length - this.topCacheCount && this.propsSkip + rowsCount >= this.total) {\n      this.translate(targetTranslate);\n      this.changePage(this.total - 1, e);\n    } else if (targetTranslate !== this.tableTranslate) {\n      this.translate(targetTranslate);\n      this.changePage(this.propsSkip + rowsCount, e);\n    }\n  };\n\n  VirtualScroll.prototype.scrollNonStrict = function (e) {\n    var floatRowIndex = this.total * this.prevScrollPos / this.containerHeight;\n    var rowIndex = Math.floor(floatRowIndex);\n\n    if (rowIndex >= this.total) {\n      rowIndex = this.total - 1;\n    }\n\n    var rowpercentage = Math.min(floatRowIndex - rowIndex, 1);\n    var microAdjust = 0;\n    var rowIndexOffset = rowIndex - this.propsSkip;\n    var heights = this.rowHeights;\n\n    if (rowIndexOffset >= 0 && rowIndexOffset <= 1) {\n      microAdjust = -((heights[0].line + heights[0].acc) * rowpercentage);\n    } else if (rowIndexOffset === -1) {\n      microAdjust = -((heights[heights.length - 1].line + heights[heights.length - 1].acc) * rowpercentage);\n    }\n\n    this.translate(microAdjust + this.containerHeight * floatRowIndex / this.total);\n    this.changePage(rowIndex, e);\n  };\n\n  VirtualScroll.prototype.scrollHandler = function (e) {\n    if (!this.scrollableVirtual) {\n      return;\n    }\n\n    if (this.scrollSyncing || !this.container || !this.table) {\n      this.scrollSyncing = false;\n      return;\n    }\n\n    var grid = this;\n    clearTimeout(this.syncTimeout);\n    this.syncTimeout = setTimeout(function () {\n      grid.syncScroll();\n    }, 200);\n    var scrollTop = this.container.scrollTop;\n    var prev = this.prevScrollPos;\n    this.prevScrollPos = scrollTop;\n\n    if (scrollTop - prev < 0 && scrollTop > this.tableTranslate - this.table.scrollHeight / 10) {\n      this.localScrollUp(e);\n    } else if (scrollTop - prev > 0 && scrollTop < this.tableTranslate + this.table.scrollHeight * 2 / 3) {\n      this.localScrollDown(e);\n    } else {\n      this.scrollNonStrict(e);\n    }\n\n    this.prevScrollPos = scrollTop;\n  };\n\n  return VirtualScroll;\n}();\n\nexport { VirtualScroll };","map":{"version":3,"sources":["../../src/VirtualScroll.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    function VirtualScroll(cached) {\n        this.containerHeight = 0;\n        this.topCacheCount = 0; // 4;\n        this.attendedSkip = 0; // -4;\n        this.propsSkip = 0;\n        this.total = 0;\n        this.scrollableVirtual = false;\n        this.realSkip = 0;\n        this.pageSize = 0;\n        this.heightContainer = null;\n        this.prevScrollPos = 0;\n        this.tableTranslate = 0;\n        this.scrollSyncing = false;\n        if (cached) {\n            this.topCacheCount = 4;\n            this.attendedSkip = -this.topCacheCount;\n        }\n        this.scrollHandler = this.scrollHandler.bind(this);\n    }\n    Object.defineProperty(VirtualScroll.prototype, \"rowHeights\", {\n        /**\n         * @return - The row heights in an array.\n         */\n        get: function () {\n            var result = [];\n            var allRows = this.tableBody && this.tableBody.children || [];\n            var accumulate = 0;\n            for (var i = 0; i < allRows.length; i++) {\n                if (allRows[i].className.indexOf('k-grouping-row') > -1) {\n                    accumulate += allRows[i].scrollHeight;\n                    continue;\n                }\n                if (allRows[i].className.indexOf('k-detail-row') > -1) {\n                    result[result.length - 1].line += allRows[i].scrollHeight;\n                }\n                else {\n                    result.push({\n                        line: allRows[i].scrollHeight,\n                        acc: accumulate\n                    });\n                    accumulate = 0;\n                }\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VirtualScroll.prototype.changePage = function (skip, e) {\n        this.attendedSkip = skip - this.topCacheCount;\n        this.PageChange({\n            skip: Math.max(0, skip - this.topCacheCount),\n            take: this.pageSize\n        }, e);\n    };\n    VirtualScroll.prototype.translate = function (dY) {\n        this.tableTranslate = dY;\n        if (this.scrollableVirtual && this.table) {\n            this.table.style.transform = 'translateY(' + dY + 'px)';\n        }\n    };\n    VirtualScroll.prototype.syncScroll = function () {\n        if (!this.scrollableVirtual || !this.container) {\n            return;\n        }\n        this.syncTimeout = null;\n        var scrollTop = this.container.scrollTop;\n        var containerHeight = this.containerHeight; // = this.container.scrollHeight;\n        var rowHeights = this.rowHeights;\n        var percentage = (scrollTop - this.tableTranslate) / rowHeights[0].line;\n        var targetFloorScrollPosition = Math.floor((containerHeight) * (this.propsSkip + percentage) / this.total);\n        if (this.container.scrollTop !== (this.prevScrollPos = targetFloorScrollPosition)) {\n            this.scrollSyncing = true;\n            this.container.scrollTop = (this.prevScrollPos = targetFloorScrollPosition);\n        }\n        this.translate(this.tableTranslate + targetFloorScrollPosition - scrollTop);\n    };\n    VirtualScroll.prototype.reset = function () {\n        this.scrollSyncing = true;\n        if (this.container) {\n            this.container.scrollTop = 0;\n        }\n        this.translate(0);\n    };\n    VirtualScroll.prototype.localScrollUp = function (e) {\n        if (!this.container) {\n            return;\n        }\n        var heights = this.rowHeights;\n        var scrollTop = this.container.scrollTop;\n        var targetTranslate = this.tableTranslate;\n        var rowsCount = 0;\n        var additionalOnTop = scrollTop - targetTranslate;\n        if (additionalOnTop > 0) {\n            return;\n        }\n        while ((rowsCount < this.topCacheCount + this.attendedSkip - this.realSkip)\n            && this.propsSkip - rowsCount > 0 &&\n            !(targetTranslate + (heights[heights.length - 1 - rowsCount].line + heights[heights.length - 1 - rowsCount].acc) + additionalOnTop <= scrollTop)) {\n            targetTranslate -= heights[heights.length - 1 - rowsCount].line +\n                heights[heights.length - 1 - rowsCount].acc;\n            rowsCount++;\n        }\n        if (rowsCount === 0 && this.topCacheCount === 0 && this.attendedSkip > 0) {\n            // allows local scrolling up, when top caching is disabled\n            // for variable heights 'topCacheCount' should be atleast 1 to avoid flickering\n            targetTranslate = Math.max(targetTranslate - heights[0].line, 0);\n            rowsCount = 1;\n        }\n        if (this.propsSkip - rowsCount <= 0 && targetTranslate > scrollTop) {\n            this.translate(0);\n            this.changePage(0, e);\n            this.container.scrollTop = 0;\n            return;\n        }\n        if (targetTranslate > scrollTop) {\n            targetTranslate = scrollTop;\n            // need to handle these cases\n            // if the item height is not available:\n            //    floor the translate to beginning of the item in absolute value\n        }\n        if (targetTranslate !== this.tableTranslate) {\n            this.translate(targetTranslate);\n            this.changePage(this.propsSkip - rowsCount, e);\n        }\n    };\n    VirtualScroll.prototype.localScrollDown = function (e) {\n        if (!this.container) {\n            return;\n        }\n        var heights = this.rowHeights;\n        var scrollTop = this.container.scrollTop;\n        var targetTranslate = this.tableTranslate;\n        var rowsCount = 0;\n        while (rowsCount < heights.length - this.topCacheCount &&\n            !(targetTranslate + heights[rowsCount].line + heights[rowsCount].acc > scrollTop)) {\n            targetTranslate += heights[rowsCount].line + heights[rowsCount].acc;\n            rowsCount++;\n        }\n        if (rowsCount >= heights.length - this.topCacheCount && this.propsSkip + rowsCount >= this.total) {\n            this.translate(targetTranslate);\n            this.changePage(this.total - 1, e);\n        }\n        else if (targetTranslate !== this.tableTranslate) {\n            this.translate(targetTranslate);\n            this.changePage(this.propsSkip + rowsCount, e);\n        }\n    };\n    VirtualScroll.prototype.scrollNonStrict = function (e) {\n        var floatRowIndex = this.total * this.prevScrollPos / (this.containerHeight);\n        var rowIndex = Math.floor(floatRowIndex);\n        if (rowIndex >= this.total) {\n            rowIndex = this.total - 1;\n        }\n        var rowpercentage = Math.min(floatRowIndex - rowIndex, 1);\n        var microAdjust = 0;\n        var rowIndexOffset = rowIndex - this.propsSkip;\n        var heights = this.rowHeights;\n        if (rowIndexOffset >= 0 && rowIndexOffset <= 1) {\n            microAdjust = -((heights[0].line + heights[0].acc) * rowpercentage);\n        }\n        else if (rowIndexOffset === -1) {\n            microAdjust = -((heights[heights.length - 1].line + heights[heights.length - 1].acc) * rowpercentage);\n        }\n        this.translate(microAdjust + this.containerHeight * floatRowIndex / this.total);\n        this.changePage(rowIndex, e);\n    };\n    VirtualScroll.prototype.scrollHandler = function (e) {\n        if (!this.scrollableVirtual) {\n            return;\n        }\n        if (this.scrollSyncing || !this.container || !this.table) {\n            this.scrollSyncing = false;\n            return;\n        }\n        var grid = this;\n        clearTimeout(this.syncTimeout);\n        this.syncTimeout = setTimeout(function () { grid.syncScroll(); }, 200);\n        var scrollTop = this.container.scrollTop;\n        var prev = this.prevScrollPos;\n        this.prevScrollPos = scrollTop;\n        if (scrollTop - prev < 0 && scrollTop > this.tableTranslate - this.table.scrollHeight / 10) {\n            this.localScrollUp(e);\n        }\n        else if (scrollTop - prev > 0 && scrollTop < this.tableTranslate + this.table.scrollHeight * 2 / 3) {\n            this.localScrollDown(e);\n        }\n        else {\n            this.scrollNonStrict(e);\n        }\n        this.prevScrollPos = scrollTop;\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\n//# sourceMappingURL=VirtualScroll.js.map"]},"metadata":{},"sourceType":"module"}