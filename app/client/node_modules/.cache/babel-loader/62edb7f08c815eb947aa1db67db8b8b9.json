{"ast":null,"code":"var formatRegExp = /\\{(\\d+)}/g;\nexport default function formatString(format) {\n  var values = arguments;\n  return format.replace(formatRegExp, function (match, index) {\n    var value = values[parseInt(index, 10) + 1];\n    return value;\n  });\n}","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@telerik/kendo-intl/dist/es/common/format-string.js"],"names":["formatRegExp","formatString","format","values","arguments","replace","match","index","value","parseInt"],"mappings":"AAAA,IAAIA,YAAY,GAAG,WAAnB;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AACzC,MAAIC,MAAM,GAAGC,SAAb;AAEA,SAAOF,MAAM,CAACG,OAAP,CAAeL,YAAf,EAA6B,UAAUM,KAAV,EAAiBC,KAAjB,EAAwB;AACxD,QAAIC,KAAK,GAAGL,MAAM,CAACM,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAR,GAAsB,CAAvB,CAAlB;AAEA,WAAOC,KAAP;AACH,GAJM,CAAP;AAKH","sourcesContent":["var formatRegExp = /\\{(\\d+)}/g;\n\nexport default function formatString(format) {\n    var values = arguments;\n\n    return format.replace(formatRegExp, function (match, index) {\n        var value = values[parseInt(index, 10) + 1];\n\n        return value;\n    });\n}"]},"metadata":{},"sourceType":"module"}