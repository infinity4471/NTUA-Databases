{"ast":null,"code":"import io from 'socket.io-client';\nimport { updateCustomers, updateStores } from '../../actions';\n\nconst socketMiddleware = url => {\n  return store => {\n    let socket = io(url);\n    socket.on('CUSTOMER_NAMES', data => {\n      store.dispatch(updateCustomers(data));\n    });\n    socket.on('STORE_ADDRESSES', data => {\n      store.dispatch(updateStores(data));\n    });\n    socket.on('CUSTOMER_DATA', data => {\n      store.dispatch(updateCustomersData(data));\n    });\n    return next => action => {\n      switch (action.type) {\n        default:\n          break;\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { socketMiddleware };","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/reducers/middlewares/socketMiddleware.js"],"names":["io","updateCustomers","updateStores","socketMiddleware","url","store","socket","on","data","dispatch","updateCustomersData","next","action","type"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,eAA9C;;AAEA,MAAMC,gBAAgB,GAAIC,GAAD,IAAS;AACjC,SAAOC,KAAK,IAAI;AACf,QAAIC,MAAM,GAAGN,EAAE,CAACI,GAAD,CAAf;AACAE,IAAAA,MAAM,CAACC,EAAP,CAAU,gBAAV,EAA4BC,IAAI,IAAI;AACnCH,MAAAA,KAAK,CAACI,QAAN,CAAeR,eAAe,CAACO,IAAD,CAA9B;AACA,KAFD;AAGAF,IAAAA,MAAM,CAACC,EAAP,CAAU,iBAAV,EAA6BC,IAAI,IAAI;AACpCH,MAAAA,KAAK,CAACI,QAAN,CAAeP,YAAY,CAACM,IAAD,CAA3B;AACA,KAFD;AAGAF,IAAAA,MAAM,CAACC,EAAP,CAAU,eAAV,EAA2BC,IAAI,IAAI;AAClCH,MAAAA,KAAK,CAACI,QAAN,CAAeC,mBAAmB,CAACF,IAAD,CAAlC;AACA,KAFD;AAGA,WAAOG,IAAI,IAAIC,MAAM,IAAI;AACjB,cAAOA,MAAM,CAACC,IAAd;AACN;AAAS;AADH;;AAGP,aAAOF,IAAI,CAAEC,MAAF,CAAX;AACA,KALD;AAMA,GAjBD;AAkBA,CAnBD;;AAqBA,SAAQT,gBAAR","sourcesContent":["import io from 'socket.io-client';\nimport { updateCustomers, updateStores } from '../../actions';\n\nconst socketMiddleware = (url) => {\n\treturn store => {\n\t\tlet socket = io(url);\n\t\tsocket.on('CUSTOMER_NAMES', data => {\n\t\t\tstore.dispatch(updateCustomers(data))\t\n\t\t});\n\t\tsocket.on('STORE_ADDRESSES', data => {\n\t\t\tstore.dispatch(updateStores(data))\n\t\t});\n\t\tsocket.on('CUSTOMER_DATA', data => {\n\t\t\tstore.dispatch(updateCustomersData(data))\n\t\t});\n\t\treturn next => action => {\n        \t\tswitch(action.type){\n\t\t\t\tdefault: break;\n\t\t\t}\n\t\t\treturn next( action );\n\t\t}\n\t}\n}\n\nexport {socketMiddleware};\n"]},"metadata":{},"sourceType":"module"}