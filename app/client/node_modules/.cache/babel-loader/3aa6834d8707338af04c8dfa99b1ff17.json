{"ast":null,"code":"var ObserversMixin = {\n  extend: function (proto) {\n    var this$1 = this;\n\n    for (var method in this$1) {\n      if (method !== \"extend\") {\n        proto[method] = this$1[method];\n      }\n    }\n  },\n  observers: function () {\n    this._observers = this._observers || [];\n    return this._observers;\n  },\n  addObserver: function (element) {\n    if (!this._observers) {\n      this._observers = [element];\n    } else {\n      this._observers.push(element);\n    }\n\n    return this;\n  },\n  removeObserver: function (element) {\n    var observers = this.observers();\n    var index = observers.indexOf(element);\n\n    if (index !== -1) {\n      observers.splice(index, 1);\n    }\n\n    return this;\n  },\n  trigger: function (methodName, event) {\n    var observers = this._observers;\n\n    if (observers && !this._suspended) {\n      for (var idx = 0; idx < observers.length; idx++) {\n        var observer = observers[idx];\n\n        if (observer[methodName]) {\n          observer[methodName](event);\n        }\n      }\n    }\n\n    return this;\n  },\n  optionsChange: function (e) {\n    if (e === void 0) e = {};\n    e.element = this;\n    this.trigger(\"optionsChange\", e);\n  },\n  geometryChange: function () {\n    this.trigger(\"geometryChange\", {\n      element: this\n    });\n  },\n  suspend: function () {\n    this._suspended = (this._suspended || 0) + 1;\n    return this;\n  },\n  resume: function () {\n    this._suspended = Math.max((this._suspended || 0) - 1, 0);\n    return this;\n  },\n  _observerField: function (field, value) {\n    if (this[field]) {\n      this[field].removeObserver(this);\n    }\n\n    this[field] = value;\n    value.addObserver(this);\n  }\n};\nexport default ObserversMixin;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/mixins/observers-mixin.js"],"names":["ObserversMixin","extend","proto","this$1","method","observers","_observers","addObserver","element","push","removeObserver","index","indexOf","splice","trigger","methodName","event","_suspended","idx","length","observer","optionsChange","e","geometryChange","suspend","resume","Math","max","_observerField","field","value"],"mappings":"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","sourcesContent":["\nvar ObserversMixin = {\n    extend: function(proto) {\n        var this$1 = this;\n\n        for (var method in this$1) {\n            if (method !== \"extend\") {\n                proto[method] = this$1[method];\n            }\n        }\n    },\n\n    observers: function() {\n        this._observers = this._observers || [];\n        return this._observers;\n    },\n\n    addObserver: function(element) {\n        if (!this._observers) {\n            this._observers = [ element ];\n        } else {\n            this._observers.push(element);\n        }\n        return this;\n    },\n\n    removeObserver: function(element) {\n        var observers = this.observers();\n        var index = observers.indexOf(element);\n        if (index !== -1) {\n            observers.splice(index, 1);\n        }\n        return this;\n    },\n\n    trigger: function(methodName, event) {\n        var observers = this._observers;\n\n        if (observers && !this._suspended) {\n            for (var idx = 0; idx < observers.length; idx++) {\n                var observer = observers[idx];\n                if (observer[methodName]) {\n                    observer[methodName](event);\n                }\n            }\n        }\n        return this;\n    },\n\n    optionsChange: function(e) {\n        if ( e === void 0 ) e = {};\n\n        e.element = this;\n        this.trigger(\"optionsChange\", e);\n    },\n\n    geometryChange: function() {\n        this.trigger(\"geometryChange\", {\n            element: this\n        });\n    },\n\n    suspend: function() {\n        this._suspended = (this._suspended || 0) + 1;\n        return this;\n    },\n\n    resume: function() {\n        this._suspended = Math.max((this._suspended || 0) - 1, 0);\n        return this;\n    },\n\n    _observerField: function(field, value) {\n        if (this[field]) {\n            this[field].removeObserver(this);\n        }\n        this[field] = value;\n        value.addObserver(this);\n    }\n};\n\nexport default ObserversMixin;"]},"metadata":{},"sourceType":"module"}