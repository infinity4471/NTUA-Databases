{"ast":null,"code":"var _a;\n\nimport { CenturyViewService } from './CenturyViewService';\nimport { DecadeViewService } from './DecadeViewService';\nimport { MonthViewService } from './MonthViewService';\nimport { YearViewService } from './YearViewService';\nimport { CalendarViewEnum } from '../models/CalendarViewEnum';\nvar services = (_a = {}, _a[CalendarViewEnum.month] = MonthViewService, _a[CalendarViewEnum.year] = YearViewService, _a[CalendarViewEnum.decade] = DecadeViewService, _a[CalendarViewEnum.century] = CenturyViewService, _a);\n\nvar viewOffset = function (view, offset) {\n  var candidate = CalendarViewEnum[CalendarViewEnum[view + offset]];\n  return candidate !== undefined ? candidate : view;\n};\n/**\n * @hidden\n */\n\n\nvar BusViewService =\n/** @class */\nfunction () {\n  function BusViewService(onViewChanged) {\n    this.bottom = CalendarViewEnum.month;\n    this.top = CalendarViewEnum.century;\n    this.onViewChanged = onViewChanged;\n  }\n\n  BusViewService.prototype.configure = function (bottom, top) {\n    this.bottom = bottom;\n    this.top = top;\n  };\n\n  BusViewService.prototype.service = function (view, intl) {\n    return new services[\"\" + view](intl);\n  };\n\n  BusViewService.prototype.moveDown = function (view, event) {\n    this.move(view, -1, event);\n  };\n\n  BusViewService.prototype.moveUp = function (view, event) {\n    this.move(view, 1, event);\n  };\n\n  BusViewService.prototype.moveToBottom = function (activeView) {\n    if (activeView === this.bottom) {\n      return;\n    }\n\n    this.onViewChanged({\n      view: this.bottom\n    });\n  };\n\n  BusViewService.prototype.canMoveDown = function (view) {\n    return this.bottom < view;\n  };\n\n  BusViewService.prototype.canMoveUp = function (view) {\n    return view < this.top;\n  };\n\n  BusViewService.prototype.clamp = function (view) {\n    if (view < this.bottom) {\n      return this.bottom;\n    }\n\n    if (view > this.top) {\n      return this.top;\n    }\n\n    return view;\n  };\n\n  BusViewService.prototype.move = function (view, offset, event) {\n    var candidate = this.clamp(viewOffset(view, offset));\n\n    if (candidate === view) {\n      return;\n    }\n\n    this.onViewChanged({\n      view: candidate\n    }, event);\n  };\n\n  return BusViewService;\n}();\n\nexport { BusViewService };","map":{"version":3,"sources":["../../../../src/calendar/services/BusViewService.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var _a;\nimport { CenturyViewService } from './CenturyViewService';\nimport { DecadeViewService } from './DecadeViewService';\nimport { MonthViewService } from './MonthViewService';\nimport { YearViewService } from './YearViewService';\nimport { CalendarViewEnum } from '../models/CalendarViewEnum';\nvar services = (_a = {},\n    _a[CalendarViewEnum.month] = MonthViewService,\n    _a[CalendarViewEnum.year] = YearViewService,\n    _a[CalendarViewEnum.decade] = DecadeViewService,\n    _a[CalendarViewEnum.century] = CenturyViewService,\n    _a);\nvar viewOffset = function (view, offset) {\n    var candidate = CalendarViewEnum[CalendarViewEnum[view + offset]];\n    return candidate !== undefined ? candidate : view;\n};\n/**\n * @hidden\n */\nvar BusViewService = /** @class */ (function () {\n    function BusViewService(onViewChanged) {\n        this.bottom = CalendarViewEnum.month;\n        this.top = CalendarViewEnum.century;\n        this.onViewChanged = onViewChanged;\n    }\n    BusViewService.prototype.configure = function (bottom, top) {\n        this.bottom = bottom;\n        this.top = top;\n    };\n    BusViewService.prototype.service = function (view, intl) {\n        return new services[\"\" + view](intl);\n    };\n    BusViewService.prototype.moveDown = function (view, event) {\n        this.move(view, -1, event);\n    };\n    BusViewService.prototype.moveUp = function (view, event) {\n        this.move(view, 1, event);\n    };\n    BusViewService.prototype.moveToBottom = function (activeView) {\n        if (activeView === this.bottom) {\n            return;\n        }\n        this.onViewChanged({ view: this.bottom });\n    };\n    BusViewService.prototype.canMoveDown = function (view) {\n        return this.bottom < view;\n    };\n    BusViewService.prototype.canMoveUp = function (view) {\n        return view < this.top;\n    };\n    BusViewService.prototype.clamp = function (view) {\n        if (view < this.bottom) {\n            return this.bottom;\n        }\n        if (view > this.top) {\n            return this.top;\n        }\n        return view;\n    };\n    BusViewService.prototype.move = function (view, offset, event) {\n        var candidate = this.clamp(viewOffset(view, offset));\n        if (candidate === view) {\n            return;\n        }\n        this.onViewChanged({ view: candidate }, event);\n    };\n    return BusViewService;\n}());\nexport { BusViewService };\n//# sourceMappingURL=BusViewService.js.map"]},"metadata":{},"sourceType":"module"}