{"ast":null,"code":"/**\n * @hidden\n */\nvar update = function (arr, idx, value) {\n  return arr.slice(0, idx + 1).concat(arr.slice(idx + 1).map(function (x) {\n    return x + value;\n  }));\n};\n/**\n * @hidden\n */\n\n\nvar RowHeightService =\n/** @class */\nfunction () {\n  function RowHeightService(total, rowHeight, detailRowHeight) {\n    if (total === void 0) {\n      total = 0;\n    }\n\n    this.total = total;\n    this.rowHeight = rowHeight;\n    this.detailRowHeight = detailRowHeight;\n    this.offsets = [];\n    this.heights = [];\n    var agg = 0;\n\n    for (var idx = 0; idx < total; idx++) {\n      this.offsets.push(agg);\n      agg += rowHeight;\n      this.heights.push(rowHeight);\n    }\n  }\n\n  RowHeightService.prototype.height = function (rowIndex) {\n    return this.heights[rowIndex];\n  };\n\n  RowHeightService.prototype.expandDetail = function (rowIndex) {\n    if (this.height(rowIndex) === this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight);\n    }\n  };\n\n  RowHeightService.prototype.collapseDetail = function (rowIndex) {\n    if (this.height(rowIndex) > this.rowHeight) {\n      this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n    }\n  };\n\n  RowHeightService.prototype.index = function (position) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      if (position === this.offsets[i]) {\n        return i;\n      }\n\n      if (position < this.offsets[i]) {\n        return i - 1;\n      }\n    }\n\n    return this.total - 1;\n  };\n\n  RowHeightService.prototype.offset = function (rowIndex) {\n    return this.offsets[rowIndex];\n  };\n\n  RowHeightService.prototype.totalHeight = function () {\n    return this.heights.reduce(function (prev, curr) {\n      return prev + curr;\n    }, 0);\n  };\n\n  RowHeightService.prototype.updateRowHeight = function (rowIndex, value) {\n    this.heights[rowIndex] += value;\n    this.offsets = update(this.offsets, rowIndex, value);\n  };\n\n  return RowHeightService;\n}();\n\nexport { RowHeightService };","map":{"version":3,"sources":["../../../../src/virtualization/services/RowHeightService.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @hidden\n */\nvar update = function (arr, idx, value) { return (arr.slice(0, idx + 1).concat((arr.slice(idx + 1).map(function (x) { return x + value; })))); };\n/**\n * @hidden\n */\nvar RowHeightService = /** @class */ (function () {\n    function RowHeightService(total, rowHeight, detailRowHeight) {\n        if (total === void 0) { total = 0; }\n        this.total = total;\n        this.rowHeight = rowHeight;\n        this.detailRowHeight = detailRowHeight;\n        this.offsets = [];\n        this.heights = [];\n        var agg = 0;\n        for (var idx = 0; idx < total; idx++) {\n            this.offsets.push(agg);\n            agg += rowHeight;\n            this.heights.push(rowHeight);\n        }\n    }\n    RowHeightService.prototype.height = function (rowIndex) {\n        return this.heights[rowIndex];\n    };\n    RowHeightService.prototype.expandDetail = function (rowIndex) {\n        if (this.height(rowIndex) === this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight);\n        }\n    };\n    RowHeightService.prototype.collapseDetail = function (rowIndex) {\n        if (this.height(rowIndex) > this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n        }\n    };\n    RowHeightService.prototype.index = function (position) {\n        for (var i = 0; i < this.offsets.length; i++) {\n            if (position === this.offsets[i]) {\n                return i;\n            }\n            if (position < this.offsets[i]) {\n                return i - 1;\n            }\n        }\n        return this.total - 1;\n    };\n    RowHeightService.prototype.offset = function (rowIndex) {\n        return this.offsets[rowIndex];\n    };\n    RowHeightService.prototype.totalHeight = function () {\n        return this.heights.reduce(function (prev, curr) { return prev + curr; }, 0);\n    };\n    RowHeightService.prototype.updateRowHeight = function (rowIndex, value) {\n        this.heights[rowIndex] += value;\n        this.offsets = update(this.offsets, rowIndex, value);\n    };\n    return RowHeightService;\n}());\nexport { RowHeightService };\n//# sourceMappingURL=RowHeightService.js.map"]},"metadata":{},"sourceType":"module"}