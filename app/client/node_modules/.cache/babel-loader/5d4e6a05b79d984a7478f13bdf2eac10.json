{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nvar compareProps = function (x, y) {\n  var xProps = Object.getOwnPropertyNames(x);\n  var yProps = Object.getOwnPropertyNames(y);\n\n  if (xProps.length !== yProps.length) {\n    return false;\n  }\n\n  for (var i = 0; i < xProps.length; i++) {\n    var propName = xProps[i];\n\n    if (x[propName] !== y[propName]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * The `CalendarCell` component is internally used for rendering the items in the current view. Also be used as a custom `cell` of the [Calendar]({% slug api_dateinputs_calendarprops %}#toc-cell) and the [MultiViewCalendar]({% slug api_dateinputs_multiviewcalendarprops %}#toc-cell).\n *\n * * [Customizing the cells inside the Calendar view]({% slug custom_rendering_calendar %}#toc-cells-inside-the-view)\n * * [Customizing the cells inside the MultiViewCalendar view]({% slug custom_rendering_multiviewcalendar %}#toc-cells-inside-the-view)\n */\n\n\nvar CalendarCell =\n/** @class */\nfunction (_super) {\n  __extends(CalendarCell, _super);\n\n  function CalendarCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // tslint:enable:max-line-length\n\n\n    _this.handleClick = function (event) {\n      var _a = _this.props,\n          onClick = _a.onClick,\n          value = _a.value;\n\n      if (onClick) {\n        onClick.call(undefined, value, event);\n      }\n    };\n\n    _this.handleMouseEnter = function () {\n      var _a = _this.props,\n          onMouseEnter = _a.onMouseEnter,\n          value = _a.value;\n\n      if (onMouseEnter) {\n        onMouseEnter.call(undefined, value);\n      }\n    };\n\n    _this.handleMouseLeave = function () {\n      var _a = _this.props,\n          onMouseLeave = _a.onMouseLeave,\n          value = _a.value;\n\n      if (onMouseLeave) {\n        onMouseLeave.call(undefined, value);\n      }\n    };\n\n    return _this;\n  } // Manually checking if the component needs an update\n  // due to date object being compared by instance\n  // and new Date object is created\n  // every time and fails the shallow compare of the React.PureComponent.\n\n  /**\n   * @hidden\n   */\n\n\n  CalendarCell.prototype.shouldComponentUpdate = function (nextProps) {\n    var _a = this.props,\n        value = _a.value,\n        props = __rest(_a, [\"value\"]);\n\n    var newValue = nextProps.value,\n        newProps = __rest(nextProps, [\"value\"]);\n\n    var valueEqual = !(value && newValue) || value.getTime() === newValue.getTime();\n    return !(valueEqual && compareProps(props, newProps));\n  }; // tslint:disable:max-line-length\n\n  /**\n   * @return\n   * Returns a `<td />` element with a `<span className=\"k-link\" />` inside to apply the styles. The text inside is the [`formattedValue`]({% slug api_dateinputs_calendarcellprops %}#toc-formattedvalue) of the `cell`.\n   */\n\n\n  CalendarCell.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        formattedValue = _a.formattedValue,\n        isWeekend = _a.isWeekend,\n        isFocused = _a.isFocused,\n        isInRange = _a.isInRange,\n        isSelected = _a.isSelected,\n        isRangeStart = _a.isRangeStart,\n        isRangeMid = _a.isRangeMid,\n        isRangeEnd = _a.isRangeEnd,\n        isRangeSplitStart = _a.isRangeSplitStart,\n        isRangeSplitEnd = _a.isRangeSplitEnd,\n        isToday = _a.isToday,\n        isDisabled = _a.isDisabled,\n        view = _a.view,\n        value = _a.value,\n        other = __rest(_a, [\"className\", \"formattedValue\", \"isWeekend\", \"isFocused\", \"isInRange\", \"isSelected\", \"isRangeStart\", \"isRangeMid\", \"isRangeEnd\", \"isRangeSplitStart\", \"isRangeSplitEnd\", \"isToday\", \"isDisabled\", \"view\", \"value\"]);\n\n    var isEndActive = this.props.activeRangeEnd === 'end' && isRangeEnd;\n    var isStartActive = this.props.activeRangeEnd === 'start' && isRangeStart;\n    var rootClassName = classNames({\n      'k-range-end': isRangeEnd,\n      'k-range-mid': isRangeMid,\n      'k-range-split-end': isRangeSplitEnd,\n      'k-range-split-start': isRangeSplitStart,\n      'k-range-start': isRangeStart,\n      'k-state-active': isStartActive || isEndActive,\n      'k-state-pending-focus': isFocused,\n      'k-state-selected': isSelected || isRangeStart || isRangeEnd,\n      'k-today': isToday,\n      'k-weekend': isWeekend,\n      'k-state-disabled': isDisabled\n    }, className);\n    return React.createElement(\"td\", __assign({}, other, {\n      className: rootClassName,\n      onClick: this.handleClick,\n      onMouseEnter: this.handleMouseEnter,\n      onMouseLeave: this.handleMouseLeave\n    }), React.createElement(\"span\", {\n      className: \"k-link\"\n    }, this.props.children));\n  };\n\n  return CalendarCell;\n}(React.Component);\n\nexport { CalendarCell };","map":{"version":3,"sources":["../../../../src/calendar/components/CalendarCell.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\nvar compareProps = function (x, y) {\n    var xProps = Object.getOwnPropertyNames(x);\n    var yProps = Object.getOwnPropertyNames(y);\n    if (xProps.length !== yProps.length) {\n        return false;\n    }\n    for (var i = 0; i < xProps.length; i++) {\n        var propName = xProps[i];\n        if (x[propName] !== y[propName]) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * The `CalendarCell` component is internally used for rendering the items in the current view. Also be used as a custom `cell` of the [Calendar]({% slug api_dateinputs_calendarprops %}#toc-cell) and the [MultiViewCalendar]({% slug api_dateinputs_multiviewcalendarprops %}#toc-cell).\n *\n * * [Customizing the cells inside the Calendar view]({% slug custom_rendering_calendar %}#toc-cells-inside-the-view)\n * * [Customizing the cells inside the MultiViewCalendar view]({% slug custom_rendering_multiviewcalendar %}#toc-cells-inside-the-view)\n */\nvar CalendarCell = /** @class */ (function (_super) {\n    __extends(CalendarCell, _super);\n    function CalendarCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // tslint:enable:max-line-length\n        _this.handleClick = function (event) {\n            var _a = _this.props, onClick = _a.onClick, value = _a.value;\n            if (onClick) {\n                onClick.call(undefined, value, event);\n            }\n        };\n        _this.handleMouseEnter = function () {\n            var _a = _this.props, onMouseEnter = _a.onMouseEnter, value = _a.value;\n            if (onMouseEnter) {\n                onMouseEnter.call(undefined, value);\n            }\n        };\n        _this.handleMouseLeave = function () {\n            var _a = _this.props, onMouseLeave = _a.onMouseLeave, value = _a.value;\n            if (onMouseLeave) {\n                onMouseLeave.call(undefined, value);\n            }\n        };\n        return _this;\n    }\n    // Manually checking if the component needs an update\n    // due to date object being compared by instance\n    // and new Date object is created\n    // every time and fails the shallow compare of the React.PureComponent.\n    /**\n     * @hidden\n     */\n    CalendarCell.prototype.shouldComponentUpdate = function (nextProps) {\n        var _a = this.props, value = _a.value, props = __rest(_a, [\"value\"]);\n        var newValue = nextProps.value, newProps = __rest(nextProps, [\"value\"]);\n        var valueEqual = !(value && newValue) || value.getTime() === newValue.getTime();\n        return !(valueEqual && compareProps(props, newProps));\n    };\n    // tslint:disable:max-line-length\n    /**\n     * @return\n     * Returns a `<td />` element with a `<span className=\"k-link\" />` inside to apply the styles. The text inside is the [`formattedValue`]({% slug api_dateinputs_calendarcellprops %}#toc-formattedvalue) of the `cell`.\n     */\n    CalendarCell.prototype.render = function () {\n        var _a = this.props, className = _a.className, formattedValue = _a.formattedValue, isWeekend = _a.isWeekend, isFocused = _a.isFocused, isInRange = _a.isInRange, isSelected = _a.isSelected, isRangeStart = _a.isRangeStart, isRangeMid = _a.isRangeMid, isRangeEnd = _a.isRangeEnd, isRangeSplitStart = _a.isRangeSplitStart, isRangeSplitEnd = _a.isRangeSplitEnd, isToday = _a.isToday, isDisabled = _a.isDisabled, view = _a.view, value = _a.value, other = __rest(_a, [\"className\", \"formattedValue\", \"isWeekend\", \"isFocused\", \"isInRange\", \"isSelected\", \"isRangeStart\", \"isRangeMid\", \"isRangeEnd\", \"isRangeSplitStart\", \"isRangeSplitEnd\", \"isToday\", \"isDisabled\", \"view\", \"value\"]);\n        var isEndActive = this.props.activeRangeEnd === 'end' && isRangeEnd;\n        var isStartActive = this.props.activeRangeEnd === 'start' && isRangeStart;\n        var rootClassName = classNames({\n            'k-range-end': isRangeEnd,\n            'k-range-mid': isRangeMid,\n            'k-range-split-end': isRangeSplitEnd,\n            'k-range-split-start': isRangeSplitStart,\n            'k-range-start': isRangeStart,\n            'k-state-active': isStartActive || isEndActive,\n            'k-state-pending-focus': isFocused,\n            'k-state-selected': isSelected || isRangeStart || isRangeEnd,\n            'k-today': isToday,\n            'k-weekend': isWeekend,\n            'k-state-disabled': isDisabled\n        }, className);\n        return (React.createElement(\"td\", __assign({}, other, { className: rootClassName, onClick: this.handleClick, onMouseEnter: this.handleMouseEnter, onMouseLeave: this.handleMouseLeave }),\n            React.createElement(\"span\", { className: \"k-link\" }, this.props.children)));\n    };\n    return CalendarCell;\n}(React.Component));\nexport { CalendarCell };\n//# sourceMappingURL=CalendarCell.js.map"]},"metadata":{},"sourceType":"module"}