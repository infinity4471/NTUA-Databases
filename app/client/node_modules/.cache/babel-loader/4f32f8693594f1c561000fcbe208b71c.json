{"ast":null,"code":"var _jsxFileName = \"/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/Tables/TransactionTable.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 56\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 52\n    }\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nconst TransactionTable = data => {\n  const rows = Object.values(data)[0];\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [page, setPage] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    /*if( parseInt( event.target.value, 10 ) >= rows.length ) {\n    \tsetRowsPerPage( rows.length )\n    }*/\n\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    style: {\n      width: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    className: \"Table\",\n    \"aria-label\": \"simple table\",\n    style: {\n      width: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 3\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }\n  }, \"Date-Time\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 3\n    }\n  }, \"Payment Method\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }\n  }, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(dict => /*#__PURE__*/React.createElement(TableRow, {\n    key: dict.Total_amount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }\n  }, dict.Total_amount), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }\n  }, dict.Date_Time), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }\n  }, dict.Payment_method))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }\n  })))));\n};\n\nexport { TransactionTable };","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/Tables/TransactionTable.js"],"names":["React","makeStyles","useTheme","PropTypes","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","useStyles1","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","number","isRequired","func","TransactionTable","data","rows","Object","values","setRowsPerPage","useState","setPage","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","min","length","width","label","inputProps","native","slice","map","dict","Total_amount","Date_Time","Payment_method","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,UAAU,GAAGhB,UAAU,CAAEiB,KAAD,KAAY;AACzCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,UAAU,EAAE,CADP;AAELC,IAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,GAAd;AAFP;AADmC,CAAZ,CAAD,CAA7B;;AAOA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AACtC,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAMC,KAAK,GAAGhB,QAAQ,EAAtB;AACA,QAAM;AAAEwB,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,MAA6CL,KAAnD;;AAEA,QAAMM,0BAA0B,GAAIC,KAAD,IAAW;AAC7CF,IAAAA,YAAY,CAACE,KAAD,EAAQ,CAAR,CAAZ;AACA,GAFD;;AAIA,QAAMC,qBAAqB,GAAID,KAAD,IAAW;AACxCF,IAAAA,YAAY,CAACE,KAAD,EAAQJ,IAAI,GAAG,CAAf,CAAZ;AACA,GAFD;;AAIA,QAAMM,qBAAqB,GAAIF,KAAD,IAAW;AACxCF,IAAAA,YAAY,CAACE,KAAD,EAAQJ,IAAI,GAAG,CAAf,CAAZ;AACA,GAFD;;AAIA,QAAMO,yBAAyB,GAAIH,KAAD,IAAW;AAC5CF,IAAAA,YAAY,CAACE,KAAD,EAAQI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,IAAL,CAAUX,KAAK,GAAGE,WAAlB,IAAiC,CAA7C,CAAR,CAAZ;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AACA,IAAA,OAAO,EAAEW,0BADT;AAEA,IAAA,QAAQ,EAAEH,IAAI,KAAK,CAFnB;AAGA,kBAAW,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKCT,KAAK,CAACoB,SAAN,KAAoB,KAApB,gBAA4B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,gBAA+C,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALhD,CADA,eAQA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEN,qBAArB;AAA4C,IAAA,QAAQ,EAAEL,IAAI,KAAK,CAA/D;AAAkE,kBAAW,eAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCT,KAAK,CAACoB,SAAN,KAAoB,KAApB,gBAA4B,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,gBAAqD,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtD,CARA,eAWA,oBAAC,UAAD;AACA,IAAA,OAAO,EAAEL,qBADT;AAEA,IAAA,QAAQ,EAAEN,IAAI,IAAIQ,IAAI,CAACE,IAAL,CAAUX,KAAK,GAAGE,WAAlB,IAAiC,CAFnD;AAGA,kBAAW,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKCV,KAAK,CAACoB,SAAN,KAAoB,KAApB,gBAA4B,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,gBAAoD,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALrD,CAXA,eAkBA,oBAAC,UAAD;AACA,IAAA,OAAO,EAAEJ,yBADT;AAEA,IAAA,QAAQ,EAAEP,IAAI,IAAIQ,IAAI,CAACE,IAAL,CAAUX,KAAK,GAAGE,WAAlB,IAAiC,CAFnD;AAGA,kBAAW,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKCV,KAAK,CAACoB,SAAN,KAAoB,KAApB,gBAA4B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,gBAAgD,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALjD,CAlBA,CADD;AA4BA;;AAEDf,sBAAsB,CAACgB,SAAvB,GAAmC;AAClCb,EAAAA,KAAK,EAAEvB,SAAS,CAACqC,MAAV,CAAiBC,UADU;AAElCZ,EAAAA,YAAY,EAAE1B,SAAS,CAACuC,IAAV,CAAeD,UAFK;AAGlCd,EAAAA,IAAI,EAAExB,SAAS,CAACqC,MAAV,CAAiBC,UAHW;AAIlCb,EAAAA,WAAW,EAAEzB,SAAS,CAACqC,MAAV,CAAiBC;AAJI,CAAnC;;AAQA,MAAME,gBAAgB,GAAIC,IAAD,IAAU;AAClC,QAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAeH,IAAf,EAAuB,CAAvB,CAAb;AACA,QAAM,CAAChB,WAAD,EAAcoB,cAAd,IAAgChD,KAAK,CAACiD,QAAN,CAAe,CAAf,CAAtC;AACA,QAAM,CAACtB,IAAD,EAAOuB,OAAP,IAAkBlD,KAAK,CAACiD,QAAN,CAAe,CAAf,CAAxB;;AACA,QAAME,gBAAgB,GAAG,CAACpB,KAAD,EAAQqB,OAAR,KAAoB;AAC5CF,IAAAA,OAAO,CAACE,OAAD,CAAP;AACA,GAFD;;AAIA,QAAMC,uBAAuB,GAAItB,KAAD,IAAW;AAC1CiB,IAAAA,cAAc,CAACM,QAAQ,CAACvB,KAAK,CAACwB,MAAN,CAAaC,KAAd,EAAqB,EAArB,CAAT,CAAd;AACA;;;;AAGAN,IAAAA,OAAO,CAAC,CAAD,CAAP;AACA,GAND;;AAQA,QAAMO,SAAS,GAAG7B,WAAW,GAAGO,IAAI,CAACuB,GAAL,CAAS9B,WAAT,EAAsBiB,IAAI,CAACc,MAAL,GAAchC,IAAI,GAAGC,WAA3C,CAAhC;AACA,sBACC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAElB,KAA3B;AAAkC,IAAA,KAAK,EAAE;AAACkD,MAAAA,KAAK,EAAE;AAAR,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,eAAD;AACA,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBL,MAAAA,KAAK,EAAE,CAAC;AAAxB,KAAZ,CADpB;AAEA,IAAA,OAAO,EAAE,CAFT;AAGA,IAAA,KAAK,EAAEX,IAAI,CAACc,MAHZ;AAIA,IAAA,WAAW,EAAE/B,WAJb;AAKA,IAAA,IAAI,EAAED,IALN;AAMA,IAAA,WAAW,EAAE;AACZmC,MAAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OADA;AAEXC,MAAAA,MAAM,EAAE;AAFG,KANb;AAUA,IAAA,YAAY,EAAEZ,gBAVd;AAWA,IAAA,mBAAmB,EAAEE,uBAXrB;AAYA,IAAA,gBAAgB,EAAE9B,sBAZlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAgBA,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,kBAAW,cAApC;AAAmD,IAAA,KAAK,EAAE;AAACqC,MAAAA,KAAK,EAAE;AAAR,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,eAGA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHA,CADA,CAFA,eASA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAAChC,WAAW,GAAG,CAAd,GAAkBiB,IAAI,CAACmB,KAAL,CAAWrC,IAAI,GAAGC,WAAlB,EAA+BD,IAAI,GAAGC,WAAP,GAAqBA,WAApD,CAAlB,GAAqFiB,IAAtF,EAA4FoB,GAA5F,CAAiGC,IAAD,iBAChG,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,IAArB;AAA0B,IAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,IAAI,CAACC,YADN,CADA,eAIA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,IAAI,CAACE,SAA9B,CAJA,eAKA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,IAAI,CAACG,cAA9B,CALA,CADA,CADD,EAUCZ,SAAS,GAAG,CAAZ,iBACA,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE,KAAKb;AAAf,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAXD,CATA,CAhBA,CADD;AA8CA,CA/DD;;AAiEA,SAAQd,gBAAR","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst useStyles1 = makeStyles((theme) => ({\n\troot: {\n\t\tflexShrink: 0,\n\t\tmarginLeft: theme.spacing(2.5),\n\t},\n}));\n\nfunction TablePaginationActions(props) {\n\tconst classes = useStyles1();\n\tconst theme = useTheme();\n\tconst { count, page, rowsPerPage, onChangePage } = props;\n\n\tconst handleFirstPageButtonClick = (event) => {\n\t\tonChangePage(event, 0);\n\t};\n\n\tconst handleBackButtonClick = (event) => {\n\t\tonChangePage(event, page - 1);\n\t};\n\n\tconst handleNextButtonClick = (event) => {\n\t\tonChangePage(event, page + 1);\n\t};\n\n\tconst handleLastPageButtonClick = (event) => {\n\t\tonChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t<IconButton\n\t\tonClick={handleFirstPageButtonClick}\n\t\tdisabled={page === 0}\n\t\taria-label=\"first page\"\n\t\t>\n\t\t{theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n\t\t</IconButton>\n\t\t<IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n\t\t{theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n\t\t</IconButton>\n\t\t<IconButton\n\t\tonClick={handleNextButtonClick}\n\t\tdisabled={page >= Math.ceil(count / rowsPerPage) - 1}\n\t\taria-label=\"next page\"\n\t\t>\n\t\t{theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n\t\t</IconButton>\n\t\t<IconButton\n\t\tonClick={handleLastPageButtonClick}\n\t\tdisabled={page >= Math.ceil(count / rowsPerPage) - 1}\n\t\taria-label=\"last page\"\n\t\t>\n\t\t{theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n\t\t</IconButton>\n\t\t</div>\n\t);\n}\n\nTablePaginationActions.propTypes = {\n\tcount: PropTypes.number.isRequired,\n\tonChangePage: PropTypes.func.isRequired,\n\tpage: PropTypes.number.isRequired,\n\trowsPerPage: PropTypes.number.isRequired,\n};\n\n\nconst TransactionTable = (data) => {\n\tconst rows = Object.values( data )[ 0 ]\n\tconst [rowsPerPage, setRowsPerPage] = React.useState(5);\n\tconst [page, setPage] = React.useState(0);\n\tconst handleChangePage = (event, newPage) => {\n\t\tsetPage(newPage);\n\t};\n\n\tconst handleChangeRowsPerPage = (event) => {\n\t\tsetRowsPerPage(parseInt(event.target.value, 10));\n\t\t/*if( parseInt( event.target.value, 10 ) >= rows.length ) {\n\t\t\tsetRowsPerPage( rows.length )\n\t\t}*/\n\t\tsetPage(0);\n\t};\n\n\tconst emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\treturn (\n\t\t<TableContainer component={Paper} style={{width: 500}}>\n\n\t\t<TablePagination\n\t\trowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n\t\tcolSpan={3}\n\t\tcount={rows.length}\n\t\trowsPerPage={rowsPerPage}\n\t\tpage={page}\n\t\tSelectProps={{\n\t\t\tinputProps: { 'aria-label': 'rows per page' },\n\t\t\t\tnative: true,\n\t\t}}\n\t\tonChangePage={handleChangePage}\n\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\n\t\tActionsComponent={TablePaginationActions}\n\t\t/>\n\t\t<Table className=\"Table\" aria-label=\"simple table\" style={{width: 500}}>\n\n\t\t<TableHead>\n\t\t<TableRow>\n\t\t<TableCell align=\"left\">Amount</TableCell>\n\t\t<TableCell align=\"left\">Date-Time</TableCell>\n\t\t<TableCell align=\"left\">Payment Method</TableCell>\n\t\t</TableRow>\n\t\t</TableHead>\n\t\t<TableBody>\n\t\t{(rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map((dict) => (\n\t\t\t<TableRow key={dict.Total_amount}>\n\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t{dict.Total_amount}\n\t\t\t</TableCell>\n\t\t\t<TableCell align=\"left\">{dict.Date_Time}</TableCell>\n\t\t\t<TableCell align=\"left\">{dict.Payment_method}</TableCell>\n\t\t\t</TableRow>\n\t\t))}\n\t\t{emptyRows > 0 && (\n\t\t\t<TableRow style={{ height: 53 * emptyRows }}>\n\t\t\t<TableCell colSpan={6} />\n\t\t\t</TableRow>\n\t\t)}\n\n\t\t</TableBody>\n\t\t</Table>\n\t\t</TableContainer>\n\t);\n}\n\nexport {TransactionTable};\n\n"]},"metadata":{},"sourceType":"module"}