{"ast":null,"code":"import Point from '../geometry/point';\nimport translateToPoint from './translate-to-point';\nexport default function stackElements(elements, stackAxis, otherAxis, sizeField) {\n  if (elements.length > 1) {\n    var origin = new Point();\n    var previousBBox = elements[0].bbox;\n\n    for (var idx = 1; idx < elements.length; idx++) {\n      var element = elements[idx].element;\n      var bbox = elements[idx].bbox;\n      origin[stackAxis] = previousBBox.origin[stackAxis] + previousBBox.size[sizeField];\n      origin[otherAxis] = bbox.origin[otherAxis];\n      translateToPoint(origin, bbox, element);\n      bbox.origin[stackAxis] = origin[stackAxis];\n      previousBBox = bbox;\n    }\n  }\n}","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/alignment/stack-elements.js"],"names":["Point","translateToPoint","stackElements","elements","stackAxis","otherAxis","sizeField","length","origin","previousBBox","bbox","idx","element","size"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,mBAAlB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AAEA,eAAe,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,SAAjC,EAA4CC,SAA5C,EAAuDC,SAAvD,EAAkE;AAC7E,MAAIH,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB;AACrB,QAAIC,MAAM,GAAG,IAAIR,KAAJ,EAAb;AACA,QAAIS,YAAY,GAAGN,QAAQ,CAAC,CAAD,CAAR,CAAYO,IAA/B;;AAEA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGR,QAAQ,CAACI,MAAjC,EAAyCI,GAAG,EAA5C,EAAgD;AAC5C,UAAIC,OAAO,GAAGT,QAAQ,CAACQ,GAAD,CAAR,CAAcC,OAA5B;AACA,UAAIF,IAAI,GAAGP,QAAQ,CAACQ,GAAD,CAAR,CAAcD,IAAzB;AACAF,MAAAA,MAAM,CAACJ,SAAD,CAAN,GAAoBK,YAAY,CAACD,MAAb,CAAoBJ,SAApB,IAAiCK,YAAY,CAACI,IAAb,CAAkBP,SAAlB,CAArD;AACAE,MAAAA,MAAM,CAACH,SAAD,CAAN,GAAoBK,IAAI,CAACF,MAAL,CAAYH,SAAZ,CAApB;AACAJ,MAAAA,gBAAgB,CAACO,MAAD,EAASE,IAAT,EAAeE,OAAf,CAAhB;AACAF,MAAAA,IAAI,CAACF,MAAL,CAAYJ,SAAZ,IAAyBI,MAAM,CAACJ,SAAD,CAA/B;AACAK,MAAAA,YAAY,GAAGC,IAAf;AACH;AACJ;AACJ","sourcesContent":["import Point from '../geometry/point';\nimport translateToPoint from './translate-to-point';\n\nexport default function stackElements(elements, stackAxis, otherAxis, sizeField) {\n    if (elements.length > 1) {\n        var origin = new Point();\n        var previousBBox = elements[0].bbox;\n\n        for (var idx = 1; idx < elements.length; idx++) {\n            var element = elements[idx].element;\n            var bbox = elements[idx].bbox;\n            origin[stackAxis] = previousBBox.origin[stackAxis] + previousBBox.size[sizeField];\n            origin[otherAxis] = bbox.origin[otherAxis];\n            translateToPoint(origin, bbox, element);\n            bbox.origin[stackAxis] = origin[stackAxis];\n            previousBBox = bbox;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}