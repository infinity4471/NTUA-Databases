{"ast":null,"code":"import Node from './node';\nimport Traversable from '../mixins/traversable';\nimport NODE_MAP from './node-map';\n\nvar GroupNode = function (Node) {\n  function GroupNode() {\n    Node.apply(this, arguments);\n  }\n\n  if (Node) GroupNode.__proto__ = Node;\n  GroupNode.prototype = Object.create(Node && Node.prototype);\n  GroupNode.prototype.constructor = GroupNode;\n\n  GroupNode.prototype.renderTo = function renderTo(ctx) {\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n    this.setTransform(ctx);\n    this.setClip(ctx);\n    this.setOpacity(ctx);\n    var childNodes = this.childNodes;\n\n    for (var i = 0; i < childNodes.length; i++) {\n      var child = childNodes[i];\n\n      if (child.visible()) {\n        child.renderTo(ctx);\n      }\n    }\n\n    ctx.restore();\n  };\n\n  return GroupNode;\n}(Node);\n\nTraversable.extend(GroupNode.prototype, \"childNodes\");\nNODE_MAP.Group = GroupNode;\nexport default GroupNode;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/canvas/group-node.js"],"names":["Node","Traversable","NODE_MAP","GroupNode","apply","arguments","__proto__","prototype","Object","create","constructor","renderTo","ctx","visible","save","setTransform","setClip","setOpacity","childNodes","i","length","child","restore","extend","Group"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAIC,SAAS,GAAI,UAAUH,IAAV,EAAgB;AAC7B,WAASG,SAAT,GAAsB;AAClBH,IAAAA,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBC,SAAjB;AACH;;AAED,MAAKL,IAAL,EAAYG,SAAS,CAACG,SAAV,GAAsBN,IAAtB;AACZG,EAAAA,SAAS,CAACI,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAeT,IAAI,IAAIA,IAAI,CAACO,SAA5B,CAAtB;AACAJ,EAAAA,SAAS,CAACI,SAAV,CAAoBG,WAApB,GAAkCP,SAAlC;;AAEAA,EAAAA,SAAS,CAACI,SAAV,CAAoBI,QAApB,GAA+B,SAASA,QAAT,CAAmBC,GAAnB,EAAwB;AACnD,QAAI,CAAC,KAAKC,OAAL,EAAL,EAAqB;AACjB;AACH;;AAEDD,IAAAA,GAAG,CAACE,IAAJ;AAEA,SAAKC,YAAL,CAAkBH,GAAlB;AACA,SAAKI,OAAL,CAAaJ,GAAb;AACA,SAAKK,UAAL,CAAgBL,GAAhB;AAEA,QAAIM,UAAU,GAAG,KAAKA,UAAtB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,UAAIE,KAAK,GAAGH,UAAU,CAACC,CAAD,CAAtB;;AACA,UAAIE,KAAK,CAACR,OAAN,EAAJ,EAAqB;AACjBQ,QAAAA,KAAK,CAACV,QAAN,CAAeC,GAAf;AACH;AACJ;;AAEDA,IAAAA,GAAG,CAACU,OAAJ;AACH,GApBD;;AAsBA,SAAOnB,SAAP;AACH,CAhCgB,CAgCfH,IAhCe,CAAjB;;AAkCAC,WAAW,CAACsB,MAAZ,CAAmBpB,SAAS,CAACI,SAA7B,EAAwC,YAAxC;AAEAL,QAAQ,CAACsB,KAAT,GAAiBrB,SAAjB;AAEA,eAAeA,SAAf","sourcesContent":["import Node from './node';\nimport Traversable from '../mixins/traversable';\nimport NODE_MAP from './node-map';\n\nvar GroupNode = (function (Node) {\n    function GroupNode () {\n        Node.apply(this, arguments);\n    }\n\n    if ( Node ) GroupNode.__proto__ = Node;\n    GroupNode.prototype = Object.create( Node && Node.prototype );\n    GroupNode.prototype.constructor = GroupNode;\n\n    GroupNode.prototype.renderTo = function renderTo (ctx) {\n        if (!this.visible()) {\n            return;\n        }\n\n        ctx.save();\n\n        this.setTransform(ctx);\n        this.setClip(ctx);\n        this.setOpacity(ctx);\n\n        var childNodes = this.childNodes;\n        for (var i = 0; i < childNodes.length; i++) {\n            var child = childNodes[i];\n            if (child.visible()) {\n                child.renderTo(ctx);\n            }\n        }\n\n        ctx.restore();\n    };\n\n    return GroupNode;\n}(Node));\n\nTraversable.extend(GroupNode.prototype, \"childNodes\");\n\nNODE_MAP.Group = GroupNode;\n\nexport default GroupNode;"]},"metadata":{},"sourceType":"module"}