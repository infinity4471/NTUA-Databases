{"ast":null,"code":"import { messages } from './messages';\n/**\n * @hidden\n */\n\nexport var filterLogicList = [{\n  text: 'grid.filterAndLogic',\n  operator: 'and'\n}, {\n  text: 'grid.filterOrLogic',\n  operator: 'or'\n}];\n/**\n * @hidden\n */\n\nexport var operators = {\n  'text': [{\n    text: 'grid.filterContainsOperator',\n    operator: 'contains'\n  }, {\n    text: 'grid.filterNotContainsOperator',\n    operator: 'doesnotcontain'\n  }, {\n    text: 'grid.filterEqOperator',\n    operator: 'eq'\n  }, {\n    text: 'grid.filterNotEqOperator',\n    operator: 'neq'\n  }, {\n    text: 'grid.filterStartsWithOperator',\n    operator: 'startswith'\n  }, {\n    text: 'grid.filterEndsWithOperator',\n    operator: 'endswith'\n  }, {\n    text: 'grid.filterIsNullOperator',\n    operator: 'isnull'\n  }, {\n    text: 'grid.filterIsNotNullOperator',\n    operator: 'isnotnull'\n  }, {\n    text: 'grid.filterIsEmptyOperator',\n    operator: 'isempty'\n  }, {\n    text: 'grid.filterIsNotEmptyOperator',\n    operator: 'isnotempty'\n  }],\n  'numeric': [{\n    text: 'grid.filterEqOperator',\n    operator: 'eq'\n  }, {\n    text: 'grid.filterNotEqOperator',\n    operator: 'neq'\n  }, {\n    text: 'grid.filterGteOperator',\n    operator: 'gte'\n  }, {\n    text: 'grid.filterGtOperator',\n    operator: 'gt'\n  }, {\n    text: 'grid.filterLteOperator',\n    operator: 'lte'\n  }, {\n    text: 'grid.filterLtOperator',\n    operator: 'lt'\n  }, {\n    text: 'grid.filterIsNullOperator',\n    operator: 'isnull'\n  }, {\n    text: 'grid.filterIsNotNullOperator',\n    operator: 'isnotnull'\n  }],\n  'date': [{\n    text: 'grid.filterEqOperator',\n    operator: 'eq'\n  }, {\n    text: 'grid.filterNotEqOperator',\n    operator: 'neq'\n  }, {\n    text: 'grid.filterAfterOrEqualOperator',\n    operator: 'gte'\n  }, {\n    text: 'grid.filterAfterOperator',\n    operator: 'gt'\n  }, {\n    text: 'grid.filterBeforeOperator',\n    operator: 'lt'\n  }, {\n    text: 'grid.filterBeforeOrEqualOperator',\n    operator: 'lte'\n  }, {\n    text: 'grid.filterIsNullOperator',\n    operator: 'isnull'\n  }, {\n    text: 'grid.filterIsNotNullOperator',\n    operator: 'isnotnull'\n  }],\n  'boolean': [{\n    text: 'grid.filterEqOperator',\n    operator: 'eq'\n  }]\n};\n/**\n * @hidden\n */\n\nexport var IsUnaryFilter = function (operator) {\n  return operator === 'isnull' || operator === 'isnotnull' || operator === 'isempty' || operator === 'isnotempty';\n};\n/**\n * @hidden\n */\n\nexport var operatorMap = function (iterable, service) {\n  return iterable.map(function (operator) {\n    return {\n      text: service.toLanguageString(operator.text, messages[operator.text]),\n      operator: operator.operator\n    };\n  });\n};\n/**\n * @hidden\n */\n\nexport var defaultBooleanOperator = 'eq';\n/**\n * @hidden\n */\n\nexport var booleanFilterValues = [{\n  text: 'grid.filterBooleanAll',\n  operator: ''\n}, {\n  text: 'grid.filterIsTrue',\n  operator: true\n}, {\n  text: 'grid.filterIsFalse',\n  operator: false\n}];\n/**\n * @hidden\n */\n\nexport var defaultHideSecondFilter = {\n  text: false,\n  numeric: false,\n  date: false,\n  boolean: true\n};\n/**\n * @hidden\n */\n\nexport var cellInputChange = function (value, e, props) {\n  var defaultOperator = getDefaultOperator(props.operators);\n  var operator = props.operator;\n\n  switch (props.filterType) {\n    case 'numeric':\n      if (!operator || IsUnaryFilter(operator)) {\n        // change the operator to default\n        operator = defaultOperator;\n      }\n\n      if (value === null && operator === defaultOperator) {\n        // clear only the default operator\n        operator = '';\n      }\n\n      break;\n\n    case 'date':\n      if (!operator || IsUnaryFilter(operator)) {\n        operator = defaultOperator;\n      }\n\n      if (value === null && operator === defaultOperator) {\n        operator = '';\n      }\n\n      break;\n\n    case 'text':\n      if (!operator || IsUnaryFilter(operator)) {\n        operator = defaultOperator;\n      }\n\n      if (!value && operator === defaultOperator) {\n        operator = '';\n      }\n\n      break;\n\n    default:\n      return;\n  }\n\n  props.onChange({\n    value: value,\n    operator: operator,\n    syntheticEvent: e\n  });\n};\n/**\n * @hidden\n */\n\nexport var getDefaultOperator = function (filterOperators, filterType) {\n  if (filterType) {\n    return filterOperators[filterType][0].operator;\n  } else {\n    return filterOperators[0].operator;\n  }\n};\n/**\n * @hidden\n */\n\nexport var getFilterType = function (filterType) {\n  return filterType || 'text';\n};\n/**\n * @hidden\n */\n\nexport var cellBoolDropdownChange = function (event, onChange) {\n  var item = event.target.value;\n  onChange({\n    value: item.operator,\n    operator: item.operator === '' ? '' : defaultBooleanOperator,\n    syntheticEvent: event.syntheticEvent\n  });\n};\n/**\n * @hidden\n */\n\nexport var cellOperatorChange = function (event, currentValue, onChange) {\n  var value = currentValue;\n  var item = event.target.value;\n\n  if (!event.target.state.opened) {\n    return;\n  }\n\n  if (IsUnaryFilter(item.operator)) {\n    // clear the value to avoid confusion on what is filtered\n    value = null;\n  }\n\n  onChange({\n    value: value,\n    operator: item.operator,\n    syntheticEvent: event.syntheticEvent\n  });\n};","map":{"version":3,"sources":["../../src/filterCommon.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { messages } from './messages';\n/**\n * @hidden\n */\nexport var filterLogicList = [\n    { text: 'grid.filterAndLogic', operator: 'and' },\n    { text: 'grid.filterOrLogic', operator: 'or' }\n];\n/**\n * @hidden\n */\nexport var operators = {\n    'text': [\n        { text: 'grid.filterContainsOperator', operator: 'contains' },\n        { text: 'grid.filterNotContainsOperator', operator: 'doesnotcontain' },\n        { text: 'grid.filterEqOperator', operator: 'eq' },\n        { text: 'grid.filterNotEqOperator', operator: 'neq' },\n        { text: 'grid.filterStartsWithOperator', operator: 'startswith' },\n        { text: 'grid.filterEndsWithOperator', operator: 'endswith' },\n        { text: 'grid.filterIsNullOperator', operator: 'isnull' },\n        { text: 'grid.filterIsNotNullOperator', operator: 'isnotnull' },\n        { text: 'grid.filterIsEmptyOperator', operator: 'isempty' },\n        { text: 'grid.filterIsNotEmptyOperator', operator: 'isnotempty' }\n    ],\n    'numeric': [\n        { text: 'grid.filterEqOperator', operator: 'eq' },\n        { text: 'grid.filterNotEqOperator', operator: 'neq' },\n        { text: 'grid.filterGteOperator', operator: 'gte' },\n        { text: 'grid.filterGtOperator', operator: 'gt' },\n        { text: 'grid.filterLteOperator', operator: 'lte' },\n        { text: 'grid.filterLtOperator', operator: 'lt' },\n        { text: 'grid.filterIsNullOperator', operator: 'isnull' },\n        { text: 'grid.filterIsNotNullOperator', operator: 'isnotnull' }\n    ],\n    'date': [\n        { text: 'grid.filterEqOperator', operator: 'eq' },\n        { text: 'grid.filterNotEqOperator', operator: 'neq' },\n        { text: 'grid.filterAfterOrEqualOperator', operator: 'gte' },\n        { text: 'grid.filterAfterOperator', operator: 'gt' },\n        { text: 'grid.filterBeforeOperator', operator: 'lt' },\n        { text: 'grid.filterBeforeOrEqualOperator', operator: 'lte' },\n        { text: 'grid.filterIsNullOperator', operator: 'isnull' },\n        { text: 'grid.filterIsNotNullOperator', operator: 'isnotnull' }\n    ],\n    'boolean': [\n        { text: 'grid.filterEqOperator', operator: 'eq' }\n    ]\n};\n/**\n * @hidden\n */\nexport var IsUnaryFilter = function (operator) {\n    return operator === 'isnull' || operator === 'isnotnull' || operator === 'isempty' || operator === 'isnotempty';\n};\n/**\n * @hidden\n */\nexport var operatorMap = function (iterable, service) { return iterable.map(function (operator) { return ({\n    text: service.toLanguageString(operator.text, messages[operator.text]),\n    operator: operator.operator\n}); }); };\n/**\n * @hidden\n */\nexport var defaultBooleanOperator = 'eq';\n/**\n * @hidden\n */\nexport var booleanFilterValues = [\n    { text: 'grid.filterBooleanAll', operator: '' },\n    { text: 'grid.filterIsTrue', operator: true },\n    { text: 'grid.filterIsFalse', operator: false }\n];\n/**\n * @hidden\n */\nexport var defaultHideSecondFilter = {\n    text: false,\n    numeric: false,\n    date: false,\n    boolean: true\n};\n/**\n * @hidden\n */\nexport var cellInputChange = function (value, e, props) {\n    var defaultOperator = getDefaultOperator(props.operators);\n    var operator = props.operator;\n    switch (props.filterType) {\n        case 'numeric':\n            if (!operator || IsUnaryFilter(operator)) {\n                // change the operator to default\n                operator = defaultOperator;\n            }\n            if (value === null && operator === defaultOperator) {\n                // clear only the default operator\n                operator = '';\n            }\n            break;\n        case 'date':\n            if (!operator || IsUnaryFilter(operator)) {\n                operator = defaultOperator;\n            }\n            if (value === null && operator === defaultOperator) {\n                operator = '';\n            }\n            break;\n        case 'text':\n            if (!operator || IsUnaryFilter(operator)) {\n                operator = defaultOperator;\n            }\n            if (!value && operator === defaultOperator) {\n                operator = '';\n            }\n            break;\n        default: return;\n    }\n    props.onChange({ value: value, operator: operator, syntheticEvent: e });\n};\n/**\n * @hidden\n */\nexport var getDefaultOperator = function (filterOperators, filterType) {\n    if (filterType) {\n        return filterOperators[filterType][0].operator;\n    }\n    else {\n        return filterOperators[0].operator;\n    }\n};\n/**\n * @hidden\n */\nexport var getFilterType = function (filterType) {\n    return filterType || 'text';\n};\n/**\n * @hidden\n */\nexport var cellBoolDropdownChange = function (event, onChange) {\n    var item = event.target.value;\n    onChange({\n        value: item.operator,\n        operator: item.operator === '' ? '' : defaultBooleanOperator,\n        syntheticEvent: event.syntheticEvent\n    });\n};\n/**\n * @hidden\n */\nexport var cellOperatorChange = function (event, currentValue, onChange) {\n    var value = currentValue;\n    var item = event.target.value;\n    if (!event.target.state.opened) {\n        return;\n    }\n    if (IsUnaryFilter(item.operator)) {\n        // clear the value to avoid confusion on what is filtered\n        value = null;\n    }\n    onChange({ value: value, operator: item.operator, syntheticEvent: event.syntheticEvent });\n};\n//# sourceMappingURL=filterCommon.js.map"]},"metadata":{},"sourceType":"module"}