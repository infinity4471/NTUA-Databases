{"ast":null,"code":"var merge = function (data, left, middle, right, compare) {\n  var leftLength = middle - left;\n  var rightLength = right - middle;\n  var temp = [];\n\n  for (var idx = 0; idx < leftLength; idx++) {\n    temp.push(data[left + idx]);\n  }\n\n  var cursor1 = 0;\n  var cursor2 = middle;\n  var dest = left;\n\n  do {\n    if (compare(data[cursor2], temp[cursor1]) < 0) {\n      data[dest++] = data[cursor2++];\n      rightLength--;\n    } else {\n      data[dest++] = temp[cursor1++];\n      leftLength--;\n    }\n  } while (rightLength > 0 && leftLength > 0);\n\n  while (leftLength) {\n    data[dest++] = temp[cursor1++];\n    leftLength--;\n  }\n\n  while (rightLength) {\n    data[dest++] = data[cursor2++];\n    rightLength--;\n  }\n};\n/**\n * @hidden\n */\n\n\nexport var sort = function (data, start, end, compare) {\n  if (end - start < 2) {\n    return;\n  }\n\n  var mid = start + end >>> 1; // tslint:disable-line:no-bitwise\n\n  sort(data, start, mid, compare);\n  sort(data, mid, end, compare);\n  merge(data, start, mid, end, compare);\n};","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-data-query/dist/es/sorting/sort.js"],"names":["merge","data","left","middle","right","compare","leftLength","rightLength","temp","idx","push","cursor1","cursor2","dest","sort","start","end","mid"],"mappings":"AAAA,IAAIA,KAAK,GAAG,UAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,OAArC,EAA8C;AACtD,MAAIC,UAAU,GAAGH,MAAM,GAAGD,IAA1B;AACA,MAAIK,WAAW,GAAGH,KAAK,GAAGD,MAA1B;AACA,MAAIK,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,UAAxB,EAAoCG,GAAG,EAAvC,EAA2C;AACvCD,IAAAA,IAAI,CAACE,IAAL,CAAUT,IAAI,CAACC,IAAI,GAAGO,GAAR,CAAd;AACH;;AACD,MAAIE,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAGT,MAAd;AACA,MAAIU,IAAI,GAAGX,IAAX;;AACA,KAAG;AACC,QAAIG,OAAO,CAACJ,IAAI,CAACW,OAAD,CAAL,EAAgBJ,IAAI,CAACG,OAAD,CAApB,CAAP,GAAwC,CAA5C,EAA+C;AAC3CV,MAAAA,IAAI,CAACY,IAAI,EAAL,CAAJ,GAAeZ,IAAI,CAACW,OAAO,EAAR,CAAnB;AACAL,MAAAA,WAAW;AACd,KAHD,MAIK;AACDN,MAAAA,IAAI,CAACY,IAAI,EAAL,CAAJ,GAAeL,IAAI,CAACG,OAAO,EAAR,CAAnB;AACAL,MAAAA,UAAU;AACb;AACJ,GATD,QASSC,WAAW,GAAG,CAAd,IAAmBD,UAAU,GAAG,CATzC;;AAUA,SAAOA,UAAP,EAAmB;AACfL,IAAAA,IAAI,CAACY,IAAI,EAAL,CAAJ,GAAeL,IAAI,CAACG,OAAO,EAAR,CAAnB;AACAL,IAAAA,UAAU;AACb;;AACD,SAAOC,WAAP,EAAoB;AAChBN,IAAAA,IAAI,CAACY,IAAI,EAAL,CAAJ,GAAeZ,IAAI,CAACW,OAAO,EAAR,CAAnB;AACAL,IAAAA,WAAW;AACd;AACJ,CA5BD;AA6BA;;;;;AAGA,OAAO,IAAIO,IAAI,GAAG,UAAUb,IAAV,EAAgBc,KAAhB,EAAuBC,GAAvB,EAA4BX,OAA5B,EAAqC;AACnD,MAAIW,GAAG,GAAGD,KAAN,GAAc,CAAlB,EAAqB;AACjB;AACH;;AACD,MAAIE,GAAG,GAAIF,KAAK,GAAGC,GAAT,KAAkB,CAA5B,CAJmD,CAIpB;;AAC/BF,EAAAA,IAAI,CAACb,IAAD,EAAOc,KAAP,EAAcE,GAAd,EAAmBZ,OAAnB,CAAJ;AACAS,EAAAA,IAAI,CAACb,IAAD,EAAOgB,GAAP,EAAYD,GAAZ,EAAiBX,OAAjB,CAAJ;AACAL,EAAAA,KAAK,CAACC,IAAD,EAAOc,KAAP,EAAcE,GAAd,EAAmBD,GAAnB,EAAwBX,OAAxB,CAAL;AACH,CARM","sourcesContent":["var merge = function (data, left, middle, right, compare) {\n    var leftLength = middle - left;\n    var rightLength = right - middle;\n    var temp = [];\n    for (var idx = 0; idx < leftLength; idx++) {\n        temp.push(data[left + idx]);\n    }\n    var cursor1 = 0;\n    var cursor2 = middle;\n    var dest = left;\n    do {\n        if (compare(data[cursor2], temp[cursor1]) < 0) {\n            data[dest++] = data[cursor2++];\n            rightLength--;\n        }\n        else {\n            data[dest++] = temp[cursor1++];\n            leftLength--;\n        }\n    } while (rightLength > 0 && leftLength > 0);\n    while (leftLength) {\n        data[dest++] = temp[cursor1++];\n        leftLength--;\n    }\n    while (rightLength) {\n        data[dest++] = data[cursor2++];\n        rightLength--;\n    }\n};\n/**\n * @hidden\n */\nexport var sort = function (data, start, end, compare) {\n    if (end - start < 2) {\n        return;\n    }\n    var mid = (start + end) >>> 1; // tslint:disable-line:no-bitwise\n    sort(data, start, mid, compare);\n    sort(data, mid, end, compare);\n    merge(data, start, mid, end, compare);\n};\n"]},"metadata":{},"sourceType":"module"}