{"ast":null,"code":"import BaseSurface from '../core/surface';\nimport SurfaceFactory from '../core/surface-factory';\nimport RootNode from './root-node';\nimport Group from '../shapes/group';\nimport transform from '../geometry/transform';\nimport renderSVG from './utils/render-svg';\nimport { SVG_NS } from './constants';\nimport { bindEvents, unbindEvents, elementStyles } from '../util';\nvar RTL = 'rtl';\n\nfunction alignToScreen(element) {\n  var ctm;\n\n  try {\n    ctm = element.getScreenCTM ? element.getScreenCTM() : null;\n  } catch (e) {} // eslint-disable-line no-empty\n\n\n  if (ctm) {\n    var left = -ctm.e % 1;\n    var top = -ctm.f % 1;\n    var style = element.style;\n\n    if (left !== 0 || top !== 0) {\n      style.left = left + \"px\";\n      style.top = top + \"px\";\n    }\n  }\n}\n\nvar Surface = function (BaseSurface) {\n  function Surface(element, options) {\n    BaseSurface.call(this, element, options);\n    this._root = new RootNode(Object.assign({\n      rtl: elementStyles(element, 'direction').direction === RTL\n    }, this.options));\n    renderSVG(this.element, this._template());\n    this._rootElement = this.element.firstElementChild;\n    alignToScreen(this._rootElement);\n\n    this._root.attachTo(this._rootElement);\n\n    bindEvents(this.element, {\n      click: this._click,\n      mouseover: this._mouseenter,\n      mouseout: this._mouseleave,\n      mousemove: this._mousemove\n    });\n    this.resize();\n  }\n\n  if (BaseSurface) Surface.__proto__ = BaseSurface;\n  Surface.prototype = Object.create(BaseSurface && BaseSurface.prototype);\n  Surface.prototype.constructor = Surface;\n\n  Surface.prototype.destroy = function destroy() {\n    if (this._root) {\n      this._root.destroy();\n\n      this._root = null;\n      this._rootElement = null;\n      unbindEvents(this.element, {\n        click: this._click,\n        mouseover: this._mouseenter,\n        mouseout: this._mouseleave,\n        mousemove: this._mousemove\n      });\n    }\n\n    BaseSurface.prototype.destroy.call(this);\n  };\n\n  Surface.prototype.translate = function translate(offset) {\n    var viewBox = Math.round(offset.x) + \" \" + Math.round(offset.y) + \" \" + this._size.width + \" \" + this._size.height;\n\n    this._offset = offset;\n\n    this._rootElement.setAttribute(\"viewBox\", viewBox);\n  };\n\n  Surface.prototype.draw = function draw(element) {\n    BaseSurface.prototype.draw.call(this, element);\n\n    this._root.load([element]);\n  };\n\n  Surface.prototype.clear = function clear() {\n    BaseSurface.prototype.clear.call(this);\n\n    this._root.clear();\n  };\n\n  Surface.prototype.svg = function svg() {\n    return \"<?xml version='1.0' ?>\" + this._template();\n  };\n\n  Surface.prototype.exportVisual = function exportVisual() {\n    var ref = this;\n    var visual = ref._visual;\n    var offset = ref._offset;\n\n    if (offset) {\n      var wrap = new Group();\n      wrap.children.push(visual);\n      wrap.transform(transform().translate(-offset.x, -offset.y));\n      visual = wrap;\n    }\n\n    return visual;\n  };\n\n  Surface.prototype._resize = function _resize() {\n    if (this._offset) {\n      this.translate(this._offset);\n    }\n  };\n\n  Surface.prototype._template = function _template() {\n    return \"<svg style='width: 100%; height: 100%; overflow: hidden;' xmlns='\" + SVG_NS + \"' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>\" + this._root.render() + \"</svg>\";\n  };\n\n  return Surface;\n}(BaseSurface);\n\nSurface.prototype.type = \"svg\";\n\nif (typeof document !== \"undefined\" && document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\")) {\n  BaseSurface.support.svg = true;\n  SurfaceFactory.current.register(\"svg\", Surface, 10);\n}\n\nexport default Surface;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/svg/surface.js"],"names":["BaseSurface","SurfaceFactory","RootNode","Group","transform","renderSVG","SVG_NS","bindEvents","unbindEvents","elementStyles","RTL","alignToScreen","element","ctm","getScreenCTM","e","left","top","f","style","Surface","options","call","_root","Object","assign","rtl","direction","_template","_rootElement","firstElementChild","attachTo","click","_click","mouseover","_mouseenter","mouseout","_mouseleave","mousemove","_mousemove","resize","__proto__","prototype","create","constructor","destroy","translate","offset","viewBox","Math","round","x","y","_size","width","height","_offset","setAttribute","draw","load","clear","svg","exportVisual","ref","visual","_visual","wrap","children","push","_resize","render","type","document","implementation","hasFeature","support","current","register"],"mappings":"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","sourcesContent":["import BaseSurface from '../core/surface';\nimport SurfaceFactory from '../core/surface-factory';\nimport RootNode from './root-node';\nimport Group from '../shapes/group';\nimport transform from '../geometry/transform';\nimport renderSVG from './utils/render-svg';\nimport { SVG_NS } from './constants';\nimport { bindEvents, unbindEvents, elementStyles } from '../util';\n\nvar RTL = 'rtl';\n\nfunction alignToScreen(element) {\n    var ctm;\n\n    try {\n        ctm = element.getScreenCTM ? element.getScreenCTM() : null;\n    } catch (e) { } // eslint-disable-line no-empty\n\n    if (ctm) {\n        var left = - ctm.e % 1;\n        var top = - ctm.f % 1;\n        var style = element.style;\n\n        if (left !== 0 || top !== 0) {\n            style.left = left + \"px\";\n            style.top = top + \"px\";\n        }\n    }\n}\n\nvar Surface = (function (BaseSurface) {\n    function Surface(element, options) {\n        BaseSurface.call(this, element, options);\n\n        this._root = new RootNode(Object.assign({\n            rtl: elementStyles(element, 'direction').direction === RTL\n        }, this.options));\n\n        renderSVG(this.element, this._template());\n\n        this._rootElement = this.element.firstElementChild;\n\n        alignToScreen(this._rootElement);\n\n        this._root.attachTo(this._rootElement);\n\n        bindEvents(this.element, {\n            click: this._click,\n            mouseover: this._mouseenter,\n            mouseout: this._mouseleave,\n            mousemove: this._mousemove\n        });\n\n        this.resize();\n    }\n\n    if ( BaseSurface ) Surface.__proto__ = BaseSurface;\n    Surface.prototype = Object.create( BaseSurface && BaseSurface.prototype );\n    Surface.prototype.constructor = Surface;\n\n    Surface.prototype.destroy = function destroy () {\n        if (this._root) {\n            this._root.destroy();\n            this._root = null;\n            this._rootElement = null;\n            unbindEvents(this.element, {\n                click: this._click,\n                mouseover: this._mouseenter,\n                mouseout: this._mouseleave,\n                mousemove: this._mousemove\n            });\n        }\n\n        BaseSurface.prototype.destroy.call(this);\n    };\n\n    Surface.prototype.translate = function translate (offset) {\n        var viewBox = (Math.round(offset.x)) + \" \" + (Math.round(offset.y)) + \" \" + (this._size.width) + \" \" + (this._size.height);\n\n        this._offset = offset;\n        this._rootElement.setAttribute(\"viewBox\", viewBox);\n    };\n\n    Surface.prototype.draw = function draw (element) {\n        BaseSurface.prototype.draw.call(this, element);\n        this._root.load([ element ]);\n    };\n\n    Surface.prototype.clear = function clear () {\n        BaseSurface.prototype.clear.call(this);\n        this._root.clear();\n    };\n\n    Surface.prototype.svg = function svg () {\n        return \"<?xml version='1.0' ?>\" + this._template();\n    };\n\n    Surface.prototype.exportVisual = function exportVisual () {\n        var ref = this;\n        var visual = ref._visual;\n        var offset = ref._offset;\n\n        if (offset) {\n            var wrap = new Group();\n            wrap.children.push(visual);\n\n            wrap.transform(\n                transform().translate(-offset.x, -offset.y)\n            );\n\n            visual = wrap;\n        }\n\n        return visual;\n    };\n\n    Surface.prototype._resize = function _resize () {\n        if (this._offset) {\n            this.translate(this._offset);\n        }\n    };\n\n    Surface.prototype._template = function _template () {\n        return (\"<svg style='width: 100%; height: 100%; overflow: hidden;' xmlns='\" + SVG_NS + \"' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>\" + (this._root.render()) + \"</svg>\");\n    };\n\n    return Surface;\n}(BaseSurface));\n\nSurface.prototype.type = \"svg\";\n\nif (typeof document !== \"undefined\" && document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\")) {\n    BaseSurface.support.svg = true;\n    SurfaceFactory.current.register(\"svg\", Surface, 10);\n}\n\nexport default Surface;"]},"metadata":{},"sourceType":"module"}