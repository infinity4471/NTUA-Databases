{"ast":null,"code":"import { encodeUTF8 } from './encode-utf';\nvar KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nexport default function encodeBase64(input) {\n  var output = \"\";\n  var i = 0;\n  var utfInput = encodeUTF8(input);\n\n  while (i < utfInput.length) {\n    var chr1 = utfInput.charCodeAt(i++);\n    var chr2 = utfInput.charCodeAt(i++);\n    var chr3 = utfInput.charCodeAt(i++);\n    var enc1 = chr1 >> 2;\n    var enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n    var enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n    var enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n\n    output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n  }\n\n  return output;\n}","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/util/encode-base64.js"],"names":["encodeUTF8","KEY_STR","encodeBase64","input","output","i","utfInput","length","chr1","charCodeAt","chr2","chr3","enc1","enc2","enc3","enc4","isNaN","charAt"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AAEA,IAAIC,OAAO,GAAG,mEAAd;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,CAAC,GAAG,CAAR;AAEA,MAAIC,QAAQ,GAAGN,UAAU,CAACG,KAAD,CAAzB;;AAEA,SAAOE,CAAC,GAAGC,QAAQ,CAACC,MAApB,EAA4B;AACxB,QAAIC,IAAI,GAAGF,QAAQ,CAACG,UAAT,CAAoBJ,CAAC,EAArB,CAAX;AACA,QAAIK,IAAI,GAAGJ,QAAQ,CAACG,UAAT,CAAoBJ,CAAC,EAArB,CAAX;AACA,QAAIM,IAAI,GAAGL,QAAQ,CAACG,UAAT,CAAoBJ,CAAC,EAArB,CAAX;AAEA,QAAIO,IAAI,GAAGJ,IAAI,IAAI,CAAnB;AACA,QAAIK,IAAI,GAAI,CAACL,IAAI,GAAG,CAAR,KAAc,CAAf,GAAqBE,IAAI,IAAI,CAAxC;AACA,QAAII,IAAI,GAAI,CAACJ,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAAzC;AACA,QAAII,IAAI,GAAGJ,IAAI,GAAG,EAAlB;;AAEA,QAAIK,KAAK,CAACN,IAAD,CAAT,EAAiB;AACbI,MAAAA,IAAI,GAAGC,IAAI,GAAG,EAAd;AACH,KAFD,MAEO,IAAIC,KAAK,CAACL,IAAD,CAAT,EAAiB;AACpBI,MAAAA,IAAI,GAAG,EAAP;AACH;;AAEDX,IAAAA,MAAM,GAAGA,MAAM,GACXH,OAAO,CAACgB,MAAR,CAAeL,IAAf,CADK,GACkBX,OAAO,CAACgB,MAAR,CAAeJ,IAAf,CADlB,GAELZ,OAAO,CAACgB,MAAR,CAAeH,IAAf,CAFK,GAEkBb,OAAO,CAACgB,MAAR,CAAeF,IAAf,CAF3B;AAGH;;AAED,SAAOX,MAAP;AACH","sourcesContent":["import { encodeUTF8 } from './encode-utf';\n\nvar KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nexport default function encodeBase64(input) {\n    var output = \"\";\n    var i = 0;\n\n    var utfInput = encodeUTF8(input);\n\n    while (i < utfInput.length) {\n        var chr1 = utfInput.charCodeAt(i++);\n        var chr2 = utfInput.charCodeAt(i++);\n        var chr3 = utfInput.charCodeAt(i++);\n\n        var enc1 = chr1 >> 2;\n        var enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        var enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        var enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output +\n            KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) +\n            KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n    }\n\n    return output;\n}"]},"metadata":{},"sourceType":"module"}