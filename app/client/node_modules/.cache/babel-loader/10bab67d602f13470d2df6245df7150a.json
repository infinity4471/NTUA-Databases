{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport ToolbarItem from './tools/ToolbarItem';\nimport ToolbarButton from './tools/ToolbarButton';\nimport ButtonGroup from '../ButtonGroup';\nimport { classNames, Keys } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact Toolbar component]({% slug overview_toolbar %}).\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *    render() {\n *       return (\n *          <Toolbar>\n *              <ToolbarItem>\n *                  <ButtonGroup>\n *                      <Button togglable={true} icon=\"bold\" />\n *                      <Button togglable={true} icon=\"italic\" />\n *                      <Button togglable={true} icon=\"underline\" />\n *                  </ButtonGroup>\n *              </ToolbarItem>\n *              <ToolbarItem>\n *                  <ButtonGroup>\n *                      <Button icon=\"hyperlink\">Insert Link</Button>\n *                      <Button icon=\"image\">Insert Image</Button>\n *                      <Button icon=\"table\">Insert Table</Button>\n *                  </ButtonGroup>\n *              </ToolbarItem>\n *          </Toolbar>\n *       );\n *    }\n * }\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nvar Toolbar =\n/** @class */\nfunction (_super) {\n  __extends(Toolbar, _super);\n\n  function Toolbar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._element = null;\n    _this.buttons = [];\n    _this.focusedIndex = 0;\n    _this.counter = 0;\n    _this.offsetHeight = 0;\n    _this.offsetWidth = 0;\n\n    _this.mapToolbarChild = function (toolbarItem) {\n      if (toolbarItem && toolbarItem.type === ToolbarItem) {\n        return React.cloneElement(toolbarItem, toolbarItem.props, React.Children.map(toolbarItem.props.children, _this.mapItemChildren));\n      }\n\n      return toolbarItem;\n    };\n\n    _this.mapItemChildren = function (tool) {\n      if (tool.type === ButtonGroup) {\n        return React.cloneElement(tool, tool.props, React.Children.map(tool.props.children, _this.mapButton));\n      }\n\n      return _this.mapButton(tool);\n    };\n\n    _this.mapButton = function (button) {\n      var index = _this.counter;\n      _this.counter++;\n      return React.createElement(ToolbarButton, {\n        ref: function (b) {\n          return _this.buttonRef(b, index);\n        },\n        tabIndex: _this.focusedIndex === index ? _this.props.tabIndex || Toolbar.defaultProps.tabIndex : -1,\n        button: button\n      });\n    };\n\n    _this.buttonRef = function (button, index) {\n      _this.buttons[index] = button;\n\n      if (!button && !_this.buttons.find(function (b) {\n        return b !== null;\n      })) {\n        _this.buttons.length = 0;\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var target = event.target;\n      var _a = _this,\n          focusedIndex = _a.focusedIndex,\n          buttons = _a.buttons;\n      var arrowKey = event.keyCode === Keys.left || event.keyCode === Keys.right;\n\n      if (!arrowKey || event.defaultPrevented || buttons.findIndex(function (b) {\n        return b !== null && b.element === target;\n      }) === -1) {\n        return;\n      }\n\n      if (event.keyCode === Keys.left) {\n        _this.focusButton(focusedIndex, focusedIndex - 1);\n      } else {\n        _this.focusButton(focusedIndex, focusedIndex + 1);\n      }\n    };\n\n    _this.onWindowResize = function (event) {\n      var element = _this.element;\n\n      if (!element) {\n        return;\n      }\n\n      var offsetWidth = element.offsetWidth;\n      var offsetHeight = element.offsetHeight;\n\n      if (_this.offsetWidth !== offsetWidth || _this.offsetHeight !== offsetHeight) {\n        _this.offsetWidth = offsetWidth;\n        _this.offsetHeight = offsetHeight;\n        var newSizes = {\n          offsetWidth: _this.offsetWidth,\n          offsetHeight: _this.offsetHeight\n        };\n\n        if (_this.props.onResize) {\n          _this.props.onResize.call(undefined, __assign({\n            target: _this\n          }, newSizes, {\n            nativeEvent: event\n          }));\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(Toolbar.prototype, \"element\", {\n    /**\n     * Returns the HTML element of the Toolbar component.\n     */\n    get: function () {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  Toolbar.prototype.componentDidMount = function () {\n    window.addEventListener('resize', this.onWindowResize);\n    var element = this.element;\n\n    if (element) {\n      this.offsetWidth = element.offsetWidth;\n      this.offsetHeight = element.offsetHeight;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Toolbar.prototype.componentDidUpdate = function () {\n    var _this = this;\n\n    var element = this.element;\n\n    if (!element || this.props.keyboardNavigation === false) {\n      return;\n    }\n\n    var focused = element.querySelector('button:focus');\n    var prevFocusedIndex = this.focusedIndex;\n\n    if (!focused) {\n      this.focusedIndex = 0;\n    } else {\n      var focusedIndex = this.buttons.findIndex(function (b) {\n        return b !== null && b.element === focused;\n      });\n\n      if (focusedIndex !== -1 && focusedIndex !== this.focusedIndex) {\n        this.focusedIndex = focusedIndex;\n      }\n    }\n\n    if (prevFocusedIndex !== this.focusedIndex) {\n      var _a = this.props.tabIndex,\n          tabIndex_1 = _a === void 0 ? Toolbar.defaultProps.tabIndex : _a;\n      this.buttons.forEach(function (button, index) {\n        if (button) {\n          button.tabIndex = index === _this.focusedIndex && button.tabIndex === -1 ? tabIndex_1 : -1;\n        }\n      });\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Toolbar.prototype.componentWillUnmount = function () {\n    window.removeEventListener('resize', this.onWindowResize);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Toolbar.prototype.render = function () {\n    var _this = this;\n\n    var keyboardNavigation = this.props.keyboardNavigation !== false;\n    this.counter = 0;\n    return React.createElement(\"div\", {\n      className: classNames('k-widget k-toolbar', this.props.className),\n      style: this.props.style,\n      role: \"toolbar\",\n      dir: this.props.dir,\n      ref: function (element) {\n        return _this._element = element;\n      },\n      onKeyDown: keyboardNavigation ? this.onKeyDown : undefined\n    }, keyboardNavigation ? React.Children.map(this.props.children, this.mapToolbarChild) : this.props.children);\n  };\n\n  Toolbar.prototype.focusButton = function (prevIndex, index) {\n    var toolbarButton = this.buttons[index];\n\n    if (toolbarButton) {\n      var newFocused = toolbarButton.element;\n      var currentFocused = this.element && this.element.querySelector('button:focus');\n      var _a = this.props.tabIndex,\n          tabIndex = _a === void 0 ? Toolbar.defaultProps.tabIndex : _a;\n      this.focusedIndex = index;\n\n      if (currentFocused !== newFocused) {\n        toolbarButton.tabIndex = tabIndex;\n        toolbarButton.focus();\n        var prevButton = this.buttons[prevIndex];\n\n        if (prevButton) {\n          prevButton.tabIndex = -1;\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Toolbar.propTypes = {\n    tabIndex: PropTypes.number,\n    dir: PropTypes.string,\n    keyboardNavigation: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    onResize: PropTypes.func\n  };\n  /**\n   * @hidden\n   */\n\n  Toolbar.defaultProps = {\n    tabIndex: 0\n  };\n  return Toolbar;\n}(React.Component);\n\nexport default Toolbar;","map":{"version":3,"sources":["../../../src/toolbar/Toolbar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport ToolbarItem from './tools/ToolbarItem';\nimport ToolbarButton from './tools/ToolbarButton';\nimport ButtonGroup from '../ButtonGroup';\nimport { classNames, Keys } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact Toolbar component]({% slug overview_toolbar %}).\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *    render() {\n *       return (\n *          <Toolbar>\n *              <ToolbarItem>\n *                  <ButtonGroup>\n *                      <Button togglable={true} icon=\"bold\" />\n *                      <Button togglable={true} icon=\"italic\" />\n *                      <Button togglable={true} icon=\"underline\" />\n *                  </ButtonGroup>\n *              </ToolbarItem>\n *              <ToolbarItem>\n *                  <ButtonGroup>\n *                      <Button icon=\"hyperlink\">Insert Link</Button>\n *                      <Button icon=\"image\">Insert Image</Button>\n *                      <Button icon=\"table\">Insert Table</Button>\n *                  </ButtonGroup>\n *              </ToolbarItem>\n *          </Toolbar>\n *       );\n *    }\n * }\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nvar Toolbar = /** @class */ (function (_super) {\n    __extends(Toolbar, _super);\n    function Toolbar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._element = null;\n        _this.buttons = [];\n        _this.focusedIndex = 0;\n        _this.counter = 0;\n        _this.offsetHeight = 0;\n        _this.offsetWidth = 0;\n        _this.mapToolbarChild = function (toolbarItem) {\n            if (toolbarItem && toolbarItem.type === ToolbarItem) {\n                return React.cloneElement(toolbarItem, toolbarItem.props, React.Children.map(toolbarItem.props.children, _this.mapItemChildren));\n            }\n            return toolbarItem;\n        };\n        _this.mapItemChildren = function (tool) {\n            if (tool.type === ButtonGroup) {\n                return React.cloneElement(tool, tool.props, React.Children.map(tool.props.children, _this.mapButton));\n            }\n            return _this.mapButton(tool);\n        };\n        _this.mapButton = function (button) {\n            var index = _this.counter;\n            _this.counter++;\n            return (React.createElement(ToolbarButton, { ref: function (b) { return _this.buttonRef(b, index); }, tabIndex: _this.focusedIndex === index ?\n                    (_this.props.tabIndex || Toolbar.defaultProps.tabIndex) : -1, button: button }));\n        };\n        _this.buttonRef = function (button, index) {\n            _this.buttons[index] = button;\n            if (!button && !_this.buttons.find(function (b) { return b !== null; })) {\n                _this.buttons.length = 0;\n            }\n        };\n        _this.onKeyDown = function (event) {\n            var target = event.target;\n            var _a = _this, focusedIndex = _a.focusedIndex, buttons = _a.buttons;\n            var arrowKey = event.keyCode === Keys.left || event.keyCode === Keys.right;\n            if (!arrowKey || event.defaultPrevented || buttons.findIndex(function (b) { return b !== null && b.element === target; }) === -1) {\n                return;\n            }\n            if (event.keyCode === Keys.left) {\n                _this.focusButton(focusedIndex, focusedIndex - 1);\n            }\n            else {\n                _this.focusButton(focusedIndex, focusedIndex + 1);\n            }\n        };\n        _this.onWindowResize = function (event) {\n            var element = _this.element;\n            if (!element) {\n                return;\n            }\n            var offsetWidth = element.offsetWidth;\n            var offsetHeight = element.offsetHeight;\n            if (_this.offsetWidth !== offsetWidth || _this.offsetHeight !== offsetHeight) {\n                _this.offsetWidth = offsetWidth;\n                _this.offsetHeight = offsetHeight;\n                var newSizes = { offsetWidth: _this.offsetWidth, offsetHeight: _this.offsetHeight };\n                if (_this.props.onResize) {\n                    _this.props.onResize.call(undefined, __assign({ target: _this }, newSizes, { nativeEvent: event }));\n                }\n            }\n        };\n        return _this;\n    }\n    Object.defineProperty(Toolbar.prototype, \"element\", {\n        /**\n         * Returns the HTML element of the Toolbar component.\n         */\n        get: function () {\n            return this._element;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.componentDidMount = function () {\n        window.addEventListener('resize', this.onWindowResize);\n        var element = this.element;\n        if (element) {\n            this.offsetWidth = element.offsetWidth;\n            this.offsetHeight = element.offsetHeight;\n        }\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.componentDidUpdate = function () {\n        var _this = this;\n        var element = this.element;\n        if (!element || this.props.keyboardNavigation === false) {\n            return;\n        }\n        var focused = element.querySelector('button:focus');\n        var prevFocusedIndex = this.focusedIndex;\n        if (!focused) {\n            this.focusedIndex = 0;\n        }\n        else {\n            var focusedIndex = this.buttons.findIndex(function (b) { return b !== null && b.element === focused; });\n            if (focusedIndex !== -1 && focusedIndex !== this.focusedIndex) {\n                this.focusedIndex = focusedIndex;\n            }\n        }\n        if (prevFocusedIndex !== this.focusedIndex) {\n            var _a = this.props.tabIndex, tabIndex_1 = _a === void 0 ? Toolbar.defaultProps.tabIndex : _a;\n            this.buttons.forEach(function (button, index) {\n                if (button) {\n                    button.tabIndex = (index === _this.focusedIndex && button.tabIndex === -1) ?\n                        tabIndex_1 : -1;\n                }\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.componentWillUnmount = function () {\n        window.removeEventListener('resize', this.onWindowResize);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.render = function () {\n        var _this = this;\n        var keyboardNavigation = this.props.keyboardNavigation !== false;\n        this.counter = 0;\n        return (React.createElement(\"div\", { className: classNames('k-widget k-toolbar', this.props.className), style: this.props.style, role: \"toolbar\", dir: this.props.dir, ref: function (element) { return _this._element = element; }, onKeyDown: keyboardNavigation ? this.onKeyDown : undefined }, keyboardNavigation ?\n            React.Children.map(this.props.children, this.mapToolbarChild) :\n            this.props.children));\n    };\n    Toolbar.prototype.focusButton = function (prevIndex, index) {\n        var toolbarButton = this.buttons[index];\n        if (toolbarButton) {\n            var newFocused = toolbarButton.element;\n            var currentFocused = this.element &&\n                this.element.querySelector('button:focus');\n            var _a = this.props.tabIndex, tabIndex = _a === void 0 ? Toolbar.defaultProps.tabIndex : _a;\n            this.focusedIndex = index;\n            if (currentFocused !== newFocused) {\n                toolbarButton.tabIndex = tabIndex;\n                toolbarButton.focus();\n                var prevButton = this.buttons[prevIndex];\n                if (prevButton) {\n                    prevButton.tabIndex = -1;\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.propTypes = {\n        tabIndex: PropTypes.number,\n        dir: PropTypes.string,\n        keyboardNavigation: PropTypes.bool,\n        style: PropTypes.object,\n        className: PropTypes.string,\n        onResize: PropTypes.func\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.defaultProps = {\n        tabIndex: 0\n    };\n    return Toolbar;\n}(React.Component));\nexport default Toolbar;\n//# sourceMappingURL=Toolbar.js.map"]},"metadata":{},"sourceType":"module"}