{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n/**\n * @hidden\n */\n\n\nexport var RANGE_ACTION;\n\n(function (RANGE_ACTION) {\n  RANGE_ACTION[\"start\"] = \"start\";\n  RANGE_ACTION[\"end\"] = \"end\";\n  RANGE_ACTION[\"min\"] = \"min\";\n  RANGE_ACTION[\"max\"] = \"max\";\n  RANGE_ACTION[\"increase\"] = \"increase\";\n  RANGE_ACTION[\"decrease\"] = \"decrease\";\n})(RANGE_ACTION || (RANGE_ACTION = {}));\n/**\n * @hidden\n */\n\n\nexport var rangeReducer = function (state, action) {\n  var newState;\n  var newValue;\n\n  switch (action.type) {\n    case RANGE_ACTION.start:\n      if (action.payload === undefined) {\n        return state;\n      }\n\n      newState = {\n        start: action.payload > state.end ? state.end : Math.max(action.payload, action.min),\n        end: state.end\n      };\n      break;\n\n    case RANGE_ACTION.end:\n      if (action.payload === undefined) {\n        return state;\n      }\n\n      newState = {\n        start: state.start,\n        end: action.payload < state.start ? state.start : Math.min(action.payload, action.max)\n      };\n      break;\n\n    case RANGE_ACTION.min:\n      if (action.key === 'start') {\n        newState = __assign({}, state, {\n          start: action.min\n        });\n      } else {\n        newState = __assign({}, state, {\n          end: Math.max(action.min, state.start)\n        });\n      }\n\n      break;\n\n    case RANGE_ACTION.max:\n      if (action.key === 'start') {\n        newState = __assign({}, state, {\n          start: Math.min(action.max, state.end)\n        });\n      } else {\n        newState = __assign({}, state, {\n          end: action.max\n        });\n      }\n\n      break;\n\n    case RANGE_ACTION.increase:\n      if (action.step === undefined || action.key === undefined) {\n        return state;\n      }\n\n      newValue = state[action.key] + action.step;\n\n      if (action.key === 'start') {\n        if (newValue < action.min) {\n          newState = __assign({}, state, {\n            start: action.min\n          });\n        } else {\n          newState = __assign({}, state, {\n            start: Math.min(newValue, state.end)\n          });\n        }\n      } else {\n        if (newValue > action.max) {\n          newState = __assign({}, state, {\n            end: action.max\n          });\n        } else {\n          newState = __assign({}, state, {\n            end: Math.max(newValue, state.start)\n          });\n        }\n      }\n\n      break;\n\n    case RANGE_ACTION.decrease:\n      if (action.step === undefined || action.key === undefined) {\n        return state;\n      }\n\n      newValue = state[action.key] - action.step;\n\n      if (action.key === 'start') {\n        if (newValue < action.min) {\n          newState = __assign({}, state, {\n            start: action.min\n          });\n        } else {\n          newState = __assign({}, state, {\n            start: Math.min(newValue, state.end)\n          });\n        }\n      } else {\n        if (newValue > action.max) {\n          newState = __assign({}, state, {\n            end: action.max\n          });\n        } else {\n          newState = __assign({}, state, {\n            end: Math.max(newValue, state.start)\n          });\n        }\n      }\n\n      break;\n\n    default:\n      newState = state;\n      break;\n  }\n\n  return newState;\n};","map":{"version":3,"sources":["../../../src/range-slider/range-raducer.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * @hidden\n */\nexport var RANGE_ACTION;\n(function (RANGE_ACTION) {\n    RANGE_ACTION[\"start\"] = \"start\";\n    RANGE_ACTION[\"end\"] = \"end\";\n    RANGE_ACTION[\"min\"] = \"min\";\n    RANGE_ACTION[\"max\"] = \"max\";\n    RANGE_ACTION[\"increase\"] = \"increase\";\n    RANGE_ACTION[\"decrease\"] = \"decrease\";\n})(RANGE_ACTION || (RANGE_ACTION = {}));\n/**\n * @hidden\n */\nexport var rangeReducer = function (state, action) {\n    var newState;\n    var newValue;\n    switch (action.type) {\n        case RANGE_ACTION.start:\n            if (action.payload === undefined) {\n                return state;\n            }\n            newState = {\n                start: action.payload > state.end ? state.end : Math.max(action.payload, action.min),\n                end: state.end\n            };\n            break;\n        case RANGE_ACTION.end:\n            if (action.payload === undefined) {\n                return state;\n            }\n            newState = {\n                start: state.start,\n                end: action.payload < state.start ? state.start : Math.min(action.payload, action.max)\n            };\n            break;\n        case RANGE_ACTION.min:\n            if (action.key === 'start') {\n                newState = __assign({}, state, { start: action.min });\n            }\n            else {\n                newState = __assign({}, state, { end: Math.max(action.min, state.start) });\n            }\n            break;\n        case RANGE_ACTION.max:\n            if (action.key === 'start') {\n                newState = __assign({}, state, { start: Math.min(action.max, state.end) });\n            }\n            else {\n                newState = __assign({}, state, { end: action.max });\n            }\n            break;\n        case RANGE_ACTION.increase:\n            if (action.step === undefined || action.key === undefined) {\n                return state;\n            }\n            newValue = state[action.key] + action.step;\n            if (action.key === 'start') {\n                if (newValue < action.min) {\n                    newState = __assign({}, state, { start: action.min });\n                }\n                else {\n                    newState = __assign({}, state, { start: Math.min(newValue, state.end) });\n                }\n            }\n            else {\n                if (newValue > action.max) {\n                    newState = __assign({}, state, { end: action.max });\n                }\n                else {\n                    newState = __assign({}, state, { end: Math.max(newValue, state.start) });\n                }\n            }\n            break;\n        case RANGE_ACTION.decrease:\n            if (action.step === undefined || action.key === undefined) {\n                return state;\n            }\n            newValue = state[action.key] - action.step;\n            if (action.key === 'start') {\n                if (newValue < action.min) {\n                    newState = __assign({}, state, { start: action.min });\n                }\n                else {\n                    newState = __assign({}, state, { start: Math.min(newValue, state.end) });\n                }\n            }\n            else {\n                if (newValue > action.max) {\n                    newState = __assign({}, state, { end: action.max });\n                }\n                else {\n                    newState = __assign({}, state, { end: Math.max(newValue, state.start) });\n                }\n            }\n            break;\n        default:\n            newState = state;\n            break;\n    }\n    return newState;\n};\n//# sourceMappingURL=range-raducer.js.map"]},"metadata":{},"sourceType":"module"}