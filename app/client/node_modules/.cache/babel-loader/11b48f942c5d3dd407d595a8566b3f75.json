{"ast":null,"code":"import { messages as msg } from './messages';\n\nvar traverse = function (iterable, langInfo, acc) {\n  for (var key in iterable) {\n    if (iterable.hasOwnProperty(key)) {\n      var accumulator = acc.slice();\n      accumulator.push(key);\n\n      if (typeof iterable[key] !== 'string') {\n        traverse(iterable[key], langInfo, accumulator);\n      } else {\n        var value = iterable[key];\n        Object.defineProperty(langInfo, accumulator.join('.'), {\n          value: value\n        });\n      }\n    }\n  }\n};\n/**\n * Provides mechanism to load language-specific messages for the KendoReact components.\n *\n * @param messages - An iterable object which contains key-value pairs.\n * @param languages - The language to which the messages are associated.\n */\n\n\nexport function loadMessages(messages, language) {\n  var langInfo = msg[language] = msg[language] || {};\n  traverse(messages, langInfo, []);\n}","map":{"version":3,"sources":["../../../src/Localization/loadMessages.ts"],"names":[],"mappings":"AAAA,SAAS,QAAQ,IAAI,GAArB,QAAgC,YAAhC;;AAEA,IAAM,QAAQ,GAAG,UAAC,QAAD,EAAgB,QAAhB,EAA+B,GAA/B,EAAiD;AAC9D,OAAK,IAAM,GAAX,IAAkB,QAAlB,EAA4B;AACxB,QAAI,QAAQ,CAAC,cAAT,CAAwB,GAAxB,CAAJ,EAAkC;AAC9B,UAAM,WAAW,GAAO,GAAG,CAAA,KAAH,EAAxB;AACA,MAAA,WAAW,CAAC,IAAZ,CAAiB,GAAjB;;AAEA,UAAI,OAAO,QAAQ,CAAC,GAAD,CAAf,KAAyB,QAA7B,EAAuC;AACnC,QAAA,QAAQ,CAAC,QAAQ,CAAC,GAAD,CAAT,EAAgB,QAAhB,EAA0B,WAA1B,CAAR;AACH,OAFD,MAEO;AACH,YAAM,KAAK,GAAG,QAAQ,CAAC,GAAD,CAAtB;AACA,QAAA,MAAM,CAAC,cAAP,CAAsB,QAAtB,EAAgC,WAAW,CAAC,IAAZ,CAAiB,GAAjB,CAAhC,EAAuD;AAAE,UAAA,KAAK,EAAA;AAAP,SAAvD;AACH;AACJ;AACJ;AACJ,CAdD;AAgBA;;;;;;;;AAMA,OAAM,SAAU,YAAV,CAAuB,QAAvB,EAAsC,QAAtC,EAAsD;AACxD,MAAI,QAAQ,GAAG,GAAG,CAAC,QAAD,CAAH,GAAgB,GAAG,CAAC,QAAD,CAAH,IAAiB,EAAhD;AAEA,EAAA,QAAQ,CAAC,QAAD,EAAW,QAAX,EAAqB,EAArB,CAAR;AACH","sourceRoot":"","sourcesContent":["import { messages as msg } from './messages';\nvar traverse = function (iterable, langInfo, acc) {\n    for (var key in iterable) {\n        if (iterable.hasOwnProperty(key)) {\n            var accumulator = acc.slice();\n            accumulator.push(key);\n            if (typeof iterable[key] !== 'string') {\n                traverse(iterable[key], langInfo, accumulator);\n            }\n            else {\n                var value = iterable[key];\n                Object.defineProperty(langInfo, accumulator.join('.'), { value: value });\n            }\n        }\n    }\n};\n/**\n * Provides mechanism to load language-specific messages for the KendoReact components.\n *\n * @param messages - An iterable object which contains key-value pairs.\n * @param languages - The language to which the messages are associated.\n */\nexport function loadMessages(messages, language) {\n    var langInfo = msg[language] = msg[language] || {};\n    traverse(messages, langInfo, []);\n}\n//# sourceMappingURL=loadMessages.js.map"]},"metadata":{},"sourceType":"module"}