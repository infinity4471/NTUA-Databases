{"ast":null,"code":"import { defined } from '../util';\nvar GRADIENT = \"Gradient\";\nvar Paintable = {\n  extend: function (proto) {\n    proto.fill = this.fill;\n    proto.stroke = this.stroke;\n  },\n  fill: function (color, opacity) {\n    var options = this.options;\n\n    if (defined(color)) {\n      if (color && color.nodeType !== GRADIENT) {\n        var newFill = {\n          color: color\n        };\n\n        if (defined(opacity)) {\n          newFill.opacity = opacity;\n        }\n\n        options.set(\"fill\", newFill);\n      } else {\n        options.set(\"fill\", color);\n      }\n\n      return this;\n    }\n\n    return options.get(\"fill\");\n  },\n  stroke: function (color, width, opacity) {\n    if (defined(color)) {\n      this.options.set(\"stroke.color\", color);\n\n      if (defined(width)) {\n        this.options.set(\"stroke.width\", width);\n      }\n\n      if (defined(opacity)) {\n        this.options.set(\"stroke.opacity\", opacity);\n      }\n\n      return this;\n    }\n\n    return this.options.get(\"stroke\");\n  }\n};\nexport default Paintable;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/mixins/paintable.js"],"names":["defined","GRADIENT","Paintable","extend","proto","fill","stroke","color","opacity","options","nodeType","newFill","set","get","width"],"mappings":"AAAA,SAASA,OAAT,QAAwB,SAAxB;AAEA,IAAIC,QAAQ,GAAG,UAAf;AAEA,IAAIC,SAAS,GAAG;AACZC,EAAAA,MAAM,EAAE,UAASC,KAAT,EAAgB;AACpBA,IAAAA,KAAK,CAACC,IAAN,GAAa,KAAKA,IAAlB;AACAD,IAAAA,KAAK,CAACE,MAAN,GAAe,KAAKA,MAApB;AACH,GAJW;AAMZD,EAAAA,IAAI,EAAE,UAASE,KAAT,EAAgBC,OAAhB,EAAyB;AAC3B,QAAIC,OAAO,GAAG,KAAKA,OAAnB;;AAEA,QAAIT,OAAO,CAACO,KAAD,CAAX,EAAoB;AAChB,UAAIA,KAAK,IAAIA,KAAK,CAACG,QAAN,KAAmBT,QAAhC,EAA0C;AACtC,YAAIU,OAAO,GAAG;AACVJ,UAAAA,KAAK,EAAEA;AADG,SAAd;;AAGA,YAAIP,OAAO,CAACQ,OAAD,CAAX,EAAsB;AAClBG,UAAAA,OAAO,CAACH,OAAR,GAAkBA,OAAlB;AACH;;AACDC,QAAAA,OAAO,CAACG,GAAR,CAAY,MAAZ,EAAoBD,OAApB;AACH,OARD,MAQO;AACHF,QAAAA,OAAO,CAACG,GAAR,CAAY,MAAZ,EAAoBL,KAApB;AACH;;AAED,aAAO,IAAP;AACH;;AAED,WAAOE,OAAO,CAACI,GAAR,CAAY,MAAZ,CAAP;AACH,GA1BW;AA4BZP,EAAAA,MAAM,EAAE,UAASC,KAAT,EAAgBO,KAAhB,EAAuBN,OAAvB,EAAgC;AACpC,QAAIR,OAAO,CAACO,KAAD,CAAX,EAAoB;AAChB,WAAKE,OAAL,CAAaG,GAAb,CAAiB,cAAjB,EAAiCL,KAAjC;;AAEA,UAAIP,OAAO,CAACc,KAAD,CAAX,EAAoB;AAChB,aAAKL,OAAL,CAAaG,GAAb,CAAiB,cAAjB,EAAiCE,KAAjC;AACH;;AAED,UAAId,OAAO,CAACQ,OAAD,CAAX,EAAsB;AAClB,aAAKC,OAAL,CAAaG,GAAb,CAAiB,gBAAjB,EAAmCJ,OAAnC;AACH;;AAED,aAAO,IAAP;AACH;;AAED,WAAO,KAAKC,OAAL,CAAaI,GAAb,CAAiB,QAAjB,CAAP;AACH;AA5CW,CAAhB;AA+CA,eAAeX,SAAf","sourcesContent":["import { defined } from '../util';\n\nvar GRADIENT = \"Gradient\";\n\nvar Paintable = {\n    extend: function(proto) {\n        proto.fill = this.fill;\n        proto.stroke = this.stroke;\n    },\n\n    fill: function(color, opacity) {\n        var options = this.options;\n\n        if (defined(color)) {\n            if (color && color.nodeType !== GRADIENT) {\n                var newFill = {\n                    color: color\n                };\n                if (defined(opacity)) {\n                    newFill.opacity = opacity;\n                }\n                options.set(\"fill\", newFill);\n            } else {\n                options.set(\"fill\", color);\n            }\n\n            return this;\n        }\n\n        return options.get(\"fill\");\n    },\n\n    stroke: function(color, width, opacity) {\n        if (defined(color)) {\n            this.options.set(\"stroke.color\", color);\n\n            if (defined(width)) {\n                this.options.set(\"stroke.width\", width);\n            }\n\n            if (defined(opacity)) {\n                this.options.set(\"stroke.opacity\", opacity);\n            }\n\n            return this;\n        }\n\n        return this.options.get(\"stroke\");\n    }\n};\n\nexport default Paintable;"]},"metadata":{},"sourceType":"module"}