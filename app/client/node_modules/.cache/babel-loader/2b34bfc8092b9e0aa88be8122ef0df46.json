{"ast":null,"code":"import GeometryArc from '../geometry/arc';\nimport Element from './element';\nimport Path from './path';\nimport Paintable from '../mixins/paintable';\nimport Measurable from '../mixins/measurable';\nimport defineGeometryAccessors from '../accessors/define-geometry-accessors';\nimport { defined } from '../util';\nvar DEFAULT_STROKE = \"#000\";\n\nvar Arc = function (Element) {\n  function Arc(geometry, options) {\n    if (geometry === void 0) geometry = new GeometryArc();\n    if (options === void 0) options = {};\n    Element.call(this, options);\n    this.geometry(geometry);\n\n    if (!defined(this.options.stroke)) {\n      this.stroke(DEFAULT_STROKE);\n    }\n  }\n\n  if (Element) Arc.__proto__ = Element;\n  Arc.prototype = Object.create(Element && Element.prototype);\n  Arc.prototype.constructor = Arc;\n\n  Arc.prototype._bbox = function _bbox(matrix) {\n    return this._geometry.bbox(matrix);\n  };\n\n  Arc.prototype.rawBBox = function rawBBox() {\n    return this.geometry().bbox();\n  };\n\n  Arc.prototype.toPath = function toPath() {\n    var path = new Path();\n    var curvePoints = this.geometry().curvePoints();\n\n    if (curvePoints.length > 0) {\n      path.moveTo(curvePoints[0].x, curvePoints[0].y);\n\n      for (var i = 1; i < curvePoints.length; i += 3) {\n        path.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n      }\n    }\n\n    return path;\n  };\n\n  Arc.prototype._containsPoint = function _containsPoint(point) {\n    return this.geometry().containsPoint(point);\n  };\n\n  Arc.prototype._isOnPath = function _isOnPath(point) {\n    return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n  };\n\n  return Arc;\n}(Element);\n\nArc.prototype.nodeType = \"Arc\";\nPaintable.extend(Arc.prototype);\nMeasurable.extend(Arc.prototype);\ndefineGeometryAccessors(Arc.prototype, [\"geometry\"]);\nexport default Arc;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/shapes/arc.js"],"names":["GeometryArc","Element","Path","Paintable","Measurable","defineGeometryAccessors","defined","DEFAULT_STROKE","Arc","geometry","options","call","stroke","__proto__","prototype","Object","create","constructor","_bbox","matrix","_geometry","bbox","rawBBox","toPath","path","curvePoints","length","moveTo","x","y","i","curveTo","_containsPoint","point","containsPoint","_isOnPath","width","nodeType","extend"],"mappings":"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","sourcesContent":["import GeometryArc from '../geometry/arc';\nimport Element from './element';\nimport Path from './path';\nimport Paintable from '../mixins/paintable';\nimport Measurable from '../mixins/measurable';\nimport defineGeometryAccessors from '../accessors/define-geometry-accessors';\nimport { defined } from '../util';\n\nvar DEFAULT_STROKE = \"#000\";\n\nvar Arc = (function (Element) {\n    function Arc(geometry, options) {\n        if ( geometry === void 0 ) geometry = new GeometryArc();\n        if ( options === void 0 ) options = {};\n\n        Element.call(this, options);\n\n        this.geometry(geometry);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(DEFAULT_STROKE);\n        }\n    }\n\n    if ( Element ) Arc.__proto__ = Element;\n    Arc.prototype = Object.create( Element && Element.prototype );\n    Arc.prototype.constructor = Arc;\n\n    Arc.prototype._bbox = function _bbox (matrix) {\n        return this._geometry.bbox(matrix);\n    };\n\n    Arc.prototype.rawBBox = function rawBBox () {\n        return this.geometry().bbox();\n    };\n\n    Arc.prototype.toPath = function toPath () {\n        var path = new Path();\n        var curvePoints = this.geometry().curvePoints();\n\n        if (curvePoints.length > 0) {\n            path.moveTo(curvePoints[0].x, curvePoints[0].y);\n\n            for (var i = 1; i < curvePoints.length; i += 3) {\n                path.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n            }\n        }\n\n        return path;\n    };\n\n    Arc.prototype._containsPoint = function _containsPoint (point) {\n        return this.geometry().containsPoint(point);\n    };\n\n    Arc.prototype._isOnPath = function _isOnPath (point) {\n        return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    };\n\n    return Arc;\n}(Element));\n\nArc.prototype.nodeType = \"Arc\";\n\nPaintable.extend(Arc.prototype);\nMeasurable.extend(Arc.prototype);\ndefineGeometryAccessors(Arc.prototype, [ \"geometry\" ]);\n\nexport default Arc;"]},"metadata":{},"sourceType":"module"}