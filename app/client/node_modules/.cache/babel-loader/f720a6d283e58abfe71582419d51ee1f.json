{"ast":null,"code":"import defineAccessors from '../accessors/define-accessors';\nimport ObserversMixin from '../mixins/observers-mixin';\nimport { Class } from '../common';\nimport { defined, MIN_NUM, MAX_NUM, round } from '../util';\nimport Matrix from './matrix';\nimport toMatrix from './to-matrix';\n\nvar Point = function (Class) {\n  function Point(x, y) {\n    Class.call(this);\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  if (Class) Point.__proto__ = Class;\n  Point.prototype = Object.create(Class && Class.prototype);\n  Point.prototype.constructor = Point;\n  var staticAccessors = {\n    ZERO: {\n      configurable: true\n    }\n  };\n\n  Point.prototype.equals = function equals(other) {\n    return other && other.x === this.x && other.y === this.y;\n  };\n\n  Point.prototype.clone = function clone() {\n    return new Point(this.x, this.y);\n  };\n\n  Point.prototype.rotate = function rotate(angle, origin) {\n    var originPoint = Point.create(origin) || Point.ZERO;\n    return this.transform(Matrix.rotate(angle, originPoint.x, originPoint.y));\n  };\n\n  Point.prototype.translate = function translate(x, y) {\n    this.x += x;\n    this.y += y;\n    this.geometryChange();\n    return this;\n  };\n\n  Point.prototype.translateWith = function translateWith(point) {\n    return this.translate(point.x, point.y);\n  };\n\n  Point.prototype.move = function move(x, y) {\n    this.x = this.y = 0;\n    return this.translate(x, y);\n  };\n\n  Point.prototype.scale = function scale(scaleX, scaleY) {\n    if (scaleY === void 0) scaleY = scaleX;\n    this.x *= scaleX;\n    this.y *= scaleY;\n    this.geometryChange();\n    return this;\n  };\n\n  Point.prototype.scaleCopy = function scaleCopy(scaleX, scaleY) {\n    return this.clone().scale(scaleX, scaleY);\n  };\n\n  Point.prototype.transform = function transform(transformation) {\n    var matrix = toMatrix(transformation);\n    var ref = this;\n    var x = ref.x;\n    var y = ref.y;\n    this.x = matrix.a * x + matrix.c * y + matrix.e;\n    this.y = matrix.b * x + matrix.d * y + matrix.f;\n    this.geometryChange();\n    return this;\n  };\n\n  Point.prototype.transformCopy = function transformCopy(transformation) {\n    var point = this.clone();\n\n    if (transformation) {\n      point.transform(transformation);\n    }\n\n    return point;\n  };\n\n  Point.prototype.distanceTo = function distanceTo(point) {\n    var dx = this.x - point.x;\n    var dy = this.y - point.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  Point.prototype.round = function round$1(digits) {\n    this.x = round(this.x, digits);\n    this.y = round(this.y, digits);\n    this.geometryChange();\n    return this;\n  };\n\n  Point.prototype.toArray = function toArray(digits) {\n    var doRound = defined(digits);\n    var x = doRound ? round(this.x, digits) : this.x;\n    var y = doRound ? round(this.y, digits) : this.y;\n    return [x, y];\n  };\n\n  Point.prototype.toString = function toString(digits, separator) {\n    if (separator === void 0) separator = \" \";\n    var ref = this;\n    var x = ref.x;\n    var y = ref.y;\n\n    if (defined(digits)) {\n      x = round(x, digits);\n      y = round(y, digits);\n    }\n\n    return x + separator + y;\n  };\n\n  Point.create = function create(arg0, arg1) {\n    if (defined(arg0)) {\n      if (arg0 instanceof Point) {\n        return arg0;\n      } else if (arguments.length === 1 && arg0.length === 2) {\n        return new Point(arg0[0], arg0[1]);\n      }\n\n      return new Point(arg0, arg1);\n    }\n  };\n\n  Point.min = function min() {\n    var arguments$1 = arguments;\n    var minX = MAX_NUM;\n    var minY = MAX_NUM;\n\n    for (var i = 0; i < arguments.length; i++) {\n      var point = arguments$1[i];\n      minX = Math.min(point.x, minX);\n      minY = Math.min(point.y, minY);\n    }\n\n    return new Point(minX, minY);\n  };\n\n  Point.max = function max() {\n    var arguments$1 = arguments;\n    var maxX = MIN_NUM;\n    var maxY = MIN_NUM;\n\n    for (var i = 0; i < arguments.length; i++) {\n      var point = arguments$1[i];\n      maxX = Math.max(point.x, maxX);\n      maxY = Math.max(point.y, maxY);\n    }\n\n    return new Point(maxX, maxY);\n  };\n\n  Point.minPoint = function minPoint() {\n    return new Point(MIN_NUM, MIN_NUM);\n  };\n\n  Point.maxPoint = function maxPoint() {\n    return new Point(MAX_NUM, MAX_NUM);\n  };\n\n  staticAccessors.ZERO.get = function () {\n    return new Point(0, 0);\n  };\n\n  Object.defineProperties(Point, staticAccessors);\n  return Point;\n}(Class);\n\ndefineAccessors(Point.prototype, [\"x\", \"y\"]);\nObserversMixin.extend(Point.prototype);\nexport default Point;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/geometry/point.js"],"names":["defineAccessors","ObserversMixin","Class","defined","MIN_NUM","MAX_NUM","round","Matrix","toMatrix","Point","x","y","call","__proto__","prototype","Object","create","constructor","staticAccessors","ZERO","configurable","equals","other","clone","rotate","angle","origin","originPoint","transform","translate","geometryChange","translateWith","point","move","scale","scaleX","scaleY","scaleCopy","transformation","matrix","ref","a","c","e","b","d","f","transformCopy","distanceTo","dx","dy","Math","sqrt","round$1","digits","toArray","doRound","toString","separator","arg0","arg1","arguments","length","min","arguments$1","minX","minY","i","max","maxX","maxY","minPoint","maxPoint","get","defineProperties","extend"],"mappings":"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","sourcesContent":["import defineAccessors from '../accessors/define-accessors';\nimport ObserversMixin from '../mixins/observers-mixin';\nimport { Class } from '../common';\nimport { defined, MIN_NUM, MAX_NUM, round } from '../util';\nimport Matrix from './matrix';\nimport toMatrix from './to-matrix';\n\nvar Point = (function (Class) {\n    function Point(x, y) {\n        Class.call(this);\n\n        this.x = x || 0;\n        this.y = y || 0;\n    }\n\n    if ( Class ) Point.__proto__ = Class;\n    Point.prototype = Object.create( Class && Class.prototype );\n    Point.prototype.constructor = Point;\n\n    var staticAccessors = { ZERO: { configurable: true } };\n\n    Point.prototype.equals = function equals (other) {\n        return other && other.x === this.x && other.y === this.y;\n    };\n\n    Point.prototype.clone = function clone () {\n        return new Point(this.x, this.y);\n    };\n\n    Point.prototype.rotate = function rotate (angle, origin) {\n        var originPoint = Point.create(origin) || Point.ZERO;\n\n        return this.transform(Matrix.rotate(angle, originPoint.x, originPoint.y));\n    };\n\n    Point.prototype.translate = function translate (x, y) {\n        this.x += x;\n        this.y += y;\n\n        this.geometryChange();\n\n        return this;\n    };\n\n    Point.prototype.translateWith = function translateWith (point) {\n        return this.translate(point.x, point.y);\n    };\n\n    Point.prototype.move = function move (x, y) {\n        this.x = this.y = 0;\n        return this.translate(x, y);\n    };\n\n    Point.prototype.scale = function scale (scaleX, scaleY) {\n        if ( scaleY === void 0 ) scaleY = scaleX;\n\n        this.x *= scaleX;\n        this.y *= scaleY;\n\n        this.geometryChange();\n\n        return this;\n    };\n\n    Point.prototype.scaleCopy = function scaleCopy (scaleX, scaleY) {\n        return this.clone().scale(scaleX, scaleY);\n    };\n\n    Point.prototype.transform = function transform (transformation) {\n        var matrix = toMatrix(transformation);\n        var ref = this;\n        var x = ref.x;\n        var y = ref.y;\n\n        this.x = matrix.a * x + matrix.c * y + matrix.e;\n        this.y = matrix.b * x + matrix.d * y + matrix.f;\n\n        this.geometryChange();\n\n        return this;\n    };\n\n    Point.prototype.transformCopy = function transformCopy (transformation) {\n        var point = this.clone();\n\n        if (transformation) {\n            point.transform(transformation);\n        }\n\n        return point;\n    };\n\n    Point.prototype.distanceTo = function distanceTo (point) {\n        var dx = this.x - point.x;\n        var dy = this.y - point.y;\n\n        return Math.sqrt(dx * dx + dy * dy);\n    };\n\n    Point.prototype.round = function round$1 (digits) {\n        this.x = round(this.x, digits);\n        this.y = round(this.y, digits);\n\n        this.geometryChange();\n\n        return this;\n    };\n\n    Point.prototype.toArray = function toArray (digits) {\n        var doRound = defined(digits);\n        var x = doRound ? round(this.x, digits) : this.x;\n        var y = doRound ? round(this.y, digits) : this.y;\n\n        return [ x, y ];\n    };\n\n    Point.prototype.toString = function toString (digits, separator) {\n        if ( separator === void 0 ) separator = \" \";\n\n        var ref = this;\n        var x = ref.x;\n        var y = ref.y;\n\n        if (defined(digits)) {\n            x = round(x, digits);\n            y = round(y, digits);\n        }\n\n        return x + separator + y;\n    };\n\n    Point.create = function create (arg0, arg1) {\n        if (defined(arg0)) {\n            if (arg0 instanceof Point) {\n                return arg0;\n            } else if (arguments.length === 1 && arg0.length === 2) {\n                return new Point(arg0[0], arg0[1]);\n            }\n\n            return new Point(arg0, arg1);\n        }\n    };\n\n    Point.min = function min () {\n        var arguments$1 = arguments;\n\n        var minX = MAX_NUM;\n        var minY = MAX_NUM;\n\n        for (var i = 0; i < arguments.length; i++) {\n            var point = arguments$1[i];\n            minX = Math.min(point.x, minX);\n            minY = Math.min(point.y, minY);\n        }\n\n        return new Point(minX, minY);\n    };\n\n    Point.max = function max () {\n        var arguments$1 = arguments;\n\n        var maxX = MIN_NUM;\n        var maxY = MIN_NUM;\n\n        for (var i = 0; i < arguments.length; i++) {\n            var point = arguments$1[i];\n            maxX = Math.max(point.x, maxX);\n            maxY = Math.max(point.y, maxY);\n        }\n\n        return new Point(maxX, maxY);\n    };\n\n    Point.minPoint = function minPoint () {\n        return new Point(MIN_NUM, MIN_NUM);\n    };\n\n    Point.maxPoint = function maxPoint () {\n        return new Point(MAX_NUM, MAX_NUM);\n    };\n\n    staticAccessors.ZERO.get = function () {\n        return new Point(0, 0);\n    };\n\n    Object.defineProperties( Point, staticAccessors );\n\n    return Point;\n}(Class));\n\ndefineAccessors(Point.prototype, [ \"x\", \"y\" ]);\nObserversMixin.extend(Point.prototype);\n\nexport default Point;\n"]},"metadata":{},"sourceType":"module"}