{"ast":null,"code":"import Group from '../shapes/group';\nimport Point from '../geometry/point';\nimport SurfaceFactory from './surface-factory';\nimport { Observable } from '../common';\nimport { eventElement, eventCoordinates, elementStyles, elementSize, elementOffset } from '../util';\nvar events = [\"click\", \"mouseenter\", \"mouseleave\", \"mousemove\", \"resize\"];\n\nvar Surface = function (Observable) {\n  function Surface(element, options) {\n    Observable.call(this);\n    this.options = Object.assign({}, options);\n    this.element = element;\n    this.element._kendoExportVisual = this.exportVisual.bind(this);\n    this._click = this._handler(\"click\");\n    this._mouseenter = this._handler(\"mouseenter\");\n    this._mouseleave = this._handler(\"mouseleave\");\n    this._mousemove = this._handler(\"mousemove\");\n    this._visual = new Group();\n    elementSize(element, this.options);\n    this.bind(events, this.options);\n\n    this._enableTracking();\n  }\n\n  if (Observable) Surface.__proto__ = Observable;\n  Surface.prototype = Object.create(Observable && Observable.prototype);\n  Surface.prototype.constructor = Surface;\n\n  Surface.prototype.draw = function draw(element) {\n    this._visual.children.push(element);\n  };\n\n  Surface.prototype.clear = function clear() {\n    this._visual.children = [];\n  };\n\n  Surface.prototype.destroy = function destroy() {\n    this._visual = null;\n    this.element._kendoExportVisual = null;\n    this.unbind();\n  };\n\n  Surface.prototype.eventTarget = function eventTarget(e) {\n    var this$1 = this;\n    var domNode = eventElement(e);\n    var node;\n\n    while (!node && domNode) {\n      node = domNode._kendoNode;\n\n      if (domNode === this$1.element) {\n        break;\n      }\n\n      domNode = domNode.parentElement;\n    }\n\n    if (node) {\n      return node.srcElement;\n    }\n  };\n\n  Surface.prototype.exportVisual = function exportVisual() {\n    return this._visual;\n  };\n\n  Surface.prototype.getSize = function getSize() {\n    return elementSize(this.element);\n  };\n\n  Surface.prototype.currentSize = function currentSize(size) {\n    if (size) {\n      this._size = size;\n    } else {\n      return this._size;\n    }\n  };\n\n  Surface.prototype.setSize = function setSize(size) {\n    elementSize(this.element, size);\n    this.currentSize(size);\n\n    this._resize();\n  };\n\n  Surface.prototype.resize = function resize(force) {\n    var size = this.getSize();\n    var currentSize = this.currentSize();\n\n    if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n      this.currentSize(size);\n\n      this._resize(size, force);\n\n      this.trigger(\"resize\", size);\n    }\n  };\n\n  Surface.prototype.size = function size(value) {\n    if (!value) {\n      return this.getSize();\n    }\n\n    this.setSize(value);\n  };\n\n  Surface.prototype.suspendTracking = function suspendTracking() {\n    this._suspendedTracking = true;\n  };\n\n  Surface.prototype.resumeTracking = function resumeTracking() {\n    this._suspendedTracking = false;\n  };\n\n  Surface.prototype._enableTracking = function _enableTracking() {};\n\n  Surface.prototype._resize = function _resize() {};\n\n  Surface.prototype._handler = function _handler(eventName) {\n    var this$1 = this;\n    return function (e) {\n      var node = this$1.eventTarget(e);\n\n      if (node && !this$1._suspendedTracking) {\n        this$1.trigger(eventName, {\n          element: node,\n          originalEvent: e,\n          type: eventName\n        });\n      }\n    };\n  };\n\n  Surface.prototype._elementOffset = function _elementOffset() {\n    var element = this.element;\n    var ref = elementStyles(element, [\"paddingLeft\", \"paddingTop\"]);\n    var paddingLeft = ref.paddingLeft;\n    var paddingTop = ref.paddingTop;\n    var ref$1 = elementOffset(element);\n    var left = ref$1.left;\n    var top = ref$1.top;\n    return {\n      left: left + parseInt(paddingLeft, 10),\n      top: top + parseInt(paddingTop, 10)\n    };\n  };\n\n  Surface.prototype._surfacePoint = function _surfacePoint(e) {\n    var offset = this._elementOffset();\n\n    var coord = eventCoordinates(e);\n    var x = coord.x - offset.left;\n    var y = coord.y - offset.top;\n    return new Point(x, y);\n  };\n\n  return Surface;\n}(Observable);\n\nSurface.create = function (element, options) {\n  return SurfaceFactory.current.create(element, options);\n};\n\nSurface.support = {};\nexport default Surface;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/core/surface.js"],"names":["Group","Point","SurfaceFactory","Observable","eventElement","eventCoordinates","elementStyles","elementSize","elementOffset","events","Surface","element","options","call","Object","assign","_kendoExportVisual","exportVisual","bind","_click","_handler","_mouseenter","_mouseleave","_mousemove","_visual","_enableTracking","__proto__","prototype","create","constructor","draw","children","push","clear","destroy","unbind","eventTarget","e","this$1","domNode","node","_kendoNode","parentElement","srcElement","getSize","currentSize","size","_size","setSize","_resize","resize","force","width","height","trigger","value","suspendTracking","_suspendedTracking","resumeTracking","eventName","originalEvent","type","_elementOffset","ref","paddingLeft","paddingTop","ref$1","left","top","parseInt","_surfacePoint","offset","coord","x","y","current","support"],"mappings":"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","sourcesContent":["import Group from '../shapes/group';\nimport Point from '../geometry/point';\nimport SurfaceFactory from './surface-factory';\nimport { Observable } from '../common';\nimport { eventElement, eventCoordinates, elementStyles, elementSize, elementOffset } from '../util';\n\nvar events = [\n    \"click\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"mousemove\",\n    \"resize\"\n];\n\nvar Surface = (function (Observable) {\n    function Surface(element, options) {\n        Observable.call(this);\n\n        this.options = Object.assign({}, options);\n        this.element = element;\n        this.element._kendoExportVisual = this.exportVisual.bind(this);\n\n        this._click = this._handler(\"click\");\n        this._mouseenter = this._handler(\"mouseenter\");\n        this._mouseleave = this._handler(\"mouseleave\");\n        this._mousemove = this._handler(\"mousemove\");\n\n        this._visual = new Group();\n\n        elementSize(element, this.options);\n\n        this.bind(events, this.options);\n\n        this._enableTracking();\n    }\n\n    if ( Observable ) Surface.__proto__ = Observable;\n    Surface.prototype = Object.create( Observable && Observable.prototype );\n    Surface.prototype.constructor = Surface;\n\n    Surface.prototype.draw = function draw (element) {\n        this._visual.children.push(element);\n    };\n\n    Surface.prototype.clear = function clear () {\n        this._visual.children = [];\n    };\n\n    Surface.prototype.destroy = function destroy () {\n        this._visual = null;\n        this.element._kendoExportVisual = null;\n        this.unbind();\n    };\n\n    Surface.prototype.eventTarget = function eventTarget (e) {\n        var this$1 = this;\n\n        var domNode = eventElement(e);\n        var node;\n\n        while (!node && domNode) {\n            node = domNode._kendoNode;\n            if (domNode === this$1.element) {\n                break;\n            }\n\n            domNode = domNode.parentElement;\n        }\n\n        if (node) {\n            return node.srcElement;\n        }\n    };\n\n    Surface.prototype.exportVisual = function exportVisual () {\n        return this._visual;\n    };\n\n    Surface.prototype.getSize = function getSize () {\n        return elementSize(this.element);\n    };\n\n    Surface.prototype.currentSize = function currentSize (size) {\n        if (size) {\n            this._size = size;\n        } else {\n            return this._size;\n        }\n    };\n\n    Surface.prototype.setSize = function setSize (size) {\n        elementSize(this.element, size);\n\n        this.currentSize(size);\n        this._resize();\n    };\n\n    Surface.prototype.resize = function resize (force) {\n        var size = this.getSize();\n        var currentSize = this.currentSize();\n\n        if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n            this.currentSize(size);\n            this._resize(size, force);\n            this.trigger(\"resize\", size);\n        }\n    };\n\n    Surface.prototype.size = function size (value) {\n        if (!value) {\n            return this.getSize();\n        }\n\n        this.setSize(value);\n    };\n\n    Surface.prototype.suspendTracking = function suspendTracking () {\n        this._suspendedTracking = true;\n    };\n\n    Surface.prototype.resumeTracking = function resumeTracking () {\n        this._suspendedTracking = false;\n    };\n\n    Surface.prototype._enableTracking = function _enableTracking () {};\n\n    Surface.prototype._resize = function _resize () {};\n\n    Surface.prototype._handler = function _handler (eventName) {\n        var this$1 = this;\n\n        return function (e) {\n            var node = this$1.eventTarget(e);\n            if (node && !this$1._suspendedTracking) {\n                this$1.trigger(eventName, {\n                    element: node,\n                    originalEvent: e,\n                    type: eventName\n                });\n            }\n        };\n    };\n\n    Surface.prototype._elementOffset = function _elementOffset () {\n        var element = this.element;\n        var ref = elementStyles(element, [ \"paddingLeft\", \"paddingTop\" ]);\n        var paddingLeft = ref.paddingLeft;\n        var paddingTop = ref.paddingTop;\n        var ref$1 = elementOffset(element);\n        var left = ref$1.left;\n        var top = ref$1.top;\n\n        return {\n            left: left + parseInt(paddingLeft, 10),\n            top: top + parseInt(paddingTop, 10)\n        };\n    };\n\n    Surface.prototype._surfacePoint = function _surfacePoint (e) {\n        var offset = this._elementOffset();\n        var coord = eventCoordinates(e);\n        var x = coord.x - offset.left;\n        var y = coord.y - offset.top;\n\n        return new Point(x, y);\n    };\n\n    return Surface;\n}(Observable));\n\nSurface.create = function(element, options) {\n    return SurfaceFactory.current.create(element, options);\n};\n\nSurface.support = {};\n\nexport default Surface;\n"]},"metadata":{},"sourceType":"module"}