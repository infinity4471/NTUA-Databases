{"ast":null,"code":"import defineGeometryAccessors from '../accessors/define-geometry-accessors';\nimport Element from './element';\nimport Paintable from '../mixins/paintable';\nimport Measurable from '../mixins/measurable';\nimport GeometryRect from '../geometry/rect';\nimport { defined } from '../util';\n\nvar Rect = function (Element) {\n  function Rect(geometry, options) {\n    if (geometry === void 0) geometry = new GeometryRect();\n    if (options === void 0) options = {};\n    Element.call(this, options);\n    this.geometry(geometry);\n\n    if (!defined(this.options.stroke)) {\n      this.stroke(\"#000\");\n    }\n  }\n\n  if (Element) Rect.__proto__ = Element;\n  Rect.prototype = Object.create(Element && Element.prototype);\n  Rect.prototype.constructor = Rect;\n\n  Rect.prototype._bbox = function _bbox(matrix) {\n    return this._geometry.bbox(matrix);\n  };\n\n  Rect.prototype.rawBBox = function rawBBox() {\n    return this._geometry.bbox();\n  };\n\n  Rect.prototype._containsPoint = function _containsPoint(point) {\n    return this._geometry.containsPoint(point);\n  };\n\n  Rect.prototype._isOnPath = function _isOnPath(point) {\n    return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n  };\n\n  return Rect;\n}(Element);\n\nRect.prototype.nodeType = \"Rect\";\nPaintable.extend(Rect.prototype);\nMeasurable.extend(Rect.prototype);\ndefineGeometryAccessors(Rect.prototype, [\"geometry\"]);\nexport default Rect;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/shapes/rect.js"],"names":["defineGeometryAccessors","Element","Paintable","Measurable","GeometryRect","defined","Rect","geometry","options","call","stroke","__proto__","prototype","Object","create","constructor","_bbox","matrix","_geometry","bbox","rawBBox","_containsPoint","point","containsPoint","_isOnPath","width","nodeType","extend"],"mappings":"AAAA,OAAOA,uBAAP,MAAoC,wCAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,SAAxB;;AAEA,IAAIC,IAAI,GAAI,UAAUL,OAAV,EAAmB;AAC3B,WAASK,IAAT,CAAcC,QAAd,EAAwBC,OAAxB,EAAiC;AAC7B,QAAKD,QAAQ,KAAK,KAAK,CAAvB,EAA2BA,QAAQ,GAAG,IAAIH,YAAJ,EAAX;AAC3B,QAAKI,OAAO,KAAK,KAAK,CAAtB,EAA0BA,OAAO,GAAG,EAAV;AAE1BP,IAAAA,OAAO,CAACQ,IAAR,CAAa,IAAb,EAAmBD,OAAnB;AACA,SAAKD,QAAL,CAAcA,QAAd;;AAEA,QAAI,CAACF,OAAO,CAAC,KAAKG,OAAL,CAAaE,MAAd,CAAZ,EAAmC;AAC/B,WAAKA,MAAL,CAAY,MAAZ;AACH;AACJ;;AAED,MAAKT,OAAL,EAAeK,IAAI,CAACK,SAAL,GAAiBV,OAAjB;AACfK,EAAAA,IAAI,CAACM,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAeb,OAAO,IAAIA,OAAO,CAACW,SAAlC,CAAjB;AACAN,EAAAA,IAAI,CAACM,SAAL,CAAeG,WAAf,GAA6BT,IAA7B;;AAEAA,EAAAA,IAAI,CAACM,SAAL,CAAeI,KAAf,GAAuB,SAASA,KAAT,CAAgBC,MAAhB,EAAwB;AAC3C,WAAO,KAAKC,SAAL,CAAeC,IAAf,CAAoBF,MAApB,CAAP;AACH,GAFD;;AAIAX,EAAAA,IAAI,CAACM,SAAL,CAAeQ,OAAf,GAAyB,SAASA,OAAT,GAAoB;AACzC,WAAO,KAAKF,SAAL,CAAeC,IAAf,EAAP;AACH,GAFD;;AAIAb,EAAAA,IAAI,CAACM,SAAL,CAAeS,cAAf,GAAgC,SAASA,cAAT,CAAyBC,KAAzB,EAAgC;AAC5D,WAAO,KAAKJ,SAAL,CAAeK,aAAf,CAA6BD,KAA7B,CAAP;AACH,GAFD;;AAIAhB,EAAAA,IAAI,CAACM,SAAL,CAAeY,SAAf,GAA2B,SAASA,SAAT,CAAoBF,KAApB,EAA2B;AAClD,WAAO,KAAKf,QAAL,GAAgBiB,SAAhB,CAA0BF,KAA1B,EAAiC,KAAKd,OAAL,CAAaE,MAAb,CAAoBe,KAApB,GAA4B,CAA7D,CAAP;AACH,GAFD;;AAIA,SAAOnB,IAAP;AACH,CAlCW,CAkCVL,OAlCU,CAAZ;;AAoCAK,IAAI,CAACM,SAAL,CAAec,QAAf,GAA0B,MAA1B;AAEAxB,SAAS,CAACyB,MAAV,CAAiBrB,IAAI,CAACM,SAAtB;AACAT,UAAU,CAACwB,MAAX,CAAkBrB,IAAI,CAACM,SAAvB;AACAZ,uBAAuB,CAACM,IAAI,CAACM,SAAN,EAAiB,CAAE,UAAF,CAAjB,CAAvB;AAEA,eAAeN,IAAf","sourcesContent":["import defineGeometryAccessors from '../accessors/define-geometry-accessors';\nimport Element from './element';\nimport Paintable from '../mixins/paintable';\nimport Measurable from '../mixins/measurable';\nimport GeometryRect from '../geometry/rect';\nimport { defined } from '../util';\n\nvar Rect = (function (Element) {\n    function Rect(geometry, options) {\n        if ( geometry === void 0 ) geometry = new GeometryRect();\n        if ( options === void 0 ) options = {};\n\n        Element.call(this, options);\n        this.geometry(geometry);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(\"#000\");\n        }\n    }\n\n    if ( Element ) Rect.__proto__ = Element;\n    Rect.prototype = Object.create( Element && Element.prototype );\n    Rect.prototype.constructor = Rect;\n\n    Rect.prototype._bbox = function _bbox (matrix) {\n        return this._geometry.bbox(matrix);\n    };\n\n    Rect.prototype.rawBBox = function rawBBox () {\n        return this._geometry.bbox();\n    };\n\n    Rect.prototype._containsPoint = function _containsPoint (point) {\n        return this._geometry.containsPoint(point);\n    };\n\n    Rect.prototype._isOnPath = function _isOnPath (point) {\n        return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    };\n\n    return Rect;\n}(Element));\n\nRect.prototype.nodeType = \"Rect\";\n\nPaintable.extend(Rect.prototype);\nMeasurable.extend(Rect.prototype);\ndefineGeometryAccessors(Rect.prototype, [ \"geometry\" ]);\n\nexport default Rect;\n\n"]},"metadata":{},"sourceType":"module"}