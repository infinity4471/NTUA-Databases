{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { isCompositeFilterDescriptor } from '@progress/kendo-data-query';\nimport { GridColumnMenuItem } from './GridColumnMenuItem';\nimport { GridColumnMenuItemGroup } from './GridColumnMenuItemGroup';\nimport { GridColumnMenuItemContent } from './GridColumnMenuItemContent';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { operatorMap, getDefaultOperator, filterLogicList, defaultHideSecondFilter, booleanFilterValues, getFilterType } from '../filterCommon';\nimport { messages, filterClearButton, filterSubmitButton, filterTitle } from '../messages';\nimport { GridColumnMenuFilterUI } from './GridColumnMenuFilterUI';\n/**\n * @hidden\n */\n\nexport var rootFilterOrDefault = function (rootFilter) {\n  return rootFilter || {\n    filters: [],\n    logic: 'and'\n  };\n};\n/**\n * @hidden\n */\n\nexport var filterGroupByField = function (field, filter) {\n  var rootFilter = rootFilterOrDefault(filter);\n  var compositeFilters = rootFilter.filters.filter(function (f) {\n    if (isCompositeFilterDescriptor(f)) {\n      return f.filters && f.filters.length && f.filters.length <= 2 && !f.filters.find(function (nf) {\n        return isCompositeFilterDescriptor(nf) || nf.field !== field;\n      });\n    }\n\n    return false;\n  });\n  return compositeFilters[0] || null;\n};\n/**\n * @example\n * ```jsx-no-run\n * class TextColumnMenu extends React.Component {\n *     render() {\n *         return (\n *         <div>\n *             <GridColumnMenuSort {...this.props} />\n *             <GridColumnMenuFilter {...this.props} />\n *         </div>);\n *     }\n * }\n *\n * class App extends React.PureComponent {\n *     constructor(props) {\n *         super(props);\n *\n *         this.state = this.createAppState({\n *             take: 10,\n *             skip: 0\n *         });\n *     }\n *\n *     createAppState(dataState) {\n *         return {\n *             result: process(products.slice(0), dataState),\n *             dataState: dataState\n *         };\n *     }\n *\n *     dataStateChange = (event) => {\n *         this.setState(this.createAppState(event.data));\n *     }\n *\n *     render() {\n *         return (\n *             <div>\n *                 <Grid\n *                     data={this.state.result}\n *                     {...this.state.dataState}\n *                     onDataStateChange={this.dataStateChange}\n *                     sortable={true}\n *                     pageable={true}\n *                 >\n *                     <Column field=\"ProductID\" title=\"Product ID\" />\n *                     <Column field=\"ProductName\" columnMenu={TextColumnMenu} />\n *                 </Grid>\n *                 <br />\n *             </div>\n *         );\n *     }\n * }\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nvar GridColumnMenuFilter =\n/** @class */\nfunction (_super) {\n  __extends(GridColumnMenuFilter, _super);\n\n  function GridColumnMenuFilter(props) {\n    var _this = _super.call(this, props) || this;\n    /**\n     * @hidden\n     */\n\n\n    _this.isControlled = function () {\n      return _this.props.expanded !== undefined;\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onFilterExpand = function () {\n      var isControlled = _this.isControlled();\n\n      var nextValue = !(isControlled ? _this.props.expanded : _this.state.expanded);\n\n      if (_this.props.onExpandChange) {\n        _this.props.onExpandChange(nextValue);\n      }\n\n      if (!isControlled) {\n        _this.setState({\n          expanded: nextValue\n        });\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.firstFilterChange = function (e) {\n      _this.filterChange(0, e);\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.secondFilterChange = function (e) {\n      _this.filterChange(1, e);\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.logicChange = function (e) {\n      _this.setState({\n        filterGroup: __assign({}, _this.state.filterGroup, {\n          logic: e.target.value.operator\n        })\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.clear = function (e) {\n      e.preventDefault();\n\n      if (!_this.props.onFilterChange) {\n        return;\n      }\n\n      var field = _this.props.column.field;\n      var rootFilter = rootFilterOrDefault(_this.props.filter);\n      var filterGroup = filterGroupByField(field, _this.props.filter);\n      var rootFilters = rootFilter.filters.filter(function (f) {\n        return f !== filterGroup;\n      });\n\n      if (!rootFilters.length) {\n        _this.props.onFilterChange(null, e);\n      } else {\n        _this.props.onFilterChange(__assign({}, rootFilter, {\n          filters: rootFilters\n        }), e);\n      }\n\n      if (_this.props.onCloseMenu) {\n        _this.props.onCloseMenu();\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.currentFilterGroup = function () {\n      return __assign({}, _this.state.filterGroup, {\n        filters: _this.state.filterGroup.filters.filter(function (nf) {\n          return nf.value !== undefined && nf.value !== null && nf.value !== '' || nf.value === null && nf.operator;\n        })\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.submit = function (e) {\n      e.preventDefault();\n\n      if (!_this.props.onFilterChange) {\n        return;\n      }\n\n      var field = _this.props.column.field;\n      var rootFilter = rootFilterOrDefault(_this.props.filter);\n      var filterGroup = filterGroupByField(field, _this.props.filter);\n\n      var currentFilterGroup = _this.currentFilterGroup();\n\n      var updatedFilter = null;\n\n      if (filterGroup && currentFilterGroup.filters.length > 0) {\n        var rootFilters = rootFilter.filters.map(function (f) {\n          if (f === filterGroup) {\n            return currentFilterGroup;\n          }\n\n          return f;\n        });\n        updatedFilter = __assign({}, rootFilter, {\n          filters: rootFilters\n        });\n      } else if (currentFilterGroup.filters.length === 0) {\n        var rootFilters = rootFilter.filters.filter(function (f) {\n          return f !== filterGroup;\n        });\n\n        if (rootFilters.length) {\n          updatedFilter = __assign({}, rootFilter, {\n            filters: rootFilters\n          });\n        }\n      } else {\n        updatedFilter = __assign({}, rootFilter, {\n          filters: rootFilter.filters.concat([currentFilterGroup])\n        });\n      }\n\n      _this.props.onFilterChange(updatedFilter, e);\n\n      if (_this.props.onCloseMenu) {\n        _this.props.onCloseMenu();\n      }\n    };\n\n    var filterGroup;\n\n    if (props.column && props.column.field) {\n      var filterType = getFilterType(props.column.filter);\n      var defaultOperator = getDefaultOperator(props.filterOperators, filterType);\n      filterGroup = filterGroupByField(props.column.field, props.filter);\n      filterGroup = filterGroup ? __assign({}, filterGroup, {\n        filters: filterGroup.filters.map(function (f) {\n          return __assign({}, f);\n        })\n      }) : {\n        logic: 'and',\n        filters: [{\n          field: props.column.field,\n          operator: defaultOperator\n        }, {\n          field: props.column.field,\n          operator: defaultOperator\n        }]\n      };\n\n      if (filterGroup.filters.filter(function (x) {\n        return x.field === props.column.field;\n      }).length === 1) {\n        filterGroup.filters.splice(1, 0, {\n          field: props.column.field,\n          operator: defaultOperator\n        });\n      }\n    }\n\n    _this.state = {\n      expanded: props.expanded || false,\n      filterGroup: filterGroup\n    };\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  GridColumnMenuFilter.prototype.removeGroup = function (group, rootFilter) {\n    var filters = rootFilter.filters.slice();\n    var groupIndex = filters.findIndex(function (f) {\n      return f === group;\n    });\n\n    if (groupIndex > -1) {\n      filters.splice(groupIndex, 1);\n    }\n\n    return __assign({}, rootFilter, {\n      filters: filters\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  GridColumnMenuFilter.prototype.insertGroup = function (group, rootFilter) {\n    return __assign({}, rootFilter, {\n      filters: [group].concat(rootFilter.filters)\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  GridColumnMenuFilter.prototype.filterChange = function (filterIndex, e) {\n    var filters = this.state.filterGroup.filters.map(function (f, i) {\n      if (i === filterIndex) {\n        return __assign({}, f, {\n          value: e.value,\n          operator: e.operator\n        });\n      }\n\n      return f;\n    });\n    this.setState({\n      filterGroup: __assign({}, this.state.filterGroup, {\n        filters: filters\n      })\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  GridColumnMenuFilter.prototype.render = function () {\n    var _a = this.props,\n        column = _a.column,\n        filterUI = _a.filterUI,\n        hideSecondFilter = _a.hideSecondFilter,\n        filterOperators = _a.filterOperators;\n\n    if (!column || !column.field) {\n      return React.createElement(\"div\", null);\n    }\n\n    var filterType = getFilterType(column.filter);\n    var currentHideSecondFilter = hideSecondFilter !== undefined ? hideSecondFilter : defaultHideSecondFilter[filterType];\n    var localizationService = provideLocalizationService(this);\n    var filters = this.state.filterGroup.filters;\n    var currentOperators = operatorMap(filterOperators[filterType], localizationService);\n    var booleanValues = operatorMap(booleanFilterValues, localizationService);\n    var firstFilterCellProps = {\n      field: column.field,\n      value: filters[0].value,\n      operator: filters[0].operator,\n      operators: currentOperators,\n      booleanValues: booleanValues,\n      onChange: this.firstFilterChange,\n      filterType: filterType\n    };\n    var secondFilterCellProps = {\n      field: column.field,\n      value: filters[1].value,\n      operator: filters[1].operator,\n      operators: currentOperators,\n      booleanValues: booleanValues,\n      onChange: this.secondFilterChange,\n      filterType: filterType\n    };\n    var filterLogic = this.state.filterGroup.logic;\n    var logicData = operatorMap(filterLogicList, localizationService);\n    var logicProps = {\n      value: logicData.find(function (item) {\n        return item.operator === (filterLogic === null ? '' : filterLogic);\n      }),\n      onChange: this.logicChange,\n      data: logicData\n    };\n    var FilterUI = filterUI;\n    var filterUIProps = {\n      firstFilterProps: firstFilterCellProps,\n      secondFilterProps: secondFilterCellProps,\n      logicData: logicProps.data,\n      logicValue: logicProps.value,\n      onLogicChange: logicProps.onChange,\n      hideSecondFilter: currentHideSecondFilter\n    };\n    var isFilterValid = this.currentFilterGroup().filters.length !== 0;\n    var expandState = this.isControlled() ? this.props.expanded : this.state.expanded;\n    return React.createElement(GridColumnMenuItemGroup, null, React.createElement(GridColumnMenuItem, {\n      title: localizationService.toLanguageString(filterTitle, messages[filterTitle]),\n      iconClass: 'k-i-filter',\n      onClick: this.onFilterExpand\n    }), React.createElement(GridColumnMenuItemContent, {\n      show: !!expandState\n    }, React.createElement(\"div\", {\n      className: 'kendo-grid-filter-menu-container'\n    }, React.createElement(\"form\", {\n      className: 'k-filter-menu k-group k-reset k-state-border-up',\n      onSubmit: this.submit,\n      onReset: this.clear\n    }, React.createElement(\"div\", {\n      className: 'k-filter-menu-container'\n    }, FilterUI ? React.createElement(FilterUI, __assign({}, filterUIProps)) : React.createElement(GridColumnMenuFilterUI, __assign({}, filterUIProps)), React.createElement(\"div\", {\n      className: 'k-columnmenu-actions'\n    }, React.createElement(\"button\", {\n      className: 'k-button',\n      type: 'reset'\n    }, localizationService.toLanguageString(filterClearButton, messages[filterClearButton])), React.createElement(\"button\", {\n      className: 'k-button k-primary',\n      disabled: !isFilterValid\n    }, localizationService.toLanguageString(filterSubmitButton, messages[filterSubmitButton]))))))));\n  }; // tslint:disable:max-line-length\n\n  /**\n   * Can be used to check if filtering is applied to a specific field ([see example]({% slug column_menu_grid %}#toc-styling-the-column-menu-icon)). Useful for creating active filter indicators.\n   */\n  // tslint:enable:max-line-length\n\n\n  GridColumnMenuFilter.active = function (field, filter) {\n    return !!filterGroupByField(field, filter);\n  };\n\n  return GridColumnMenuFilter;\n}(React.Component);\n\nexport { GridColumnMenuFilter };\nregisterForLocalization(GridColumnMenuFilter);","map":{"version":3,"sources":["../../../src/columnMenu/GridColumnMenuFilter.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { isCompositeFilterDescriptor } from '@progress/kendo-data-query';\nimport { GridColumnMenuItem } from './GridColumnMenuItem';\nimport { GridColumnMenuItemGroup } from './GridColumnMenuItemGroup';\nimport { GridColumnMenuItemContent } from './GridColumnMenuItemContent';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { operatorMap, getDefaultOperator, filterLogicList, defaultHideSecondFilter, booleanFilterValues, getFilterType } from '../filterCommon';\nimport { messages, filterClearButton, filterSubmitButton, filterTitle } from '../messages';\nimport { GridColumnMenuFilterUI } from './GridColumnMenuFilterUI';\n/**\n * @hidden\n */\nexport var rootFilterOrDefault = function (rootFilter) {\n    return (rootFilter || { filters: [], logic: 'and' });\n};\n/**\n * @hidden\n */\nexport var filterGroupByField = function (field, filter) {\n    var rootFilter = rootFilterOrDefault(filter);\n    var compositeFilters = rootFilter.filters\n        .filter(function (f) {\n        if (isCompositeFilterDescriptor(f)) {\n            return f.filters &&\n                f.filters.length &&\n                f.filters.length <= 2 &&\n                !f.filters.find(function (nf) { return isCompositeFilterDescriptor(nf) || nf.field !== field; });\n        }\n        return false;\n    });\n    return compositeFilters[0] || null;\n};\n/**\n * @example\n * ```jsx-no-run\n * class TextColumnMenu extends React.Component {\n *     render() {\n *         return (\n *         <div>\n *             <GridColumnMenuSort {...this.props} />\n *             <GridColumnMenuFilter {...this.props} />\n *         </div>);\n *     }\n * }\n *\n * class App extends React.PureComponent {\n *     constructor(props) {\n *         super(props);\n *\n *         this.state = this.createAppState({\n *             take: 10,\n *             skip: 0\n *         });\n *     }\n *\n *     createAppState(dataState) {\n *         return {\n *             result: process(products.slice(0), dataState),\n *             dataState: dataState\n *         };\n *     }\n *\n *     dataStateChange = (event) => {\n *         this.setState(this.createAppState(event.data));\n *     }\n *\n *     render() {\n *         return (\n *             <div>\n *                 <Grid\n *                     data={this.state.result}\n *                     {...this.state.dataState}\n *                     onDataStateChange={this.dataStateChange}\n *                     sortable={true}\n *                     pageable={true}\n *                 >\n *                     <Column field=\"ProductID\" title=\"Product ID\" />\n *                     <Column field=\"ProductName\" columnMenu={TextColumnMenu} />\n *                 </Grid>\n *                 <br />\n *             </div>\n *         );\n *     }\n * }\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nvar GridColumnMenuFilter = /** @class */ (function (_super) {\n    __extends(GridColumnMenuFilter, _super);\n    function GridColumnMenuFilter(props) {\n        var _this = _super.call(this, props) || this;\n        /**\n         * @hidden\n         */\n        _this.isControlled = function () { return _this.props.expanded !== undefined; };\n        /**\n         * @hidden\n         */\n        _this.onFilterExpand = function () {\n            var isControlled = _this.isControlled();\n            var nextValue = !(isControlled ? _this.props.expanded : _this.state.expanded);\n            if (_this.props.onExpandChange) {\n                _this.props.onExpandChange(nextValue);\n            }\n            if (!isControlled) {\n                _this.setState({\n                    expanded: nextValue\n                });\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.firstFilterChange = function (e) {\n            _this.filterChange(0, e);\n        };\n        /**\n         * @hidden\n         */\n        _this.secondFilterChange = function (e) {\n            _this.filterChange(1, e);\n        };\n        /**\n         * @hidden\n         */\n        _this.logicChange = function (e) {\n            _this.setState({\n                filterGroup: __assign({}, _this.state.filterGroup, { logic: e.target.value.operator })\n            });\n        };\n        /**\n         * @hidden\n         */\n        _this.clear = function (e) {\n            e.preventDefault();\n            if (!_this.props.onFilterChange) {\n                return;\n            }\n            var field = _this.props.column.field;\n            var rootFilter = rootFilterOrDefault(_this.props.filter);\n            var filterGroup = filterGroupByField(field, _this.props.filter);\n            var rootFilters = rootFilter.filters.filter(function (f) { return f !== filterGroup; });\n            if (!rootFilters.length) {\n                _this.props.onFilterChange(null, e);\n            }\n            else {\n                _this.props.onFilterChange(__assign({}, rootFilter, { filters: rootFilters }), e);\n            }\n            if (_this.props.onCloseMenu) {\n                _this.props.onCloseMenu();\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.currentFilterGroup = function () {\n            return __assign({}, _this.state.filterGroup, { filters: _this.state\n                    .filterGroup\n                    .filters\n                    .filter(function (nf) {\n                    return (nf.value !== undefined && nf.value !== null && nf.value !== '') ||\n                        (nf.value === null && nf.operator);\n                }) });\n        };\n        /**\n         * @hidden\n         */\n        _this.submit = function (e) {\n            e.preventDefault();\n            if (!_this.props.onFilterChange) {\n                return;\n            }\n            var field = _this.props.column.field;\n            var rootFilter = rootFilterOrDefault(_this.props.filter);\n            var filterGroup = filterGroupByField(field, _this.props.filter);\n            var currentFilterGroup = _this.currentFilterGroup();\n            var updatedFilter = null;\n            if (filterGroup && currentFilterGroup.filters.length > 0) {\n                var rootFilters = rootFilter.filters.map(function (f) {\n                    if (f === filterGroup) {\n                        return currentFilterGroup;\n                    }\n                    return f;\n                });\n                updatedFilter = __assign({}, rootFilter, { filters: rootFilters });\n            }\n            else if (currentFilterGroup.filters.length === 0) {\n                var rootFilters = rootFilter\n                    .filters\n                    .filter(function (f) { return f !== filterGroup; });\n                if (rootFilters.length) {\n                    updatedFilter = __assign({}, rootFilter, { filters: rootFilters });\n                }\n            }\n            else {\n                updatedFilter = __assign({}, rootFilter, { filters: rootFilter.filters.concat([currentFilterGroup]) });\n            }\n            _this.props.onFilterChange(updatedFilter, e);\n            if (_this.props.onCloseMenu) {\n                _this.props.onCloseMenu();\n            }\n        };\n        var filterGroup;\n        if (props.column && props.column.field) {\n            var filterType = getFilterType(props.column.filter);\n            var defaultOperator = getDefaultOperator(props.filterOperators, filterType);\n            filterGroup = filterGroupByField(props.column.field, props.filter);\n            filterGroup = filterGroup ? __assign({}, filterGroup, { filters: filterGroup.filters.map(function (f) {\n                    return __assign({}, f);\n                }) }) : {\n                logic: 'and',\n                filters: [\n                    { field: props.column.field, operator: defaultOperator },\n                    { field: props.column.field, operator: defaultOperator }\n                ]\n            };\n            if (filterGroup.filters.filter(function (x) { return x.field === props.column.field; }).length === 1) {\n                filterGroup.filters.splice(1, 0, { field: props.column.field, operator: defaultOperator });\n            }\n        }\n        _this.state = {\n            expanded: props.expanded || false,\n            filterGroup: filterGroup\n        };\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    GridColumnMenuFilter.prototype.removeGroup = function (group, rootFilter) {\n        var filters = rootFilter.filters.slice();\n        var groupIndex = filters\n            .findIndex(function (f) { return f === group; });\n        if (groupIndex > -1) {\n            filters.splice(groupIndex, 1);\n        }\n        return __assign({}, rootFilter, { filters: filters });\n    };\n    /**\n     * @hidden\n     */\n    GridColumnMenuFilter.prototype.insertGroup = function (group, rootFilter) {\n        return __assign({}, rootFilter, { filters: [\n                group\n            ].concat(rootFilter.filters) });\n    };\n    /**\n     * @hidden\n     */\n    GridColumnMenuFilter.prototype.filterChange = function (filterIndex, e) {\n        var filters = this.state.filterGroup.filters.map(function (f, i) {\n            if (i === filterIndex) {\n                return __assign({}, f, { value: e.value, operator: e.operator });\n            }\n            return f;\n        });\n        this.setState({\n            filterGroup: __assign({}, this.state.filterGroup, { filters: filters })\n        });\n    };\n    /**\n     * @hidden\n     */\n    GridColumnMenuFilter.prototype.render = function () {\n        var _a = this.props, column = _a.column, filterUI = _a.filterUI, hideSecondFilter = _a.hideSecondFilter, filterOperators = _a.filterOperators;\n        if (!column || !column.field) {\n            return React.createElement(\"div\", null);\n        }\n        var filterType = getFilterType(column.filter);\n        var currentHideSecondFilter = hideSecondFilter !== undefined ?\n            hideSecondFilter : defaultHideSecondFilter[filterType];\n        var localizationService = provideLocalizationService(this);\n        var filters = this.state.filterGroup.filters;\n        var currentOperators = operatorMap(filterOperators[filterType], localizationService);\n        var booleanValues = operatorMap(booleanFilterValues, localizationService);\n        var firstFilterCellProps = {\n            field: column.field,\n            value: filters[0].value,\n            operator: filters[0].operator,\n            operators: currentOperators,\n            booleanValues: booleanValues,\n            onChange: this.firstFilterChange,\n            filterType: filterType\n        };\n        var secondFilterCellProps = {\n            field: column.field,\n            value: filters[1].value,\n            operator: filters[1].operator,\n            operators: currentOperators,\n            booleanValues: booleanValues,\n            onChange: this.secondFilterChange,\n            filterType: filterType\n        };\n        var filterLogic = this.state.filterGroup.logic;\n        var logicData = operatorMap(filterLogicList, localizationService);\n        var logicProps = {\n            value: logicData.find(function (item) { return item.operator === (filterLogic === null ? '' : filterLogic); }),\n            onChange: this.logicChange,\n            data: logicData\n        };\n        var FilterUI = filterUI;\n        var filterUIProps = {\n            firstFilterProps: firstFilterCellProps,\n            secondFilterProps: secondFilterCellProps,\n            logicData: logicProps.data,\n            logicValue: logicProps.value,\n            onLogicChange: logicProps.onChange,\n            hideSecondFilter: currentHideSecondFilter\n        };\n        var isFilterValid = this.currentFilterGroup().filters.length !== 0;\n        var expandState = this.isControlled() ? this.props.expanded : this.state.expanded;\n        return (React.createElement(GridColumnMenuItemGroup, null,\n            React.createElement(GridColumnMenuItem, { title: localizationService.toLanguageString(filterTitle, messages[filterTitle]), iconClass: 'k-i-filter', onClick: this.onFilterExpand }),\n            React.createElement(GridColumnMenuItemContent, { show: !!expandState },\n                React.createElement(\"div\", { className: 'kendo-grid-filter-menu-container' },\n                    React.createElement(\"form\", { className: 'k-filter-menu k-group k-reset k-state-border-up', onSubmit: this.submit, onReset: this.clear },\n                        React.createElement(\"div\", { className: 'k-filter-menu-container' },\n                            FilterUI ?\n                                React.createElement(FilterUI, __assign({}, filterUIProps)) :\n                                React.createElement(GridColumnMenuFilterUI, __assign({}, filterUIProps)),\n                            React.createElement(\"div\", { className: 'k-columnmenu-actions' },\n                                React.createElement(\"button\", { className: 'k-button', type: 'reset' }, localizationService\n                                    .toLanguageString(filterClearButton, messages[filterClearButton])),\n                                React.createElement(\"button\", { className: 'k-button k-primary', disabled: !isFilterValid }, localizationService\n                                    .toLanguageString(filterSubmitButton, messages[filterSubmitButton])))))))));\n    };\n    // tslint:disable:max-line-length\n    /**\n     * Can be used to check if filtering is applied to a specific field ([see example]({% slug column_menu_grid %}#toc-styling-the-column-menu-icon)). Useful for creating active filter indicators.\n     */\n    // tslint:enable:max-line-length\n    GridColumnMenuFilter.active = function (field, filter) {\n        return !!filterGroupByField(field, filter);\n    };\n    return GridColumnMenuFilter;\n}(React.Component));\nexport { GridColumnMenuFilter };\nregisterForLocalization(GridColumnMenuFilter);\n//# sourceMappingURL=GridColumnMenuFilter.js.map"]},"metadata":{},"sourceType":"module"}