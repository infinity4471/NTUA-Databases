{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar DEFAULT_NUMBER = 1111111.1111111;\nvar MAX_DECIMAL = 0.31111111111111117;\nvar MIN_DECIMAL = 1;\nvar ONE_NUMBER = 1;\nvar ZERO_NUMBER = 0;\nvar DIGITS_REGEX = /\\d/;\nvar MAX_PRECISION = 15;\n/**\n * @hidden\n */\n\nexport var getInitialState = function () {\n  return {\n    eventValue: null,\n    prevLooseValue: '',\n    currentLooseValue: '',\n    focused: false,\n    selectionStart: undefined,\n    selectionEnd: undefined,\n    decimalSelect: false,\n    valueIsCorrected: false,\n    valueIsOutOfRange: false\n  };\n};\n/**\n * @hidden\n */\n\nexport var getStateOrPropsValue = function (value, stateValue) {\n  return value !== undefined ? value : stateValue;\n};\n/**\n * @hidden\n */\n\nexport var formatValue = function (value, format, intlService) {\n  if (value === null && value === undefined) {\n    return '';\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  return intlService.formatNumber(value, format);\n};\n/**\n * @hidden\n */\n\nexport var fractionLength = function (value) {\n  return (String(value).split('.')[1] || '').length;\n};\n/**\n * @hidden\n */\n\nvar maxFractionLength = function (value1, value2) {\n  return Math.max(fractionLength(value1), fractionLength(value2));\n};\n/**\n * @hidden\n */\n\n\nexport var limitPrecision = function (precision) {\n  return Math.min(precision, MAX_PRECISION);\n};\n/**\n * @hidden\n */\n\nexport var toFixedPrecision = function (value, precision) {\n  var maxPrecision = limitPrecision(precision);\n  return parseFloat(value.toFixed(maxPrecision));\n};\n/**\n * @hidden\n */\n\nexport var increaseValue = function (value, newState, step, min, max, format, intlService) {\n  var maxPrecision = maxFractionLength(value || 0, step || 0);\n  var increasedValue = rangeValue(toFixedPrecision((value || 0) + (step || 0), maxPrecision), min, max);\n  newState.eventValue = increasedValue;\n  newState.currentLooseValue = formatValue(increasedValue, format, intlService);\n  newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\n\nexport var decreaseValue = function (value, newState, step, min, max, format, intlService) {\n  var maxPrecision = maxFractionLength(value || 0, step || 0);\n  var decreasedValue = rangeValue(toFixedPrecision((value || 0) - (step || 0), maxPrecision), min, max);\n  newState.eventValue = decreasedValue;\n  newState.currentLooseValue = formatValue(decreasedValue, format, intlService);\n  newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\n\nexport var rangeValue = function (value, min, max) {\n  if (value == null) {\n    return value;\n  }\n\n  if (!(value > 1 || value < 1 || value === 1)) {\n    // null, undefined or NaN\n    return null;\n  }\n\n  if (max !== undefined && min !== undefined && max < min) {\n    return null;\n  }\n\n  if (max !== undefined && value > max) {\n    value = max;\n  }\n\n  if (min !== undefined && value < min) {\n    value = min;\n  }\n\n  return value;\n};\n/**\n * @hidden\n */\n\nexport var getMaxCursorPosition = function (nextValue, formatInfo) {\n  var formatSuffixIndex = formatInfo.findIndex(function (_a) {\n    var _ = _a[0],\n        currSuffix = _a[1];\n    return Boolean(currSuffix) && nextValue.indexOf(currSuffix) === nextValue.length - currSuffix.length;\n  });\n\n  if (formatSuffixIndex === -1) {\n    return -1;\n  }\n\n  var suffix = formatInfo[formatSuffixIndex][1];\n  return nextValue.length - suffix.length;\n};\n/**\n * @hidden\n */\n\nexport var getMinCursorPosition = function (nextValue, formatInfo) {\n  var formatPrefixIndex = formatInfo.findIndex(function (_a) {\n    var currPrefix = _a[0],\n        _ = _a[1];\n    return Boolean(currPrefix) && nextValue.indexOf(currPrefix) === 0;\n  });\n\n  if (formatPrefixIndex === -1) {\n    return -1;\n  }\n\n  var prefix = formatInfo[formatPrefixIndex][0];\n  return prefix.length;\n};\n/**\n * @hidden\n */\n\nexport var rangeSelection = function (nextLooseValue, formatInfo, newState) {\n  var maxPosition = getMaxCursorPosition(nextLooseValue, formatInfo);\n\n  if (maxPosition !== -1 && newState.selectionStart > maxPosition) {\n    newState.selectionStart = newState.selectionEnd = maxPosition;\n    return;\n  }\n\n  if (newState.selectionStart > nextLooseValue.length) {\n    newState.selectionStart = newState.selectionEnd = nextLooseValue.length;\n  }\n\n  var minPosition = getMinCursorPosition(nextLooseValue, formatInfo);\n\n  if (minPosition !== -1 && newState.selectionStart < minPosition) {\n    newState.selectionStart = newState.selectionEnd = minPosition;\n  }\n\n  if (newState.selectionStart === -1) {\n    newState.selectionStart = newState.selectionEnd = 0;\n  }\n};\n/**\n * @hidden\n */\n\nexport var setSelection = function (newState, newIndex, nextLooseValue, formatInfo) {\n  newState.selectionStart = newState.selectionEnd = newIndex;\n  rangeSelection(nextLooseValue, formatInfo, newState);\n};\n/**\n * @hidden\n */\n\nexport var setInvalid = function (newState, format, formatInfo, intlService) {\n  newState.eventValue = intlService.parseNumber(newState.prevLooseValue, format);\n  newState.currentLooseValue = newState.prevLooseValue;\n  newState.valueIsCorrected = true;\n  setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n};\n/**\n * @hidden\n */\n\nexport var isMinusSymbolAdded = function (newState, symbols) {\n  var newText = String(newState.currentLooseValue);\n  var oldText = String(newState.prevLooseValue);\n  return newText.split(symbols.minusSign).length !== oldText.split(symbols.minusSign).length && newText.length === oldText.length + symbols.minusSign.length;\n};\n/**\n * @hidden\n */\n\nexport var isDecimalDuplicated = function (newState, symbols) {\n  var newText = String(newState.currentLooseValue);\n  return newText.split(symbols.decimal).length > 2;\n};\n/**\n * @hidden\n */\n\nexport var getFormatPrefixSufix = function (format, intlService) {\n  var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n  var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n  var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n  var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n  var positivePrefix = getPrefix(positiveResult);\n  var negativePrefix = getPrefix(negativeResult);\n  var zeroPrefix = getPrefix(zeroResult);\n  var onePrefix = getPrefix(oneResult);\n  var positiveSuffix = getSuffix(positiveResult);\n  var negativeSuffix = getSuffix(negativeResult);\n  var zeroSuffix = getSuffix(zeroResult);\n  var oneSuffix = getSuffix(oneResult);\n  return {\n    positiveInfo: [positivePrefix, positiveSuffix],\n    negativeInfo: [negativePrefix, negativeSuffix],\n    zeroInfo: [zeroPrefix, zeroSuffix],\n    oneInfo: [onePrefix, oneSuffix]\n  };\n};\n/**\n * @hidden\n */\n\nexport var getFormatSymbols = function (format, intlService) {\n  var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n  var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n  var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n  var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n  var symbols = intlService.numberSymbols();\n  var sanitizeRegex = new RegExp(\"[\\\\d\\\\\" + symbols.decimal + symbols.group + \"]\", 'g');\n  var resultWithDuplicates = [positiveResult, negativeResult, zeroResult, oneResult].map(function (result) {\n    return result.replace(sanitizeRegex, '');\n  }).join('');\n  return resultWithDuplicates.split('').filter(function (x, n, s) {\n    return s.indexOf(x) === n;\n  }).join('');\n};\n/**\n * @hidden\n */\n\nexport var getInitialPosition = function (nextLooseValue, symbols) {\n  var decimalIdex = nextLooseValue.indexOf(symbols.decimal);\n\n  if (decimalIdex > -1) {\n    return decimalIdex;\n  }\n\n  return getLastNumberIndex(nextLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\n\nexport var reverseString = function (str) {\n  return str.split('').reverse().join('');\n};\n/**\n * @hidden\n */\n\nexport var getLastNumberIndex = function (currentLooseValue, inputRegex) {\n  return currentLooseValue.length - reverseString(currentLooseValue).search(inputRegex);\n};\n/**\n * @hidden\n */\n\nexport var getPrefix = function (str) {\n  return str.split(str[str.search(DIGITS_REGEX)])[0];\n};\n/**\n * @hidden\n */\n\nexport var getSuffix = function (str) {\n  var reversedString = reverseString(str);\n  return reverseString(reversedString.split(reversedString[reversedString.search(DIGITS_REGEX)])[0]);\n};\n/**\n * @hidden\n */\n\nexport var getFirstNumberIndex = function (prevLooseValue, inputRegex) {\n  return prevLooseValue.search(inputRegex);\n};\n/**\n * @hidden\n */\n\nexport var getDecimalCount = function (value, decimal) {\n  var currentDecimalPlace = value.indexOf(decimal);\n  return currentDecimalPlace > -1 ? value.length - currentDecimalPlace - 1 : 0;\n};\n/**\n * @hidden\n */\n\nexport var changeBasedSelection = function (currentValue, nextValue, selectionPosition, isDelete, sanitizeRegex) {\n  var isCurrentLeadingZero = currentValue.replace(sanitizeRegex, '')[0] === '0';\n  var isNextLeadingZero = nextValue.replace(sanitizeRegex, '')[0] === '0';\n\n  if (isCurrentLeadingZero && !isNextLeadingZero) {\n    return selectionPosition - 1;\n  }\n\n  if (isNextLeadingZero && isDelete) {\n    return selectionPosition + 1;\n  }\n\n  var numberCounter = 0;\n\n  for (var idx = 0; idx < selectionPosition; idx++) {\n    if (DIGITS_REGEX.test(currentValue.charAt(idx))) {\n      numberCounter++;\n    }\n  }\n\n  var newSelection = 0;\n\n  while (numberCounter > 0 && nextValue.length > newSelection) {\n    if (DIGITS_REGEX.test(nextValue.charAt(newSelection))) {\n      numberCounter--;\n    }\n\n    newSelection++;\n  }\n\n  return newSelection;\n};\n/**\n * @hidden\n */\n\nexport var sanitizeNumber = function (state, format, intlService) {\n  var newState = __assign({}, state);\n\n  var prevLooseValue = newState.prevLooseValue;\n  var symbols = intlService.numberSymbols();\n  var restrictedSymbols = getFormatSymbols(format, intlService);\n  var currentLooseValueAsString = String(newState.currentLooseValue);\n  var prevLooseValueAsString = String(prevLooseValue);\n  var sanitizeRegex = new RegExp(\"[^\\\\d\\\\\" + symbols.decimal + \"]\", 'g');\n  var sanitizeGroupRegex = new RegExp(\"[^\\\\d\\\\\" + symbols.decimal + \"\\\\\" + symbols.group + \"]\", 'g');\n  var allSymbolsRegex = new RegExp(\"[\\\\d\\\\\" + symbols.decimal + \"\\\\\" + symbols.group + \"]\");\n  var sanitizedString = currentLooseValueAsString.replace(sanitizeRegex, '');\n  var numberStart = getFirstNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n  var numberEnd = numberStart === -1 ? -1 : getLastNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n  var decimalIndex = currentLooseValueAsString.indexOf(symbols.decimal);\n  var sanitizedFormattedString = (currentLooseValueAsString.substring(0, numberStart) + currentLooseValueAsString.substring(numberStart, numberEnd).replace(sanitizeGroupRegex, '') + currentLooseValueAsString.substring(numberEnd, currentLooseValueAsString.length)).split('').filter(function (s) {\n    return restrictedSymbols.indexOf(s) !== -1 || s.search(allSymbolsRegex) !== -1;\n  }).join('');\n  var formattedMax = intlService.formatNumber(MAX_DECIMAL, format).replace(sanitizeRegex, '');\n  var maxDecimalIndex = formattedMax.indexOf(symbols.decimal);\n  var maxDecimalCount = maxDecimalIndex > -1 ? formattedMax.length - maxDecimalIndex - 1 : 0;\n  var formattedMin = intlService.formatNumber(MIN_DECIMAL, format).replace(sanitizeRegex, '');\n  var minDecimalIndex = formattedMin.indexOf(symbols.decimal);\n  var minDecimalCount = minDecimalIndex > -1 ? formattedMin.length - minDecimalIndex - 1 : 0;\n\n  var _a = getFormatPrefixSufix(format, intlService),\n      positiveInfo = _a.positiveInfo,\n      negativeInfo = _a.negativeInfo,\n      zeroInfo = _a.zeroInfo,\n      oneInfo = _a.oneInfo;\n\n  var formatInfo = [positiveInfo, negativeInfo, zeroInfo, oneInfo];\n  var isFormatContainPrefixSuffix = formatInfo.findIndex(function (info) {\n    return info.findIndex(function (nestedInfo) {\n      return Boolean(nestedInfo);\n    }) !== -1;\n  }) !== 1;\n  var isDelete = currentLooseValueAsString.length > 0 && currentLooseValueAsString.length < prevLooseValueAsString.length;\n\n  if (!newState.isPaste) {\n    // 1. Empty input\n    if (currentLooseValueAsString === '') {\n      newState.eventValue = null;\n      newState.currentLooseValue = '';\n      return newState;\n    } // 2. Check is minus sign\n\n\n    if (newState.currentLooseValue === symbols.minusSign && intlService.formatNumber(-0, format) !== prevLooseValueAsString) {\n      newState.eventValue = -0;\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols), newState.currentLooseValue, formatInfo);\n      return newState;\n    } // 3. Minus sign toggle\n\n\n    if (isMinusSymbolAdded(newState, symbols)) {\n      var nextValue = intlService.parseNumber(prevLooseValue, format);\n      newState.eventValue = -(nextValue !== null ? nextValue : 0);\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      var currentNumberStart = getFirstNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n      var oldNumberStart = getFirstNumberIndex(prevLooseValueAsString, DIGITS_REGEX);\n      setSelection(newState, newState.selectionEnd - 1 + (currentNumberStart - oldNumberStart), newState.currentLooseValue, formatInfo);\n      return newState;\n    } // 4. Check is decimal symbol\n\n\n    if (newState.currentLooseValue === symbols.decimal) {\n      newState.eventValue = 0;\n      var valueCandidate = formatValue(newState.eventValue, format, intlService);\n\n      if (minDecimalCount === 0 && maxDecimalCount > 0) {\n        var currentLastNumberIndex = getLastNumberIndex(valueCandidate, DIGITS_REGEX);\n        newState.currentLooseValue = valueCandidate.substring(0, currentLastNumberIndex) + symbols.decimal + valueCandidate.substring(currentLastNumberIndex);\n      } else {\n        newState.currentLooseValue = valueCandidate;\n      }\n\n      setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols) + 1, newState.currentLooseValue, formatInfo);\n      return newState;\n    } // 5. Duplicate decimal - it's possible only as trailing\n\n\n    if (isDecimalDuplicated(newState, symbols)) {\n      setInvalid(newState, format, formatInfo, intlService);\n      return newState;\n    } // 6. Percent format\n\n\n    if (format && format[0] === 'p' && currentLooseValueAsString && currentLooseValueAsString.indexOf(symbols.percentSign) === -1) {\n      newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format) / 100;\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      return newState;\n    } // 7. More than 15 numeric symbols\n\n\n    var numericSymbols = String(newState.currentLooseValue).replace(/[^\\d]/g, '');\n\n    if (numericSymbols.length > MAX_PRECISION) {\n      setInvalid(newState, format, formatInfo, intlService);\n      return newState;\n    } // 8. Check prefix / suffix for modifications\n\n\n    if (sanitizedString !== currentLooseValueAsString && currentLooseValueAsString && isFormatContainPrefixSuffix) {\n      var formatInfoIndex = formatInfo.findIndex(function (_a) {\n        var prefix = _a[0],\n            suffix = _a[1];\n        var prefixIndex = currentLooseValueAsString.indexOf(prefix);\n        var suffixIndex = currentLooseValueAsString.indexOf(suffix);\n        var prefixFound = prefixIndex === 0;\n        var suffixFound = suffixIndex === currentLooseValueAsString.length - suffix.length;\n        var prefixGap = prefixIndex + prefix.length !== numberStart && numberStart !== -1 && currentLooseValueAsString[prefixIndex + prefix.length] !== symbols.decimal;\n        var suffixGap = suffixIndex !== numberEnd && numberEnd !== -1 && currentLooseValueAsString[suffixIndex - 1] !== symbols.decimal;\n\n        if (prefix && suffix) {\n          if (prefixGap || suffixGap) {\n            return false;\n          }\n\n          return prefixFound && suffixFound;\n        }\n\n        if (prefix) {\n          if (prefixGap) {\n            return false;\n          }\n\n          return prefixFound;\n        }\n\n        if (suffix) {\n          if (suffixGap) {\n            return false;\n          }\n\n          return suffixFound;\n        }\n\n        return false;\n      });\n\n      if (formatInfoIndex === -1) {\n        setInvalid(newState, format, formatInfo, intlService);\n        return newState;\n      }\n    } // 9. Value ending on decimal separator (here as decimal might be typed inside format)\n\n\n    if (sanitizedString[sanitizedString.length - 1] === symbols.decimal && maxDecimalCount > 0) {\n      newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format);\n      newState.currentLooseValue = sanitizedFormattedString;\n      return newState;\n    } // 10. prevent deleting decimal and group symbols\n\n\n    if (newState.currentLooseValue && prevLooseValue) {\n      var isSpecialSymbolDeleted = (restrictedSymbols + symbols.decimal + symbols.group).split('').findIndex(function (s) {\n        if (currentLooseValueAsString.split('').filter(function (x) {\n          return x === s;\n        }).length < prevLooseValueAsString.split('').filter(function (x) {\n          return x === s;\n        }).length && currentLooseValueAsString.length + 1 === prevLooseValueAsString.length) {\n          if (s === symbols.decimal && getDecimalCount(prevLooseValueAsString.replace(sanitizeRegex, ''), symbols.decimal) === 0) {\n            return false;\n          }\n\n          return true;\n        }\n\n        return false;\n      }) > -1;\n\n      if (isSpecialSymbolDeleted) {\n        newState.eventValue = intlService.parseNumber(state.prevLooseValue, format);\n        newState.currentLooseValue = state.prevLooseValue;\n        return newState;\n      }\n    }\n\n    var currentDecimalCount = getDecimalCount(sanitizedString, symbols.decimal);\n    var endsOnDecimal = sanitizedString[sanitizedString.length - 1] === '0'; // 11. Deleting more decimals than allowed\n\n    if (isDelete && endsOnDecimal && currentDecimalCount < minDecimalCount) {\n      newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      return newState;\n    } // 12. Ending on zero OR more decimals than allowed\n\n\n    if (currentDecimalCount > 0) {\n      var valueUntillDecimal = currentLooseValueAsString.substring(0, decimalIndex);\n\n      if (endsOnDecimal && (!valueUntillDecimal || prevLooseValueAsString.indexOf(valueUntillDecimal) !== 0)) {\n        // ending on zero but typing before decimal separator\n        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n        var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n        setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n        newState.currentLooseValue = nextLooseValue;\n        return newState;\n      }\n\n      if (currentDecimalCount > maxDecimalCount) {\n        // typing more symbols than format allows\n        var looseDecimalPlace = currentLooseValueAsString.indexOf(symbols.decimal);\n        var result = currentLooseValueAsString.substring(0, looseDecimalPlace) + currentLooseValueAsString.substring(looseDecimalPlace, looseDecimalPlace + 1 + maxDecimalCount) + currentLooseValueAsString.substring(numberEnd, String(newState.currentLooseValue).length);\n        newState.eventValue = intlService.parseNumber(result, format);\n        newState.currentLooseValue = result;\n        setSelection(newState, newState.selectionStart, result, formatInfo);\n        return newState;\n      }\n\n      if (minDecimalCount !== maxDecimalCount && currentDecimalCount <= maxDecimalCount && endsOnDecimal) {\n        // adding trailing zeroes\n        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n        newState.currentLooseValue = sanitizedFormattedString;\n        return newState;\n      }\n\n      if (currentDecimalCount < minDecimalCount) {\n        // deleting more decimals than allowed\n        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n        newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n        return newState;\n      }\n    }\n  } // X. All other values should be parsed\n\n\n  newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n\n  if (typeof newState.eventValue === 'number') {\n    var nextLooseValue = formatValue(newState.eventValue, format, intlService); // First digit add\n\n    if (currentLooseValueAsString.length === 1) {\n      setSelection(newState, getInitialPosition(nextLooseValue, symbols), nextLooseValue, formatInfo);\n    } else {\n      setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n    }\n\n    newState.currentLooseValue = nextLooseValue;\n  } else {\n    // Case when deleting last number\n    newState.currentLooseValue = formatValue(intlService.parseNumber(sanitizedString), format, intlService);\n  }\n\n  return newState;\n};","map":{"version":3,"sources":["../../../../src/numerictextbox/utils/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar DEFAULT_NUMBER = 1111111.1111111;\nvar MAX_DECIMAL = 0.31111111111111117;\nvar MIN_DECIMAL = 1;\nvar ONE_NUMBER = 1;\nvar ZERO_NUMBER = 0;\nvar DIGITS_REGEX = /\\d/;\nvar MAX_PRECISION = 15;\n/**\n * @hidden\n */\nexport var getInitialState = function () { return ({\n    eventValue: null,\n    prevLooseValue: '',\n    currentLooseValue: '',\n    focused: false,\n    selectionStart: undefined,\n    selectionEnd: undefined,\n    decimalSelect: false,\n    valueIsCorrected: false,\n    valueIsOutOfRange: false\n}); };\n/**\n * @hidden\n */\nexport var getStateOrPropsValue = function (value, stateValue) {\n    return value !== undefined ? value : stateValue;\n};\n/**\n * @hidden\n */\nexport var formatValue = function (value, format, intlService) {\n    if (value === null && value === undefined) {\n        return '';\n    }\n    if (typeof value === 'string') {\n        return value;\n    }\n    return intlService.formatNumber(value, format);\n};\n/**\n * @hidden\n */\nexport var fractionLength = function (value) {\n    return (String(value).split('.')[1] || '').length;\n};\n/**\n * @hidden\n */\nvar maxFractionLength = function (value1, value2) {\n    return Math.max(fractionLength(value1), fractionLength(value2));\n};\n/**\n * @hidden\n */\nexport var limitPrecision = function (precision) { return Math.min(precision, MAX_PRECISION); };\n/**\n * @hidden\n */\nexport var toFixedPrecision = function (value, precision) {\n    var maxPrecision = limitPrecision(precision);\n    return parseFloat(value.toFixed(maxPrecision));\n};\n/**\n * @hidden\n */\nexport var increaseValue = function (value, newState, step, min, max, format, intlService) {\n    var maxPrecision = maxFractionLength(value || 0, step || 0);\n    var increasedValue = rangeValue(toFixedPrecision((value || 0) + (step || 0), maxPrecision), min, max);\n    newState.eventValue = increasedValue;\n    newState.currentLooseValue = formatValue(increasedValue, format, intlService);\n    newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var decreaseValue = function (value, newState, step, min, max, format, intlService) {\n    var maxPrecision = maxFractionLength(value || 0, step || 0);\n    var decreasedValue = rangeValue(toFixedPrecision((value || 0) - (step || 0), maxPrecision), min, max);\n    newState.eventValue = decreasedValue;\n    newState.currentLooseValue = formatValue(decreasedValue, format, intlService);\n    newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var rangeValue = function (value, min, max) {\n    if (value == null) {\n        return value;\n    }\n    if (!(value > 1 || value < 1 || value === 1)) {\n        // null, undefined or NaN\n        return null;\n    }\n    if (max !== undefined && min !== undefined && max < min) {\n        return null;\n    }\n    if (max !== undefined && value > max) {\n        value = max;\n    }\n    if (min !== undefined && value < min) {\n        value = min;\n    }\n    return value;\n};\n/**\n * @hidden\n */\nexport var getMaxCursorPosition = function (nextValue, formatInfo) {\n    var formatSuffixIndex = formatInfo.findIndex(function (_a) {\n        var _ = _a[0], currSuffix = _a[1];\n        return Boolean(currSuffix) && nextValue.indexOf(currSuffix) === nextValue.length - currSuffix.length;\n    });\n    if (formatSuffixIndex === -1) {\n        return -1;\n    }\n    var suffix = formatInfo[formatSuffixIndex][1];\n    return nextValue.length - suffix.length;\n};\n/**\n * @hidden\n */\nexport var getMinCursorPosition = function (nextValue, formatInfo) {\n    var formatPrefixIndex = formatInfo.findIndex(function (_a) {\n        var currPrefix = _a[0], _ = _a[1];\n        return Boolean(currPrefix) && nextValue.indexOf(currPrefix) === 0;\n    });\n    if (formatPrefixIndex === -1) {\n        return -1;\n    }\n    var prefix = formatInfo[formatPrefixIndex][0];\n    return prefix.length;\n};\n/**\n * @hidden\n */\nexport var rangeSelection = function (nextLooseValue, formatInfo, newState) {\n    var maxPosition = getMaxCursorPosition(nextLooseValue, formatInfo);\n    if (maxPosition !== -1 && newState.selectionStart > maxPosition) {\n        newState.selectionStart = newState.selectionEnd = maxPosition;\n        return;\n    }\n    if (newState.selectionStart > nextLooseValue.length) {\n        newState.selectionStart = newState.selectionEnd = nextLooseValue.length;\n    }\n    var minPosition = getMinCursorPosition(nextLooseValue, formatInfo);\n    if (minPosition !== -1 && newState.selectionStart < minPosition) {\n        newState.selectionStart = newState.selectionEnd = minPosition;\n    }\n    if (newState.selectionStart === -1) {\n        newState.selectionStart = newState.selectionEnd = 0;\n    }\n};\n/**\n * @hidden\n */\nexport var setSelection = function (newState, newIndex, nextLooseValue, formatInfo) {\n    newState.selectionStart = newState.selectionEnd = newIndex;\n    rangeSelection(nextLooseValue, formatInfo, newState);\n};\n/**\n * @hidden\n */\nexport var setInvalid = function (newState, format, formatInfo, intlService) {\n    newState.eventValue = intlService.parseNumber(newState.prevLooseValue, format);\n    newState.currentLooseValue = newState.prevLooseValue;\n    newState.valueIsCorrected = true;\n    setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n};\n/**\n * @hidden\n */\nexport var isMinusSymbolAdded = function (newState, symbols) {\n    var newText = String(newState.currentLooseValue);\n    var oldText = String(newState.prevLooseValue);\n    return (newText.split(symbols.minusSign).length !== oldText.split(symbols.minusSign).length &&\n        newText.length === oldText.length + symbols.minusSign.length);\n};\n/**\n * @hidden\n */\nexport var isDecimalDuplicated = function (newState, symbols) {\n    var newText = String(newState.currentLooseValue);\n    return newText.split(symbols.decimal).length > 2;\n};\n/**\n * @hidden\n */\nexport var getFormatPrefixSufix = function (format, intlService) {\n    var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n    var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n    var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n    var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n    var positivePrefix = getPrefix(positiveResult);\n    var negativePrefix = getPrefix(negativeResult);\n    var zeroPrefix = getPrefix(zeroResult);\n    var onePrefix = getPrefix(oneResult);\n    var positiveSuffix = getSuffix(positiveResult);\n    var negativeSuffix = getSuffix(negativeResult);\n    var zeroSuffix = getSuffix(zeroResult);\n    var oneSuffix = getSuffix(oneResult);\n    return {\n        positiveInfo: [positivePrefix, positiveSuffix],\n        negativeInfo: [negativePrefix, negativeSuffix],\n        zeroInfo: [zeroPrefix, zeroSuffix],\n        oneInfo: [onePrefix, oneSuffix]\n    };\n};\n/**\n * @hidden\n */\nexport var getFormatSymbols = function (format, intlService) {\n    var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n    var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n    var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n    var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n    var symbols = intlService.numberSymbols();\n    var sanitizeRegex = new RegExp(\"[\\\\d\\\\\" + symbols.decimal + symbols.group + \"]\", 'g');\n    var resultWithDuplicates = [positiveResult, negativeResult, zeroResult, oneResult]\n        .map(function (result) { return result.replace(sanitizeRegex, ''); })\n        .join('');\n    return resultWithDuplicates\n        .split('')\n        .filter(function (x, n, s) { return s.indexOf(x) === n; })\n        .join('');\n};\n/**\n * @hidden\n */\nexport var getInitialPosition = function (nextLooseValue, symbols) {\n    var decimalIdex = nextLooseValue.indexOf(symbols.decimal);\n    if (decimalIdex > -1) {\n        return decimalIdex;\n    }\n    return getLastNumberIndex(nextLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var reverseString = function (str) {\n    return str.split('').reverse().join('');\n};\n/**\n * @hidden\n */\nexport var getLastNumberIndex = function (currentLooseValue, inputRegex) {\n    return currentLooseValue.length - reverseString(currentLooseValue).search(inputRegex);\n};\n/**\n * @hidden\n */\nexport var getPrefix = function (str) {\n    return str.split(str[str.search(DIGITS_REGEX)])[0];\n};\n/**\n * @hidden\n */\nexport var getSuffix = function (str) {\n    var reversedString = reverseString(str);\n    return reverseString(reversedString.split(reversedString[reversedString.search(DIGITS_REGEX)])[0]);\n};\n/**\n * @hidden\n */\nexport var getFirstNumberIndex = function (prevLooseValue, inputRegex) {\n    return prevLooseValue.search(inputRegex);\n};\n/**\n * @hidden\n */\nexport var getDecimalCount = function (value, decimal) {\n    var currentDecimalPlace = value.indexOf(decimal);\n    return currentDecimalPlace > -1 ? value.length - currentDecimalPlace - 1 : 0;\n};\n/**\n * @hidden\n */\nexport var changeBasedSelection = function (currentValue, nextValue, selectionPosition, isDelete, sanitizeRegex) {\n    var isCurrentLeadingZero = currentValue.replace(sanitizeRegex, '')[0] === '0';\n    var isNextLeadingZero = nextValue.replace(sanitizeRegex, '')[0] === '0';\n    if (isCurrentLeadingZero && !isNextLeadingZero) {\n        return selectionPosition - 1;\n    }\n    if (isNextLeadingZero && isDelete) {\n        return selectionPosition + 1;\n    }\n    var numberCounter = 0;\n    for (var idx = 0; idx < selectionPosition; idx++) {\n        if (DIGITS_REGEX.test(currentValue.charAt(idx))) {\n            numberCounter++;\n        }\n    }\n    var newSelection = 0;\n    while (numberCounter > 0 && nextValue.length > newSelection) {\n        if (DIGITS_REGEX.test(nextValue.charAt(newSelection))) {\n            numberCounter--;\n        }\n        newSelection++;\n    }\n    return newSelection;\n};\n/**\n * @hidden\n */\nexport var sanitizeNumber = function (state, format, intlService) {\n    var newState = __assign({}, state);\n    var prevLooseValue = newState.prevLooseValue;\n    var symbols = intlService.numberSymbols();\n    var restrictedSymbols = getFormatSymbols(format, intlService);\n    var currentLooseValueAsString = String(newState.currentLooseValue);\n    var prevLooseValueAsString = String(prevLooseValue);\n    var sanitizeRegex = new RegExp(\"[^\\\\d\\\\\" + symbols.decimal + \"]\", 'g');\n    var sanitizeGroupRegex = new RegExp(\"[^\\\\d\\\\\" + symbols.decimal + \"\\\\\" + symbols.group + \"]\", 'g');\n    var allSymbolsRegex = new RegExp(\"[\\\\d\\\\\" + symbols.decimal + \"\\\\\" + symbols.group + \"]\");\n    var sanitizedString = currentLooseValueAsString.replace(sanitizeRegex, '');\n    var numberStart = getFirstNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n    var numberEnd = numberStart === -1 ? -1 : getLastNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n    var decimalIndex = currentLooseValueAsString.indexOf(symbols.decimal);\n    var sanitizedFormattedString = (currentLooseValueAsString.substring(0, numberStart) +\n        currentLooseValueAsString.substring(numberStart, numberEnd).replace(sanitizeGroupRegex, '') +\n        currentLooseValueAsString.substring(numberEnd, currentLooseValueAsString.length))\n        .split('')\n        .filter(function (s) { return restrictedSymbols.indexOf(s) !== -1 || s.search(allSymbolsRegex) !== -1; })\n        .join('');\n    var formattedMax = intlService.formatNumber(MAX_DECIMAL, format).replace(sanitizeRegex, '');\n    var maxDecimalIndex = formattedMax.indexOf(symbols.decimal);\n    var maxDecimalCount = maxDecimalIndex > -1 ? formattedMax.length - maxDecimalIndex - 1 : 0;\n    var formattedMin = intlService.formatNumber(MIN_DECIMAL, format).replace(sanitizeRegex, '');\n    var minDecimalIndex = formattedMin.indexOf(symbols.decimal);\n    var minDecimalCount = minDecimalIndex > -1 ? formattedMin.length - minDecimalIndex - 1 : 0;\n    var _a = getFormatPrefixSufix(format, intlService), positiveInfo = _a.positiveInfo, negativeInfo = _a.negativeInfo, zeroInfo = _a.zeroInfo, oneInfo = _a.oneInfo;\n    var formatInfo = [positiveInfo, negativeInfo, zeroInfo, oneInfo];\n    var isFormatContainPrefixSuffix = formatInfo.findIndex(function (info) { return info.findIndex(function (nestedInfo) { return Boolean(nestedInfo); }) !== -1; }) !== 1;\n    var isDelete = currentLooseValueAsString.length > 0 && currentLooseValueAsString.length < prevLooseValueAsString.length;\n    if (!newState.isPaste) {\n        // 1. Empty input\n        if (currentLooseValueAsString === '') {\n            newState.eventValue = null;\n            newState.currentLooseValue = '';\n            return newState;\n        }\n        // 2. Check is minus sign\n        if (newState.currentLooseValue === symbols.minusSign && intlService.formatNumber(-0, format) !== prevLooseValueAsString) {\n            newState.eventValue = -0;\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols), newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        // 3. Minus sign toggle\n        if (isMinusSymbolAdded(newState, symbols)) {\n            var nextValue = intlService.parseNumber(prevLooseValue, format);\n            newState.eventValue = -(nextValue !== null ? nextValue : 0);\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            var currentNumberStart = getFirstNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n            var oldNumberStart = getFirstNumberIndex(prevLooseValueAsString, DIGITS_REGEX);\n            setSelection(newState, newState.selectionEnd - 1 + (currentNumberStart - oldNumberStart), newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        // 4. Check is decimal symbol\n        if (newState.currentLooseValue === symbols.decimal) {\n            newState.eventValue = 0;\n            var valueCandidate = formatValue(newState.eventValue, format, intlService);\n            if (minDecimalCount === 0 && maxDecimalCount > 0) {\n                var currentLastNumberIndex = getLastNumberIndex(valueCandidate, DIGITS_REGEX);\n                newState.currentLooseValue = valueCandidate.substring(0, currentLastNumberIndex) +\n                    symbols.decimal +\n                    valueCandidate.substring(currentLastNumberIndex);\n            }\n            else {\n                newState.currentLooseValue = valueCandidate;\n            }\n            setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols) + 1, newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        // 5. Duplicate decimal - it's possible only as trailing\n        if (isDecimalDuplicated(newState, symbols)) {\n            setInvalid(newState, format, formatInfo, intlService);\n            return newState;\n        }\n        // 6. Percent format\n        if (format && format[0] === 'p' && currentLooseValueAsString && currentLooseValueAsString.indexOf(symbols.percentSign) === -1) {\n            newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format) / 100;\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            return newState;\n        }\n        // 7. More than 15 numeric symbols\n        var numericSymbols = String(newState.currentLooseValue).replace(/[^\\d]/g, '');\n        if (numericSymbols.length > MAX_PRECISION) {\n            setInvalid(newState, format, formatInfo, intlService);\n            return newState;\n        }\n        // 8. Check prefix / suffix for modifications\n        if (sanitizedString !== currentLooseValueAsString &&\n            currentLooseValueAsString &&\n            isFormatContainPrefixSuffix) {\n            var formatInfoIndex = formatInfo.findIndex(function (_a) {\n                var prefix = _a[0], suffix = _a[1];\n                var prefixIndex = currentLooseValueAsString.indexOf(prefix);\n                var suffixIndex = currentLooseValueAsString.indexOf(suffix);\n                var prefixFound = prefixIndex === 0;\n                var suffixFound = suffixIndex === currentLooseValueAsString.length - suffix.length;\n                var prefixGap = prefixIndex + prefix.length !== numberStart &&\n                    numberStart !== -1 &&\n                    currentLooseValueAsString[prefixIndex + prefix.length] !== symbols.decimal;\n                var suffixGap = suffixIndex !== numberEnd &&\n                    numberEnd !== -1 &&\n                    currentLooseValueAsString[suffixIndex - 1] !== symbols.decimal;\n                if (prefix && suffix) {\n                    if (prefixGap || suffixGap) {\n                        return false;\n                    }\n                    return prefixFound && suffixFound;\n                }\n                if (prefix) {\n                    if (prefixGap) {\n                        return false;\n                    }\n                    return prefixFound;\n                }\n                if (suffix) {\n                    if (suffixGap) {\n                        return false;\n                    }\n                    return suffixFound;\n                }\n                return false;\n            });\n            if (formatInfoIndex === -1) {\n                setInvalid(newState, format, formatInfo, intlService);\n                return newState;\n            }\n        }\n        // 9. Value ending on decimal separator (here as decimal might be typed inside format)\n        if (sanitizedString[sanitizedString.length - 1] === symbols.decimal && maxDecimalCount > 0) {\n            newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format);\n            newState.currentLooseValue = sanitizedFormattedString;\n            return newState;\n        }\n        // 10. prevent deleting decimal and group symbols\n        if (newState.currentLooseValue && prevLooseValue) {\n            var isSpecialSymbolDeleted = (restrictedSymbols + symbols.decimal + symbols.group)\n                .split('')\n                .findIndex(function (s) {\n                if (currentLooseValueAsString.split('').filter(function (x) { return x === s; }).length <\n                    prevLooseValueAsString.split('').filter(function (x) { return x === s; }).length &&\n                    currentLooseValueAsString.length + 1 === prevLooseValueAsString.length) {\n                    if (s === symbols.decimal &&\n                        getDecimalCount(prevLooseValueAsString.replace(sanitizeRegex, ''), symbols.decimal) === 0) {\n                        return false;\n                    }\n                    return true;\n                }\n                return false;\n            }) > -1;\n            if (isSpecialSymbolDeleted) {\n                newState.eventValue = intlService.parseNumber(state.prevLooseValue, format);\n                newState.currentLooseValue = state.prevLooseValue;\n                return newState;\n            }\n        }\n        var currentDecimalCount = getDecimalCount(sanitizedString, symbols.decimal);\n        var endsOnDecimal = sanitizedString[sanitizedString.length - 1] === '0';\n        // 11. Deleting more decimals than allowed\n        if (isDelete && endsOnDecimal && currentDecimalCount < minDecimalCount) {\n            newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            return newState;\n        }\n        // 12. Ending on zero OR more decimals than allowed\n        if (currentDecimalCount > 0) {\n            var valueUntillDecimal = currentLooseValueAsString.substring(0, decimalIndex);\n            if (endsOnDecimal && (!valueUntillDecimal || prevLooseValueAsString.indexOf(valueUntillDecimal) !== 0)) {\n                // ending on zero but typing before decimal separator\n                newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n                var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n                setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n                newState.currentLooseValue = nextLooseValue;\n                return newState;\n            }\n            if (currentDecimalCount > maxDecimalCount) {\n                // typing more symbols than format allows\n                var looseDecimalPlace = currentLooseValueAsString.indexOf(symbols.decimal);\n                var result = currentLooseValueAsString.substring(0, looseDecimalPlace) +\n                    currentLooseValueAsString.substring(looseDecimalPlace, looseDecimalPlace + 1 + maxDecimalCount) +\n                    currentLooseValueAsString.substring(numberEnd, String(newState.currentLooseValue).length);\n                newState.eventValue = intlService.parseNumber(result, format);\n                newState.currentLooseValue = result;\n                setSelection(newState, newState.selectionStart, result, formatInfo);\n                return newState;\n            }\n            if (minDecimalCount !== maxDecimalCount && currentDecimalCount <= maxDecimalCount && endsOnDecimal) {\n                // adding trailing zeroes\n                newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n                newState.currentLooseValue = sanitizedFormattedString;\n                return newState;\n            }\n            if (currentDecimalCount < minDecimalCount) {\n                // deleting more decimals than allowed\n                newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n                newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n                return newState;\n            }\n        }\n    }\n    // X. All other values should be parsed\n    newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n    if (typeof newState.eventValue === 'number') {\n        var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n        // First digit add\n        if (currentLooseValueAsString.length === 1) {\n            setSelection(newState, getInitialPosition(nextLooseValue, symbols), nextLooseValue, formatInfo);\n        }\n        else {\n            setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n        }\n        newState.currentLooseValue = nextLooseValue;\n    }\n    else {\n        // Case when deleting last number\n        newState.currentLooseValue = formatValue(intlService.parseNumber(sanitizedString), format, intlService);\n    }\n    return newState;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}