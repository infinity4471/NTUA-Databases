{"ast":null,"code":"import { cloneDate } from '@progress/kendo-date-math';\n\nvar setHours = function (date, hours) {\n  var clone = cloneDate(date);\n  clone.setHours(hours);\n  return clone;\n};\n\nvar isAM = function (value) {\n  return value !== null && value < 12;\n};\n\nvar isPM = function (value) {\n  return value !== null && (!value || value > 11);\n};\n\nvar inRange = function (value, min, max) {\n  return !min && !max || value >= min && value <= max;\n};\n\nvar inReverseRange = function (value, min, max) {\n  return !min && !max || value >= min || value <= max;\n};\n/**\n * @hidden\n */\n\n\nvar DayPeriodService =\n/** @class */\nfunction () {\n  function DayPeriodService(intl) {\n    this.intl = intl;\n  }\n  /**\n   * @hidden\n   */\n\n\n  DayPeriodService.prototype.apply = function (value, candidate) {\n    var hour = value.getHours();\n    var hourAM = isAM(hour);\n    var candidateAM = isAM(candidate.getHours());\n\n    if (hourAM && candidateAM || !hourAM && !candidateAM) {\n      return value;\n    }\n\n    var _a = this.normalizedRange(),\n        min = _a[0],\n        _b = _a[1],\n        max = _b === void 0 ? 24 : _b;\n\n    var result = hour + (candidateAM ? -12 : 12);\n    return setHours(value, Math.min(Math.max(min, result), max || 24));\n  };\n  /**\n   * @hidden\n   */\n\n\n  DayPeriodService.prototype.configure = function (settings) {\n    var _a = settings.min,\n        min = _a === void 0 ? this.min : _a,\n        _b = settings.max,\n        max = _b === void 0 ? this.max : _b,\n        _c = settings.part,\n        part = _c === void 0 ? this.part : _c;\n    this.min = min;\n    this.max = max;\n    this.part = part;\n  };\n  /**\n   * @hidden\n   */\n\n\n  DayPeriodService.prototype.data = function (_) {\n    var names = this.part.names;\n\n    if (!names) {\n      return [];\n    }\n\n    var data = [];\n\n    var _a = this.normalizedRange(),\n        min = _a[0],\n        max = _a[1];\n\n    var dayPeriod = this.intl.dateFormatNames(names);\n\n    if (isAM(min)) {\n      data.push({\n        text: dayPeriod.am,\n        value: setHours(this.min, min)\n      });\n    }\n\n    if (isPM(max)) {\n      data.push({\n        text: dayPeriod.pm,\n        value: setHours(this.min, Math.max(12, max))\n      });\n    }\n\n    return this.min.getHours() !== min ? data.reverse() : data;\n  };\n  /**\n   * @hidden\n   */\n\n\n  DayPeriodService.prototype.isRangeChanged = function (_, __) {\n    return false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  DayPeriodService.prototype.limitRange = function (min, max, _) {\n    return [min, max];\n  };\n  /**\n   * @hidden\n   */\n\n\n  DayPeriodService.prototype.total = function () {\n    var _a = this.normalizedRange(),\n        min = _a[0],\n        max = _a[1];\n\n    if (!min && !max) {\n      return 2;\n    }\n\n    if (min > 11 || max < 12) {\n      return 1;\n    }\n\n    return 2;\n  };\n  /**\n   * @hidden\n   */\n\n\n  DayPeriodService.prototype.selectedIndex = function (value) {\n    if (!this.valueInList(value)) {\n      return -1;\n    }\n\n    var index = Math.floor(value.getHours() / 12);\n    return this.min.getHours() === this.normalizedRange()[0] ? index : index === 0 ? 1 : 0;\n  };\n  /**\n   * @hidden\n   */\n\n\n  DayPeriodService.prototype.valueInList = function (value) {\n    var reverse = this.min.getHours() !== this.normalizedRange()[0];\n    var isInRange = reverse ? inReverseRange : inRange;\n    return isInRange(value.getHours(), this.min.getHours(), this.max.getHours());\n  };\n\n  DayPeriodService.prototype.normalizedRange = function () {\n    var minHour = this.min.getHours();\n    var maxHour = this.max.getHours();\n    return [Math.min(minHour, maxHour), Math.max(minHour, maxHour)];\n  };\n\n  return DayPeriodService;\n}();\n\nexport { DayPeriodService };","map":{"version":3,"sources":["../../../../src/timepicker/services/DayPeriodService.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,2BAA1B;;AAOA,IAAM,QAAQ,GAAG,UAAC,IAAD,EAAa,KAAb,EAA0B;AACvC,MAAM,KAAK,GAAG,SAAS,CAAC,IAAD,CAAvB;AACA,EAAA,KAAK,CAAC,QAAN,CAAe,KAAf;AACA,SAAO,KAAP;AACH,CAJD;;AAMA,IAAM,IAAI,GAAG,UAAC,KAAD,EAAc;AAAc,SAAA,KAAK,KAAK,IAAV,IAAkB,KAAK,GAAvB,EAAA;AAA4B,CAArE;;AACA,IAAM,IAAI,GAAG,UAAC,KAAD,EAAc;AAAc,SAAA,KAAK,KAAK,IAAV,KAAmB,CAAC,KAAD,IAAU,KAAK,GAAlC,EAAA,CAAA;AAAwC,CAAjF;;AAEA,IAAM,OAAO,GAAG,UAAC,KAAD,EAAgB,GAAhB,EAA6B,GAA7B,EAAwC;AAAc,SACjE,CAAC,GAAD,IAAQ,CAAC,GAAV,IAAmB,KAAK,IAAI,GAAT,IAAgB,KAAK,IAD0B,GAAA;AAErE,CAFD;;AAIA,IAAM,cAAc,GAAG,UAAC,KAAD,EAAgB,GAAhB,EAA6B,GAA7B,EAAwC;AAAc,SACxE,CAAC,GAAD,IAAQ,CAAC,GAAV,IAAkB,KAAK,IAAI,GAA3B,IAAkC,KAAK,IADkC,GAAA;AAE5E,CAFD;AAIA;;;;;AAGA,IAAA,gBAAA;AAAA;AAAA,YAAA;AAKI,WAAA,gBAAA,CAAoB,IAApB,EAAqC;AAAjB,SAAA,IAAA,GAAA,IAAA;AAAsB;AAE1C;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,KAAA,GAAP,UAAa,KAAb,EAA0B,SAA1B,EAAyC;AACrC,QAAM,IAAI,GAAG,KAAK,CAAC,QAAN,EAAb;AACA,QAAM,MAAM,GAAG,IAAI,CAAC,IAAD,CAAnB;AACA,QAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAV,EAAD,CAAxB;;AAEA,QAAK,MAAM,IAAI,WAAX,IAA4B,CAAC,MAAD,IAAW,CAAC,WAA5C,EAA0D;AACtD,aAAO,KAAP;AACH;;AAEK,QAAA,EAAA,GAAA,KAAA,eAAA,EAAA;AAAA,QAAC,GAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,QAAM,EAAA,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,QAAM,GAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAN;;AACN,QAAM,MAAM,GAAG,IAAI,IAAI,WAAW,GAAG,CAAC,EAAJ,GAAS,EAAxB,CAAnB;AAEA,WAAO,QAAQ,CAAC,KAAD,EAAQ,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,MAAd,CAAT,EAAiC,GAAG,IAAI,EAAxC,CAAR,CAAf;AACH,GAbM;AAeP;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,QAAjB,EAA8C;AAClC,QAAA,EAAA,GAAA,QAAA,CAAA,GAAA;AAAA,QAAA,GAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,GAAA,EAAA;AAAA,QAAgB,EAAA,GAAA,QAAA,CAAA,GAAhB;AAAA,QAAgB,GAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,GAAA,EAAhB;AAAA,QAAgC,EAAA,GAAA,QAAA,CAAA,IAAhC;AAAA,QAAgC,IAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,IAAA,GAAA,EAAhC;AAER,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,IAAL,GAAY,IAAZ;AACH,GANM;AAQP;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,IAAA,GAAP,UAAY,CAAZ,EAAoB;AAChB,QAAM,KAAK,GAAG,KAAK,IAAL,CAAU,KAAxB;;AAEA,QAAI,CAAC,KAAL,EAAY;AAAE,aAAO,EAAP;AAAY;;AAE1B,QAAM,IAAI,GAAG,EAAb;;AACM,QAAA,EAAA,GAAA,KAAA,eAAA,EAAA;AAAA,QAAC,GAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,QAAM,GAAA,GAAA,EAAA,CAAA,CAAA,CAAN;;AACN,QAAM,SAAS,GAAG,KAAK,IAAL,CAAU,eAAV,CAA0B,KAA1B,CAAlB;;AAEA,QAAI,IAAI,CAAC,GAAD,CAAR,EAAe;AACV,MAAA,IAAc,CAAC,IAAf,CAAoB;AAAE,QAAA,IAAI,EAAE,SAAS,CAAC,EAAlB;AAAsB,QAAA,KAAK,EAAE,QAAQ,CAAC,KAAK,GAAN,EAAW,GAAX;AAArC,OAApB;AACJ;;AAED,QAAI,IAAI,CAAC,GAAD,CAAR,EAAe;AACV,MAAA,IAAc,CAAC,IAAf,CAAoB;AAAE,QAAA,IAAI,EAAE,SAAS,CAAC,EAAlB;AAAsB,QAAA,KAAK,EAAE,QAAQ,CAAC,KAAK,GAAN,EAAW,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,GAAb,CAAX;AAArC,OAApB;AACJ;;AAED,WAAO,KAAK,GAAL,CAAS,QAAT,OAAwB,GAAxB,GAA8B,IAAI,CAAC,OAAL,EAA9B,GAA+C,IAAtD;AACH,GAlBM;AAoBP;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,cAAA,GAAP,UAAsB,CAAtB,EAA+B,EAA/B,EAAuC;AACnC,WAAO,KAAP;AACH,GAFM;AAIP;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,GAAlB,EAA6B,GAA7B,EAAwC,CAAxC,EAAgD;AAC5C,WAAO,CAAC,GAAD,EAAM,GAAN,CAAP;AACH,GAFM;AAIP;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACU,QAAA,EAAA,GAAA,KAAA,eAAA,EAAA;AAAA,QAAC,GAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,QAAM,GAAA,GAAA,EAAA,CAAA,CAAA,CAAN;;AAEN,QAAI,CAAC,GAAD,IAAQ,CAAC,GAAb,EAAkB;AACd,aAAO,CAAP;AACH;;AAED,QAAI,GAAG,GAAG,EAAN,IAAY,GAAG,GAAG,EAAtB,EAA0B;AACtB,aAAO,CAAP;AACH;;AAED,WAAO,CAAP;AACH,GAZM;AAcP;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,aAAA,GAAP,UAAqB,KAArB,EAAgC;AAC5B,QAAI,CAAC,KAAK,WAAL,CAAiB,KAAjB,CAAL,EAA8B;AAAE,aAAO,CAAC,CAAR;AAAY;;AAE5C,QAAM,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,QAAN,KAAmB,EAA9B,CAAd;AAEA,WAAO,KAAK,GAAL,CAAS,QAAT,OAAwB,KAAK,eAAL,GAAuB,CAAvB,CAAxB,GAAoD,KAApD,GAA6D,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB,CAAtF;AACH,GANM;AAQP;;;;;AAGO,EAAA,gBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,KAAnB,EAA8B;AAC1B,QAAM,OAAO,GAAG,KAAK,GAAL,CAAS,QAAT,OAAwB,KAAK,eAAL,GAAuB,CAAvB,CAAxC;AACA,QAAM,SAAS,GAAG,OAAO,GAAG,cAAH,GAAoB,OAA7C;AAEA,WAAO,SAAS,CAAC,KAAK,CAAC,QAAN,EAAD,EAAmB,KAAK,GAAL,CAAS,QAAT,EAAnB,EAAwC,KAAK,GAAL,CAAS,QAAT,EAAxC,CAAhB;AACH,GALM;;AAOC,EAAA,gBAAA,CAAA,SAAA,CAAA,eAAA,GAAR,YAAA;AACI,QAAM,OAAO,GAAG,KAAK,GAAL,CAAS,QAAT,EAAhB;AACA,QAAM,OAAO,GAAG,KAAK,GAAL,CAAS,QAAT,EAAhB;AAEA,WAAO,CACH,IAAI,CAAC,GAAL,CAAS,OAAT,EAAkB,OAAlB,CADG,EAEH,IAAI,CAAC,GAAL,CAAS,OAAT,EAAkB,OAAlB,CAFG,CAAP;AAIH,GARO;;AASZ,SAAA,gBAAA;AAAC,CAxHD,EAAA","sourceRoot":"","sourcesContent":["import { cloneDate } from '@progress/kendo-date-math';\nvar setHours = function (date, hours) {\n    var clone = cloneDate(date);\n    clone.setHours(hours);\n    return clone;\n};\nvar isAM = function (value) { return value !== null && value < 12; };\nvar isPM = function (value) { return value !== null && (!value || value > 11); };\nvar inRange = function (value, min, max) { return ((!min && !max) || (value >= min && value <= max)); };\nvar inReverseRange = function (value, min, max) { return ((!min && !max) || value >= min || value <= max); };\n/**\n * @hidden\n */\nvar DayPeriodService = /** @class */ (function () {\n    function DayPeriodService(intl) {\n        this.intl = intl;\n    }\n    /**\n     * @hidden\n     */\n    DayPeriodService.prototype.apply = function (value, candidate) {\n        var hour = value.getHours();\n        var hourAM = isAM(hour);\n        var candidateAM = isAM(candidate.getHours());\n        if ((hourAM && candidateAM) || (!hourAM && !candidateAM)) {\n            return value;\n        }\n        var _a = this.normalizedRange(), min = _a[0], _b = _a[1], max = _b === void 0 ? 24 : _b;\n        var result = hour + (candidateAM ? -12 : 12);\n        return setHours(value, Math.min(Math.max(min, result), (max || 24)));\n    };\n    /**\n     * @hidden\n     */\n    DayPeriodService.prototype.configure = function (settings) {\n        var _a = settings.min, min = _a === void 0 ? this.min : _a, _b = settings.max, max = _b === void 0 ? this.max : _b, _c = settings.part, part = _c === void 0 ? this.part : _c;\n        this.min = min;\n        this.max = max;\n        this.part = part;\n    };\n    /**\n     * @hidden\n     */\n    DayPeriodService.prototype.data = function (_) {\n        var names = this.part.names;\n        if (!names) {\n            return [];\n        }\n        var data = [];\n        var _a = this.normalizedRange(), min = _a[0], max = _a[1];\n        var dayPeriod = this.intl.dateFormatNames(names);\n        if (isAM(min)) {\n            data.push({ text: dayPeriod.am, value: setHours(this.min, min) });\n        }\n        if (isPM(max)) {\n            data.push({ text: dayPeriod.pm, value: setHours(this.min, Math.max(12, max)) });\n        }\n        return this.min.getHours() !== min ? data.reverse() : data;\n    };\n    /**\n     * @hidden\n     */\n    DayPeriodService.prototype.isRangeChanged = function (_, __) {\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    DayPeriodService.prototype.limitRange = function (min, max, _) {\n        return [min, max];\n    };\n    /**\n     * @hidden\n     */\n    DayPeriodService.prototype.total = function () {\n        var _a = this.normalizedRange(), min = _a[0], max = _a[1];\n        if (!min && !max) {\n            return 2;\n        }\n        if (min > 11 || max < 12) {\n            return 1;\n        }\n        return 2;\n    };\n    /**\n     * @hidden\n     */\n    DayPeriodService.prototype.selectedIndex = function (value) {\n        if (!this.valueInList(value)) {\n            return -1;\n        }\n        var index = Math.floor(value.getHours() / 12);\n        return this.min.getHours() === this.normalizedRange()[0] ? index : (index === 0 ? 1 : 0);\n    };\n    /**\n     * @hidden\n     */\n    DayPeriodService.prototype.valueInList = function (value) {\n        var reverse = this.min.getHours() !== this.normalizedRange()[0];\n        var isInRange = reverse ? inReverseRange : inRange;\n        return isInRange(value.getHours(), this.min.getHours(), this.max.getHours());\n    };\n    DayPeriodService.prototype.normalizedRange = function () {\n        var minHour = this.min.getHours();\n        var maxHour = this.max.getHours();\n        return [\n            Math.min(minHour, maxHour),\n            Math.max(minHour, maxHour)\n        ];\n    };\n    return DayPeriodService;\n}());\nexport { DayPeriodService };\n//# sourceMappingURL=DayPeriodService.js.map"]},"metadata":{},"sourceType":"module"}