{"ast":null,"code":"import Matrix from '../geometry/matrix';\nimport toMatrix from '../geometry/to-matrix';\nvar IDENTITY_MATRIX_HASH = Matrix.IDENTITY.toString();\nvar Measurable = {\n  extend: function (proto) {\n    proto.bbox = this.bbox;\n    proto.geometryChange = this.geometryChange;\n  },\n  bbox: function (transformation) {\n    var combinedMatrix = toMatrix(this.currentTransform(transformation));\n    var matrixHash = combinedMatrix ? combinedMatrix.toString() : IDENTITY_MATRIX_HASH;\n    var bbox;\n\n    if (this._bboxCache && this._matrixHash === matrixHash) {\n      bbox = this._bboxCache.clone();\n    } else {\n      bbox = this._bbox(combinedMatrix);\n      this._bboxCache = bbox ? bbox.clone() : null;\n      this._matrixHash = matrixHash;\n    }\n\n    var strokeWidth = this.options.get(\"stroke.width\");\n\n    if (strokeWidth && bbox) {\n      bbox.expand(strokeWidth / 2);\n    }\n\n    return bbox;\n  },\n  geometryChange: function () {\n    delete this._bboxCache;\n    this.trigger(\"geometryChange\", {\n      element: this\n    });\n  }\n};\nexport default Measurable;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/mixins/measurable.js"],"names":["Matrix","toMatrix","IDENTITY_MATRIX_HASH","IDENTITY","toString","Measurable","extend","proto","bbox","geometryChange","transformation","combinedMatrix","currentTransform","matrixHash","_bboxCache","_matrixHash","clone","_bbox","strokeWidth","options","get","expand","trigger","element"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,IAAIC,oBAAoB,GAAGF,MAAM,CAACG,QAAP,CAAgBC,QAAhB,EAA3B;AAEA,IAAIC,UAAU,GAAG;AACbC,EAAAA,MAAM,EAAE,UAASC,KAAT,EAAgB;AACpBA,IAAAA,KAAK,CAACC,IAAN,GAAa,KAAKA,IAAlB;AACAD,IAAAA,KAAK,CAACE,cAAN,GAAuB,KAAKA,cAA5B;AACH,GAJY;AAMbD,EAAAA,IAAI,EAAE,UAASE,cAAT,EAAyB;AAC3B,QAAIC,cAAc,GAAGV,QAAQ,CAAC,KAAKW,gBAAL,CAAsBF,cAAtB,CAAD,CAA7B;AACA,QAAIG,UAAU,GAAGF,cAAc,GAAGA,cAAc,CAACP,QAAf,EAAH,GAA+BF,oBAA9D;AACA,QAAIM,IAAJ;;AAEA,QAAI,KAAKM,UAAL,IAAmB,KAAKC,WAAL,KAAqBF,UAA5C,EAAwD;AACpDL,MAAAA,IAAI,GAAG,KAAKM,UAAL,CAAgBE,KAAhB,EAAP;AACH,KAFD,MAEO;AACHR,MAAAA,IAAI,GAAG,KAAKS,KAAL,CAAWN,cAAX,CAAP;AACA,WAAKG,UAAL,GAAkBN,IAAI,GAAGA,IAAI,CAACQ,KAAL,EAAH,GAAkB,IAAxC;AACA,WAAKD,WAAL,GAAmBF,UAAnB;AACH;;AAED,QAAIK,WAAW,GAAG,KAAKC,OAAL,CAAaC,GAAb,CAAiB,cAAjB,CAAlB;;AACA,QAAIF,WAAW,IAAIV,IAAnB,EAAyB;AACrBA,MAAAA,IAAI,CAACa,MAAL,CAAYH,WAAW,GAAG,CAA1B;AACH;;AAED,WAAOV,IAAP;AACH,GAzBY;AA2BbC,EAAAA,cAAc,EAAE,YAAW;AACvB,WAAO,KAAKK,UAAZ;AACA,SAAKQ,OAAL,CAAa,gBAAb,EAA+B;AAC3BC,MAAAA,OAAO,EAAE;AADkB,KAA/B;AAGH;AAhCY,CAAjB;AAmCA,eAAelB,UAAf","sourcesContent":["import Matrix from '../geometry/matrix';\nimport toMatrix from '../geometry/to-matrix';\n\nvar IDENTITY_MATRIX_HASH = Matrix.IDENTITY.toString();\n\nvar Measurable = {\n    extend: function(proto) {\n        proto.bbox = this.bbox;\n        proto.geometryChange = this.geometryChange;\n    },\n\n    bbox: function(transformation) {\n        var combinedMatrix = toMatrix(this.currentTransform(transformation));\n        var matrixHash = combinedMatrix ? combinedMatrix.toString() : IDENTITY_MATRIX_HASH;\n        var bbox;\n\n        if (this._bboxCache && this._matrixHash === matrixHash) {\n            bbox = this._bboxCache.clone();\n        } else {\n            bbox = this._bbox(combinedMatrix);\n            this._bboxCache = bbox ? bbox.clone() : null;\n            this._matrixHash = matrixHash;\n        }\n\n        var strokeWidth = this.options.get(\"stroke.width\");\n        if (strokeWidth && bbox) {\n            bbox.expand(strokeWidth / 2);\n        }\n\n        return bbox;\n    },\n\n    geometryChange: function() {\n        delete this._bboxCache;\n        this.trigger(\"geometryChange\", {\n            element: this\n        });\n    }\n};\n\nexport default Measurable;"]},"metadata":{},"sourceType":"module"}