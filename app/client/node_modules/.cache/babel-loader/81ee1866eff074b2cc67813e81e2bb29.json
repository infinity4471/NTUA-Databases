{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { isString, isDate } from './utils';\n/**\n * @hidden\n * Creates a single arity function which wraps the value based on the provided predicate.\n * @example\n * ```\n * wrapIf(() => ignoreCase) `tolower(${field})`\n * //ignoreCase=true -> tolower(${field})`\n * //ignoreCase=false -> ${field}`\n * ```\n */\n\nexport var wrapIf = function (predicate) {\n  return function (str) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    return predicate() ? \"\" + str[0] + args[0] + str[1] : args[0];\n  };\n};\n/**\n * @hidden\n */\n\nexport var toUTC = function (date) {\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n};\n/**\n * @hidden\n */\n\nexport var quote = function (_a) {\n  var field = _a.field,\n      value = _a.value,\n      ignoreCase = _a.ignoreCase,\n      operator = _a.operator;\n  return {\n    value: \"'\" + value.replace(/'/g, \"''\") + \"'\",\n    field: field,\n    ignoreCase: ignoreCase,\n    operator: operator\n  };\n};\n/**\n * @hidden\n */\n\nexport var encodeValue = function (_a) {\n  var field = _a.field,\n      value = _a.value,\n      ignoreCase = _a.ignoreCase,\n      operator = _a.operator;\n  return {\n    value: \"\" + encodeURIComponent(value),\n    field: field,\n    ignoreCase: ignoreCase,\n    operator: operator\n  };\n};\n/**\n * @hidden\n */\n\nexport var toLower = function (_a) {\n  var field = _a.field,\n      value = _a.value,\n      ignoreCase = _a.ignoreCase,\n      operator = _a.operator;\n  return {\n    field: wrapIf(function () {\n      return ignoreCase;\n    })(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"tolower(\", \")\"], [\"tolower(\", \")\"])), field),\n    value: value,\n    ignoreCase: ignoreCase,\n    operator: operator\n  };\n};\n/**\n * @hidden\n */\n\nexport var normalizeField = function (_a) {\n  var field = _a.field,\n      value = _a.value,\n      ignoreCase = _a.ignoreCase,\n      operator = _a.operator;\n  return {\n    value: value,\n    field: field.replace(/\\./g, \"/\"),\n    ignoreCase: ignoreCase,\n    operator: operator\n  };\n};\n/**\n * @hidden\n */\n\nexport var isStringValue = function (x) {\n  return isString(x.value);\n};\n/**\n * @hidden\n */\n\nexport var isDateValue = function (x) {\n  return isDate(x.value);\n};\n/**\n * @hidden\n */\n\nexport var serializeFilters = function (map, join) {\n  return function (filter) {\n    var brackets = wrapIf(function () {\n      return filter.filters.length > 1;\n    });\n    return brackets(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"(\", \")\"], [\"(\", \")\"])), filter.filters.map(map).join(join(filter)));\n  };\n};\nvar templateObject_1, templateObject_2;","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-data-query/dist/es/filter-serialization.common.js"],"names":["tslib_1","isString","isDate","wrapIf","predicate","str","args","_i","arguments","length","toUTC","date","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","quote","_a","field","value","ignoreCase","operator","replace","encodeValue","encodeURIComponent","toLower","templateObject_1","__makeTemplateObject","normalizeField","isStringValue","x","isDateValue","serializeFilters","map","join","filter","brackets","filters","templateObject_2"],"mappings":"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","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { isString, isDate } from './utils';\n/**\n * @hidden\n * Creates a single arity function which wraps the value based on the provided predicate.\n * @example\n * ```\n * wrapIf(() => ignoreCase) `tolower(${field})`\n * //ignoreCase=true -> tolower(${field})`\n * //ignoreCase=false -> ${field}`\n * ```\n */\nexport var wrapIf = function (predicate) { return function (str) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    return predicate() ? \"\" + str[0] + args[0] + str[1] : args[0];\n}; };\n/**\n * @hidden\n */\nexport var toUTC = function (date) {\n    return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n};\n/**\n * @hidden\n */\nexport var quote = function (_a) {\n    var field = _a.field, value = _a.value, ignoreCase = _a.ignoreCase, operator = _a.operator;\n    return ({\n        value: \"'\" + value.replace(/'/g, \"''\") + \"'\",\n        field: field,\n        ignoreCase: ignoreCase,\n        operator: operator\n    });\n};\n/**\n * @hidden\n */\nexport var encodeValue = function (_a) {\n    var field = _a.field, value = _a.value, ignoreCase = _a.ignoreCase, operator = _a.operator;\n    return ({\n        value: \"\" + encodeURIComponent(value),\n        field: field,\n        ignoreCase: ignoreCase,\n        operator: operator\n    });\n};\n/**\n * @hidden\n */\nexport var toLower = function (_a) {\n    var field = _a.field, value = _a.value, ignoreCase = _a.ignoreCase, operator = _a.operator;\n    return ({\n        field: wrapIf(function () { return ignoreCase; })(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"tolower(\", \")\"], [\"tolower(\", \")\"])), field),\n        value: value,\n        ignoreCase: ignoreCase,\n        operator: operator\n    });\n};\n/**\n * @hidden\n */\nexport var normalizeField = function (_a) {\n    var field = _a.field, value = _a.value, ignoreCase = _a.ignoreCase, operator = _a.operator;\n    return ({\n        value: value,\n        field: field.replace(/\\./g, \"/\"),\n        ignoreCase: ignoreCase,\n        operator: operator\n    });\n};\n/**\n * @hidden\n */\nexport var isStringValue = function (x) { return isString(x.value); };\n/**\n * @hidden\n */\nexport var isDateValue = function (x) { return isDate(x.value); };\n/**\n * @hidden\n */\nexport var serializeFilters = function (map, join) { return function (filter) {\n    var brackets = wrapIf(function () { return filter.filters.length > 1; });\n    return brackets(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"(\", \")\"], [\"(\",\n        \")\"])), filter.filters\n        .map(map)\n        .join(join(filter)));\n}; };\nvar templateObject_1, templateObject_2;\n"]},"metadata":{},"sourceType":"module"}