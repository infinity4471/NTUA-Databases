{"ast":null,"code":"var _jsxFileName = \"/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/MenuSelector.js\";\nimport React from 'react';\nimport { ComboBox } from '@progress/kendo-react-dropdowns';\nimport { TransactionTable } from './Tables';\nimport io from 'socket.io-client';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '@progress/kendo-theme-default/dist/all.css';\nconst url = \"http://localhost:8000\";\n\nfunction fixDate(date) {\n  if (date === undefined) return undefined;\n  let myDate = date.getFullYear() + \"-\";\n  var month = date.getMonth() + 1;\n  if (month < 10) myDate += \"0\";\n  myDate += month + \"-\";\n  var day = date.getDate();\n  if (day < 10) myDate += \"0\";\n  myDate += day;\n  return myDate;\n}\n\nconst TransactionSelector = () => {\n  const [state, setState] = React.useState({\n    store: undefined,\n    payment_method: undefined,\n    date: undefined,\n    category: undefined,\n    transaction_data: [],\n    possible_payment_methods: ['', 'Credit Card', 'Cash'],\n    names: [],\n    socket: io(url)\n  });\n\n  const handleName = event => {\n    setState({ ...state,\n      store: event.target.value\n    });\n  };\n\n  const handlePayment = event => {\n    switch (event.target.value) {\n      case 'Credit Card':\n        state.payment_method = 0;\n        break;\n\n      case 'Cash':\n        state.payment_method = 1;\n        break;\n\n      default:\n        state.payment_method = undefined;\n    }\n\n    state.socket.emit('FETCH_TRANSACTIONS', {\n      'store': state.store,\n      'payment_method': state.payment_method,\n      'Date_Time': fixDate(state.date),\n      'category': state.category\n    });\n  };\n\n  const handleDate = date => {\n    state.date = date;\n    state.socket.emit('FETCH_TRANSACTIONS', {\n      'store': state.store,\n      'payment_method': state.payment_method,\n      'Date_Time': fixDate(state.date),\n      'category': state.category\n    });\n  };\n\n  state.socket.on('TRANSACTION_DATA', data => {\n    setState({ ...state,\n      transaction_data: data\n    });\n  });\n  state.socket.on('STORE_ADDRESSES', data => {\n    setState({ ...state,\n      names: data\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, \" \\u0395\\u03C0\\u03B9\\u03BB\\u03BF\\u03B3\\u03AE \\u039A\\u03B1\\u03C4\\u03B1\\u03C3\\u03C4\\u03AE\\u03BC\\u03B1\\u03C4\\u03BF\\u03C2 \"), /*#__PURE__*/React.createElement(ComboBox, {\n    data: state.names,\n    onChange: handleName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(ComboBox, {\n    data: state.possible_payment_methods,\n    onChange: handlePayment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: state.date,\n    onChange: handleDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(TransactionTable, {\n    data: state.transaction_data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }\n  }));\n};\n\nclass ClientSelector extends react.Component {\n  constructor(props) {\n    this.socket = io(url);\n    this.item = undefined;\n    this.names = [];\n    this.customer_transactions = [];\n    this.customer_data = [];\n  }\n\n  componentDidMount() {\n    this.socket.on('CUSTOMER_NAMES', data => {\n      setState({ ...state,\n        names: data\n      });\n    });\n    this.socket.on('CUSTOMER_DATA', data => {\n      this.customer_data = Object.values(data)[0];\n      this.socket.emit('FETCH_CUSTOMER_TRANSACTIONS', this.customer_data['Card_Number']);\n    });\n    this.socket.on('CUSTOMER_TRANSACTIONS', data => {\n      this.customer_transactions = data;\n      console.log(data);\n    });\n  }\n\n  handleName(event) {\n    this.item = event.target.value;\n    this.socket.emit('SELECT_CUSTOMER', event.target.value);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 4\n      }\n    }, \" \\u0395\\u03C0\\u03B9\\u03BB\\u03BF\\u03B3\\u03AE \\u03A0\\u03B5\\u03BB\\u03AC\\u03C4\\u03B7 \"), /*#__PURE__*/React.createElement(ComboBox, {\n      data: state.names,\n      onChange: handleName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(TransactionTable, {\n      data: state.customer_transactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 4\n      }\n    }));\n  }\n\n}\n/*\nconst ClientSelector = () => {\n\tconst [state, setState] = React.useState({\n\t\titem: undefined, \n\t\tnames: [], \n\t\tcustomer_transactions: [],\n\t\tcustomer_data: [],\n\t\tsocket: io( url )\n\t});\n\tconst handleName = (event) => {\n\t\tstate.item = event.target.value\n\t\tsetState({ ...state, item: event.target.value })\t\n\t\tstate.socket.emit( 'SELECT_CUSTOMER', event.target.value )\n\t}\n\tstate.socket.on('CUSTOMER_NAMES', data => {\n\t\tsetState({...state, names: data})\n\t});\n\tstate.socket.on('CUSTOMER_DATA', data => {\n\t\tstate.customer_data = Object.values( data )[ 0 ]\n\t\tsetState({ ...state, customer_data: Object.values( data )[ 0 ] })\n\t\tstate.socket.emit( 'FETCH_CUSTOMER_TRANSACTIONS', state.customer_data[ 'Card_Number' ] )\n\t});\n\tstate.socket.on('CUSTOMER_TRANSACTIONS', data => {\n\t\tstate.customer_transactions = data\n\t\tconsole.log( data )\n\t\tsetState({ ...state, customer_transactions: data })\n\t});\n\treturn (\n\t\t<div className=\"Selector\">\n\t\t<h1> Επιλογή Πελάτη </h1>\n\t\t<ComboBox data={state.names} onChange={handleName}/>\n\t\t<TransactionTable data={state.customer_transactions}/>\n\t\t</div>\n\t);\n}\n*/\n\n\nexport { TransactionSelector, ClientSelector };","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/src/components/MenuSelector.js"],"names":["React","ComboBox","TransactionTable","io","DatePicker","url","fixDate","date","undefined","myDate","getFullYear","month","getMonth","day","getDate","TransactionSelector","state","setState","useState","store","payment_method","category","transaction_data","possible_payment_methods","names","socket","handleName","event","target","value","handlePayment","emit","handleDate","on","data","ClientSelector","react","Component","constructor","props","item","customer_transactions","customer_data","componentDidMount","Object","values","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ComboBox } from '@progress/kendo-react-dropdowns';\nimport {TransactionTable} from './Tables';\nimport io from 'socket.io-client';\n\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '@progress/kendo-theme-default/dist/all.css';\n\nconst url = \"http://localhost:8000\"\n\nfunction fixDate( date ) {\n\tif( date === undefined ) return undefined;\n\tlet myDate = date.getFullYear() + \"-\"\n\tvar month = (date.getMonth() + 1)\n\tif( month < 10 ) myDate += \"0\";\n\tmyDate += month + \"-\"\n\tvar day = date.getDate();\n\tif( day < 10 ) myDate += \"0\";\n\tmyDate += day\n\treturn myDate\n}\n\nconst TransactionSelector = () => {\n\tconst [state, setState] = React.useState({\n\t\tstore: undefined, \n\t\tpayment_method: undefined,\n\t\tdate: undefined,\n\t\tcategory: undefined,\n\t\ttransaction_data: [], \n\t\tpossible_payment_methods: [ '', 'Credit Card', 'Cash' ],\n\t\tnames: [],\n\t\tsocket: io( url )\n\t});\n\tconst handleName = (event) => {\n\t\tsetState({ ...state, store: event.target.value })\n\t}\n\tconst handlePayment = (event) => {\n\t\tswitch( event.target.value ) {\n\t\t\tcase 'Credit Card':\n\t\t\t\tstate.payment_method = 0\n\t\t\t\tbreak\n\t\t\tcase 'Cash':\n\t\t\t\tstate.payment_method = 1\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tstate.payment_method = undefined\n\t\t}\n\t\tstate.socket.emit('FETCH_TRANSACTIONS', ( { 'store': state.store, \n\t\t\t'payment_method': state.payment_method,\n\t\t\t'Date_Time': fixDate( state.date ), \n\t\t\t'category': state.category } ) )\n\t}\n\tconst handleDate = (date) => {\n\t\tstate.date = date\n\t\tstate.socket.emit('FETCH_TRANSACTIONS', ( { 'store': state.store, \n\t\t\t'payment_method': state.payment_method,\n\t\t\t'Date_Time': fixDate( state.date ), \n\t\t\t'category': state.category } ) )\n\t}\n\tstate.socket.on('TRANSACTION_DATA', data => {\n\t\tsetState({ ...state, transaction_data: data })\t\n\t});\n\tstate.socket.on('STORE_ADDRESSES', data => {\n\t\tsetState({ ...state, names: data })\t\n\t});\n\treturn (\n\t\t<div className=\"Selector\">\n\t\t<h2> Επιλογή Καταστήματος </h2>\n\t\t<ComboBox data={state.names} onChange={handleName}/>\n\t\t<ComboBox data={state.possible_payment_methods} onChange={handlePayment}/>\n\t\t<DatePicker selected={state.date} onChange={handleDate}/>\n\t\t<TransactionTable data={state.transaction_data}/>\n\t\t</div>\n\t);\n}\n\nclass ClientSelector extends react.Component {\n\tconstructor( props ) {\n\t\tthis.socket = io( url )\n\t\tthis.item = undefined\n\t\tthis.names = []\n\t\tthis.customer_transactions = []\n\t\tthis.customer_data = []\n\t}\n\tcomponentDidMount() {\n\t\tthis.socket.on('CUSTOMER_NAMES', data => {\n\t\t\tsetState({...state, names: data})\n\t\t});\n\t\tthis.socket.on('CUSTOMER_DATA', data => {\n\t\t\tthis.customer_data = Object.values( data )[ 0 ]\n\t\t\tthis.socket.emit( 'FETCH_CUSTOMER_TRANSACTIONS', this.customer_data[ 'Card_Number' ] )\n\t\t});\n\t\tthis.socket.on('CUSTOMER_TRANSACTIONS', data => {\n\t\t\tthis.customer_transactions = data\n\t\t\tconsole.log( data )\n\t\t});\n\n\t}\n\thandleName( event ) {\n\t\tthis.item = event.target.value\n\t\tthis.socket.emit( 'SELECT_CUSTOMER', event.target.value )\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Selector\">\n\t\t\t<h1> Επιλογή Πελάτη </h1>\n\t\t\t<ComboBox data={state.names} onChange={handleName}/>\n\t\t\t<TransactionTable data={state.customer_transactions}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/*\nconst ClientSelector = () => {\n\tconst [state, setState] = React.useState({\n\t\titem: undefined, \n\t\tnames: [], \n\t\tcustomer_transactions: [],\n\t\tcustomer_data: [],\n\t\tsocket: io( url )\n\t});\n\tconst handleName = (event) => {\n\t\tstate.item = event.target.value\n\t\tsetState({ ...state, item: event.target.value })\t\n\t\tstate.socket.emit( 'SELECT_CUSTOMER', event.target.value )\n\t}\n\tstate.socket.on('CUSTOMER_NAMES', data => {\n\t\tsetState({...state, names: data})\n\t});\n\tstate.socket.on('CUSTOMER_DATA', data => {\n\t\tstate.customer_data = Object.values( data )[ 0 ]\n\t\tsetState({ ...state, customer_data: Object.values( data )[ 0 ] })\n\t\tstate.socket.emit( 'FETCH_CUSTOMER_TRANSACTIONS', state.customer_data[ 'Card_Number' ] )\n\t});\n\tstate.socket.on('CUSTOMER_TRANSACTIONS', data => {\n\t\tstate.customer_transactions = data\n\t\tconsole.log( data )\n\t\tsetState({ ...state, customer_transactions: data })\n\t});\n\treturn (\n\t\t<div className=\"Selector\">\n\t\t<h1> Επιλογή Πελάτη </h1>\n\t\t<ComboBox data={state.names} onChange={handleName}/>\n\t\t<TransactionTable data={state.customer_transactions}/>\n\t\t</div>\n\t);\n}\n*/\nexport { TransactionSelector, ClientSelector };\n"]},"metadata":{},"sourceType":"module"}