{"ast":null,"code":"export function swing(position) {\n  return 0.5 - Math.cos(position * Math.PI) / 2;\n}\nexport function linear(position) {\n  return position;\n}\nexport function easeOutElastic(position, time, start, diff) {\n  var s = 1.70158,\n      p = 0,\n      a = diff;\n\n  if (position === 0) {\n    return start;\n  }\n\n  if (position === 1) {\n    return start + diff;\n  }\n\n  if (!p) {\n    p = 0.5;\n  }\n\n  if (a < Math.abs(diff)) {\n    a = diff;\n    s = p / 4;\n  } else {\n    s = p / (2 * Math.PI) * Math.asin(diff / a);\n  }\n\n  return a * Math.pow(2, -10 * position) * Math.sin((Number(position) - s) * (1.1 * Math.PI) / p) + diff + start;\n}","map":{"version":3,"sources":["/home/infinity/Desktop/supermarket/NTUA-Databases/app/client/node_modules/@progress/kendo-drawing/dist/es/animations/easing-functions.js"],"names":["swing","position","Math","cos","PI","linear","easeOutElastic","time","start","diff","s","p","a","abs","asin","pow","sin","Number"],"mappings":"AAAA,OAAO,SAASA,KAAT,CAAeC,QAAf,EAAyB;AAC5B,SAAO,MAAMC,IAAI,CAACC,GAAL,CAASF,QAAQ,GAAGC,IAAI,CAACE,EAAzB,IAA+B,CAA5C;AACH;AAED,OAAO,SAASC,MAAT,CAAgBJ,QAAhB,EAA0B;AAC7B,SAAOA,QAAP;AACH;AAED,OAAO,SAASK,cAAT,CAAwBL,QAAxB,EAAkCM,IAAlC,EAAwCC,KAAxC,EAA+CC,IAA/C,EAAqD;AACxD,MAAIC,CAAC,GAAG,OAAR;AAAA,MACIC,CAAC,GAAG,CADR;AAAA,MAEIC,CAAC,GAAGH,IAFR;;AAIA,MAAIR,QAAQ,KAAK,CAAjB,EAAoB;AAChB,WAAOO,KAAP;AACH;;AAED,MAAIP,QAAQ,KAAK,CAAjB,EAAoB;AAChB,WAAOO,KAAK,GAAGC,IAAf;AACH;;AAED,MAAI,CAACE,CAAL,EAAQ;AACJA,IAAAA,CAAC,GAAG,GAAJ;AACH;;AAED,MAAIC,CAAC,GAAGV,IAAI,CAACW,GAAL,CAASJ,IAAT,CAAR,EAAwB;AACpBG,IAAAA,CAAC,GAAGH,IAAJ;AACAC,IAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR;AACH,GAHD,MAGO;AACHD,IAAAA,CAAC,GAAGC,CAAC,IAAI,IAAIT,IAAI,CAACE,EAAb,CAAD,GAAoBF,IAAI,CAACY,IAAL,CAAUL,IAAI,GAAGG,CAAjB,CAAxB;AACH;;AAED,SAAOA,CAAC,GAAGV,IAAI,CAACa,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAMd,QAAlB,CAAJ,GACAC,IAAI,CAACc,GAAL,CAAS,CAACC,MAAM,CAAChB,QAAD,CAAN,GAAmBS,CAApB,KAA0B,MAAMR,IAAI,CAACE,EAArC,IAA2CO,CAApD,CADA,GACyDF,IADzD,GACgED,KADvE;AAEH","sourcesContent":["export function swing(position) {\n    return 0.5 - Math.cos(position * Math.PI) / 2;\n}\n\nexport function linear(position) {\n    return position;\n}\n\nexport function easeOutElastic(position, time, start, diff) {\n    var s = 1.70158,\n        p = 0,\n        a = diff;\n\n    if (position === 0) {\n        return start;\n    }\n\n    if (position === 1) {\n        return start + diff;\n    }\n\n    if (!p) {\n        p = 0.5;\n    }\n\n    if (a < Math.abs(diff)) {\n        a = diff;\n        s = p / 4;\n    } else {\n        s = p / (2 * Math.PI) * Math.asin(diff / a);\n    }\n\n    return a * Math.pow(2, -10 * position) *\n           Math.sin((Number(position) - s) * (1.1 * Math.PI) / p) + diff + start;\n}\n"]},"metadata":{},"sourceType":"module"}